// !bwc! I apologize that this is so ugly. If you know of a standard GNU utility that will re-indent uglified c++ code (like this), let me know...
// Generated by updateParameters.sh 







const data_Param::DType& param(const data_Param& paramType) const; data_Param::DType& param(const data_Param& paramType);
const control_Param::DType& param(const control_Param& paramType) const; control_Param::DType& param(const control_Param& paramType);
const mobility_Param::DType& param(const mobility_Param& paramType) const; mobility_Param::DType& param(const mobility_Param& paramType);
const description_Param::DType& param(const description_Param& paramType) const; description_Param::DType& param(const description_Param& paramType);
const events_Param::DType& param(const events_Param& paramType) const; events_Param::DType& param(const events_Param& paramType);
const priority_Param::DType& param(const priority_Param& paramType) const; priority_Param::DType& param(const priority_Param& paramType);
const methods_Param::DType& param(const methods_Param& paramType) const; methods_Param::DType& param(const methods_Param& paramType);
const schemes_Param::DType& param(const schemes_Param& paramType) const; schemes_Param::DType& param(const schemes_Param& paramType);
const application_Param::DType& param(const application_Param& paramType) const; application_Param::DType& param(const application_Param& paramType);
const video_Param::DType& param(const video_Param& paramType) const; video_Param::DType& param(const video_Param& paramType);
const language_Param::DType& param(const language_Param& paramType) const; language_Param::DType& param(const language_Param& paramType);
const type_Param::DType& param(const type_Param& paramType) const; type_Param::DType& param(const type_Param& paramType);
const isFocus_Param::DType& param(const isFocus_Param& paramType) const; isFocus_Param::DType& param(const isFocus_Param& paramType);
const actor_Param::DType& param(const actor_Param& paramType) const; actor_Param::DType& param(const actor_Param& paramType);
const text_Param::DType& param(const text_Param& paramType) const; text_Param::DType& param(const text_Param& paramType);
const extensions_Param::DType& param(const extensions_Param& paramType) const; extensions_Param::DType& param(const extensions_Param& paramType);
const Instance_Param::DType& param(const Instance_Param& paramType) const; Instance_Param::DType& param(const Instance_Param& paramType);
const regid_Param::DType& param(const regid_Param& paramType) const; regid_Param::DType& param(const regid_Param& paramType);
const ob_Param::DType& param(const ob_Param& paramType) const; ob_Param::DType& param(const ob_Param& paramType);
const pubGruu_Param::DType& param(const pubGruu_Param& paramType) const; pubGruu_Param::DType& param(const pubGruu_Param& paramType);
const tempGruu_Param::DType& param(const tempGruu_Param& paramType) const; tempGruu_Param::DType& param(const tempGruu_Param& paramType);
const gruu_Param::DType& param(const gruu_Param& paramType) const; gruu_Param::DType& param(const gruu_Param& paramType);
const accessType_Param::DType& param(const accessType_Param& paramType) const; accessType_Param::DType& param(const accessType_Param& paramType);
const algorithm_Param::DType& param(const algorithm_Param& paramType) const; algorithm_Param::DType& param(const algorithm_Param& paramType);
const boundary_Param::DType& param(const boundary_Param& paramType) const; boundary_Param::DType& param(const boundary_Param& paramType);
const branch_Param::DType& param(const branch_Param& paramType) const; branch_Param::DType& param(const branch_Param& paramType);
const charset_Param::DType& param(const charset_Param& paramType) const; charset_Param::DType& param(const charset_Param& paramType);
const cnonce_Param::DType& param(const cnonce_Param& paramType) const; cnonce_Param::DType& param(const cnonce_Param& paramType);
const comp_Param::DType& param(const comp_Param& paramType) const; comp_Param::DType& param(const comp_Param& paramType);
const dAlg_Param::DType& param(const dAlg_Param& paramType) const; dAlg_Param::DType& param(const dAlg_Param& paramType);
const dQop_Param::DType& param(const dQop_Param& paramType) const; dQop_Param::DType& param(const dQop_Param& paramType);
const dVer_Param::DType& param(const dVer_Param& paramType) const; dVer_Param::DType& param(const dVer_Param& paramType);
const directory_Param::DType& param(const directory_Param& paramType) const; directory_Param::DType& param(const directory_Param& paramType);
const domain_Param::DType& param(const domain_Param& paramType) const; domain_Param::DType& param(const domain_Param& paramType);
const duration_Param::DType& param(const duration_Param& paramType) const; duration_Param::DType& param(const duration_Param& paramType);
const expiration_Param::DType& param(const expiration_Param& paramType) const; expiration_Param::DType& param(const expiration_Param& paramType);
const expires_Param::DType& param(const expires_Param& paramType) const; expires_Param::DType& param(const expires_Param& paramType);
const filename_Param::DType& param(const filename_Param& paramType) const; filename_Param::DType& param(const filename_Param& paramType);
const fromTag_Param::DType& param(const fromTag_Param& paramType) const; fromTag_Param::DType& param(const fromTag_Param& paramType);
const handling_Param::DType& param(const handling_Param& paramType) const; handling_Param::DType& param(const handling_Param& paramType);
const id_Param::DType& param(const id_Param& paramType) const; id_Param::DType& param(const id_Param& paramType);
const lr_Param::DType& param(const lr_Param& paramType) const; lr_Param::DType& param(const lr_Param& paramType);
const maddr_Param::DType& param(const maddr_Param& paramType) const; maddr_Param::DType& param(const maddr_Param& paramType);
const method_Param::DType& param(const method_Param& paramType) const; method_Param::DType& param(const method_Param& paramType);
const micalg_Param::DType& param(const micalg_Param& paramType) const; micalg_Param::DType& param(const micalg_Param& paramType);
const mode_Param::DType& param(const mode_Param& paramType) const; mode_Param::DType& param(const mode_Param& paramType);
const name_Param::DType& param(const name_Param& paramType) const; name_Param::DType& param(const name_Param& paramType);
const nc_Param::DType& param(const nc_Param& paramType) const; nc_Param::DType& param(const nc_Param& paramType);
const nonce_Param::DType& param(const nonce_Param& paramType) const; nonce_Param::DType& param(const nonce_Param& paramType);
const opaque_Param::DType& param(const opaque_Param& paramType) const; opaque_Param::DType& param(const opaque_Param& paramType);
const permission_Param::DType& param(const permission_Param& paramType) const; permission_Param::DType& param(const permission_Param& paramType);
const protocol_Param::DType& param(const protocol_Param& paramType) const; protocol_Param::DType& param(const protocol_Param& paramType);
const purpose_Param::DType& param(const purpose_Param& paramType) const; purpose_Param::DType& param(const purpose_Param& paramType);
const q_Param::DType& param(const q_Param& paramType) const; q_Param::DType& param(const q_Param& paramType);
const realm_Param::DType& param(const realm_Param& paramType) const; realm_Param::DType& param(const realm_Param& paramType);
const reason_Param::DType& param(const reason_Param& paramType) const; reason_Param::DType& param(const reason_Param& paramType);
const received_Param::DType& param(const received_Param& paramType) const; received_Param::DType& param(const received_Param& paramType);
const response_Param::DType& param(const response_Param& paramType) const; response_Param::DType& param(const response_Param& paramType);
const retryAfter_Param::DType& param(const retryAfter_Param& paramType) const; retryAfter_Param::DType& param(const retryAfter_Param& paramType);
const rinstance_Param::DType& param(const rinstance_Param& paramType) const; rinstance_Param::DType& param(const rinstance_Param& paramType);
const rport_Param::DType& param(const rport_Param& paramType) const; rport_Param::DType& param(const rport_Param& paramType);
const server_Param::DType& param(const server_Param& paramType) const; server_Param::DType& param(const server_Param& paramType);
const site_Param::DType& param(const site_Param& paramType) const; site_Param::DType& param(const site_Param& paramType);
const size_Param::DType& param(const size_Param& paramType) const; size_Param::DType& param(const size_Param& paramType);
const smimeType_Param::DType& param(const smimeType_Param& paramType) const; smimeType_Param::DType& param(const smimeType_Param& paramType);
const stale_Param::DType& param(const stale_Param& paramType) const; stale_Param::DType& param(const stale_Param& paramType);
const tag_Param::DType& param(const tag_Param& paramType) const; tag_Param::DType& param(const tag_Param& paramType);
const toTag_Param::DType& param(const toTag_Param& paramType) const; toTag_Param::DType& param(const toTag_Param& paramType);
const transport_Param::DType& param(const transport_Param& paramType) const; transport_Param::DType& param(const transport_Param& paramType);
const ttl_Param::DType& param(const ttl_Param& paramType) const; ttl_Param::DType& param(const ttl_Param& paramType);
const uri_Param::DType& param(const uri_Param& paramType) const; uri_Param::DType& param(const uri_Param& paramType);
const user_Param::DType& param(const user_Param& paramType) const; user_Param::DType& param(const user_Param& paramType);
const extension_Param::DType& param(const extension_Param& paramType) const; extension_Param::DType& param(const extension_Param& paramType);
const username_Param::DType& param(const username_Param& paramType) const; username_Param::DType& param(const username_Param& paramType);
const earlyOnly_Param::DType& param(const earlyOnly_Param& paramType) const; earlyOnly_Param::DType& param(const earlyOnly_Param& paramType);
const refresher_Param::DType& param(const refresher_Param& paramType) const; refresher_Param::DType& param(const refresher_Param& paramType);
const profileType_Param::DType& param(const profileType_Param& paramType) const; profileType_Param::DType& param(const profileType_Param& paramType);
const vendor_Param::DType& param(const vendor_Param& paramType) const; vendor_Param::DType& param(const vendor_Param& paramType);
const model_Param::DType& param(const model_Param& paramType) const; model_Param::DType& param(const model_Param& paramType);
const version_Param::DType& param(const version_Param& paramType) const; version_Param::DType& param(const version_Param& paramType);
const effectiveBy_Param::DType& param(const effectiveBy_Param& paramType) const; effectiveBy_Param::DType& param(const effectiveBy_Param& paramType);
const document_Param::DType& param(const document_Param& paramType) const; document_Param::DType& param(const document_Param& paramType);
const appId_Param::DType& param(const appId_Param& paramType) const; appId_Param::DType& param(const appId_Param& paramType);
const networkUser_Param::DType& param(const networkUser_Param& paramType) const; networkUser_Param::DType& param(const networkUser_Param& paramType);
const url_Param::DType& param(const url_Param& paramType) const; url_Param::DType& param(const url_Param& paramType);
const qop_Param::DType& param(const qop_Param& paramType) const; qop_Param::DType& param(const qop_Param& paramType);
const sigcompId_Param::DType& param(const sigcompId_Param& paramType) const; sigcompId_Param::DType& param(const sigcompId_Param& paramType);
const addTransport_Param::DType& param(const addTransport_Param& paramType) const; addTransport_Param::DType& param(const addTransport_Param& paramType);
