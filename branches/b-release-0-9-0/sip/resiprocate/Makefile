# Makefile.in generated by automake 1.8.5 from Makefile.am.
# resiprocate/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




SOURCES = $(libresiprocate_la_SOURCES) $(EXTRA_libresiprocate_la_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/resiprocate
pkglibdir = $(libdir)/resiprocate
pkgincludedir = $(includedir)/resiprocate
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = powerpc-apple-darwin7.9.0
subdir = resiprocate
DIST_COMMON = README $(resiprocate_external_include_HEADERS) \
	$(resiprocate_include_HEADERS) \
	$(resiprocate_os_include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.hxx.in ChangeLog TODO
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(mkdir_p)
CONFIG_HEADER = config.hxx
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(resiprocate_external_includedir)" "$(DESTDIR)$(resiprocate_includedir)" "$(DESTDIR)$(resiprocate_os_includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
am_libresiprocate_la_OBJECTS = HttpGetMessage.lo HttpProvider.lo \
	AbstractFifo.lo BaseException.lo Coders.lo Condition.lo \
	CountStream.lo Data.lo DataStream.lo DnsUtil.lo FileSystem.lo \
	HeapInstanceCounter.lo Id.lo Lock.lo Log.lo Logger.lo \
	MD5Stream.lo Mutex.lo ParseBuffer.lo Poll.lo RWMutex.lo \
	Random.lo RecursiveMutex.lo SelectInterruptor.lo SHA1Stream.lo \
	Socket.lo Subsystem.lo SysLogBuf.lo SysLogStream.lo \
	ThreadIf.lo Timer.lo Tuple.lo WinCompat.lo vmd5.lo Aor.lo \
	ApiCheck.lo AresDns.lo Auth.lo BranchParameter.lo \
	CSeqCategory.lo CallId.lo Connection.lo ConnectionBase.lo \
	ConnectionManager.lo Contents.lo DataParameter.lo \
	DateCategory.lo DeprecatedDialog.lo DnsInterface.lo \
	DnsResult.lo DtlsMessage.lo DtlsTransport.lo Embedded.lo \
	ExistsParameter.lo ExpiresCategory.lo ExtensionHeader.lo \
	ExtensionParameter.lo ExternalDnsFactory.lo FloatParameter.lo \
	GenericUri.lo HeaderFieldValue.lo HeaderFieldValueList.lo \
	HeaderHash.lo HeaderTypes.lo Headers.lo Helper.lo \
	IntegerParameter.lo IntegerCategory.lo InternalTransport.lo \
	KeepAliveMessage.lo LazyParser.lo Message.lo \
	MessageFilterRule.lo MethodHash.lo MethodTypes.lo Mime.lo \
	MsgHeaderScanner.lo NameAddr.lo Parameter.lo ParameterHash.lo \
	ParameterTypes.lo ParseUtil.lo ParserCategory.lo Pidf.lo \
	QopParameter.lo QuotedDataParameter.lo RAckCategory.lo \
	Registration.lo RequestLine.lo Rlmi.lo RportParameter.lo \
	Security.lo SecurityAttributes.lo SipMessage.lo SipStack.lo \
	StackThread.lo StatelessHandler.lo StatisticsManager.lo \
	StatisticsMessage.lo StatusLine.lo StringCategory.lo \
	Subscription.lo Symbols.lo TcpBaseTransport.lo \
	TcpConnection.lo TcpTransport.lo TimeAccumulate.lo \
	TimerMessage.lo TimerQueue.lo TlsConnection.lo TlsTransport.lo \
	Token.lo TransactionController.lo TransactionMap.lo \
	TransactionState.lo TransactionUser.lo \
	TransactionUserMessage.lo Transport.lo TransportMessage.lo \
	TransportSelector.lo TuSelector.lo UdpTransport.lo \
	UnknownParameter.lo Uri.lo Via.lo WarningCategory.lo \
	XMLCursor.lo
libresiprocate_la_OBJECTS = $(am_libresiprocate_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/AbstractFifo.Plo \
	./$(DEPDIR)/Aor.Plo ./$(DEPDIR)/ApiCheck.Plo \
	./$(DEPDIR)/ApplicationSip.Plo \
	./$(DEPDIR)/AresDns.Plo ./$(DEPDIR)/Auth.Plo \
	./$(DEPDIR)/BaseException.Plo \
	./$(DEPDIR)/BranchParameter.Plo \
	./$(DEPDIR)/CSeqCategory.Plo \
	./$(DEPDIR)/CallId.Plo ./$(DEPDIR)/Coders.Plo \
	./$(DEPDIR)/Condition.Plo \
	./$(DEPDIR)/Connection.Plo \
	./$(DEPDIR)/ConnectionBase.Plo \
	./$(DEPDIR)/ConnectionManager.Plo \
	./$(DEPDIR)/Contents.Plo \
	./$(DEPDIR)/CountStream.Plo \
	./$(DEPDIR)/CpimContents.Plo ./$(DEPDIR)/Data.Plo \
	./$(DEPDIR)/DataParameter.Plo \
	./$(DEPDIR)/DataStream.Plo \
	./$(DEPDIR)/DateCategory.Plo \
	./$(DEPDIR)/DeprecatedDialog.Plo \
	./$(DEPDIR)/DnsInterface.Plo \
	./$(DEPDIR)/DnsResult.Plo ./$(DEPDIR)/DnsUtil.Plo \
	./$(DEPDIR)/DtlsMessage.Plo \
	./$(DEPDIR)/DtlsTransport.Plo \
	./$(DEPDIR)/Embedded.Plo \
	./$(DEPDIR)/ExistsParameter.Plo \
	./$(DEPDIR)/ExpiresCategory.Plo \
	./$(DEPDIR)/ExtensionHeader.Plo \
	./$(DEPDIR)/ExtensionParameter.Plo \
	./$(DEPDIR)/ExternalBodyContents.Plo \
	./$(DEPDIR)/ExternalDnsFactory.Plo \
	./$(DEPDIR)/FileSystem.Plo \
	./$(DEPDIR)/FloatParameter.Plo \
	./$(DEPDIR)/GenericContents.Plo \
	./$(DEPDIR)/GenericUri.Plo \
	./$(DEPDIR)/HeaderFieldValue.Plo \
	./$(DEPDIR)/HeaderFieldValueList.Plo \
	./$(DEPDIR)/HeaderHash.Plo \
	./$(DEPDIR)/HeaderTypes.Plo \
	./$(DEPDIR)/Headers.Plo \
	./$(DEPDIR)/HeapInstanceCounter.Plo \
	./$(DEPDIR)/Helper.Plo \
	./$(DEPDIR)/HttpGetMessage.Plo \
	./$(DEPDIR)/HttpProvider.Plo ./$(DEPDIR)/Id.Plo \
	./$(DEPDIR)/IntegerCategory.Plo \
	./$(DEPDIR)/IntegerParameter.Plo \
	./$(DEPDIR)/InternalTransport.Plo \
	./$(DEPDIR)/KeepAliveMessage.Plo \
	./$(DEPDIR)/LazyParser.Plo ./$(DEPDIR)/Lock.Plo \
	./$(DEPDIR)/Log.Plo ./$(DEPDIR)/Logger.Plo \
	./$(DEPDIR)/MD5Stream.Plo ./$(DEPDIR)/Message.Plo \
	./$(DEPDIR)/MessageFilterRule.Plo \
	./$(DEPDIR)/MessageWaitingContents.Plo \
	./$(DEPDIR)/MethodHash.Plo \
	./$(DEPDIR)/MethodTypes.Plo ./$(DEPDIR)/Mime.Plo \
	./$(DEPDIR)/MsgHeaderScanner.Plo \
	./$(DEPDIR)/MultipartAlternativeContents.Plo \
	./$(DEPDIR)/MultipartMixedContents.Plo \
	./$(DEPDIR)/MultipartRelatedContents.Plo \
	./$(DEPDIR)/MultipartSignedContents.Plo \
	./$(DEPDIR)/Mutex.Plo ./$(DEPDIR)/NameAddr.Plo \
	./$(DEPDIR)/OctetContents.Plo \
	./$(DEPDIR)/Parameter.Plo \
	./$(DEPDIR)/ParameterHash.Plo \
	./$(DEPDIR)/ParameterTypes.Plo \
	./$(DEPDIR)/ParseBuffer.Plo \
	./$(DEPDIR)/ParseUtil.Plo \
	./$(DEPDIR)/ParserCategory.Plo \
	./$(DEPDIR)/Pidf.Plo ./$(DEPDIR)/Pkcs7Contents.Plo \
	./$(DEPDIR)/Pkcs8Contents.Plo \
	./$(DEPDIR)/PlainContents.Plo ./$(DEPDIR)/Poll.Plo \
	./$(DEPDIR)/QopParameter.Plo \
	./$(DEPDIR)/QuotedDataParameter.Plo \
	./$(DEPDIR)/RAckCategory.Plo \
	./$(DEPDIR)/RWMutex.Plo ./$(DEPDIR)/Random.Plo \
	./$(DEPDIR)/RecursiveMutex.Plo \
	./$(DEPDIR)/Registration.Plo \
	./$(DEPDIR)/RequestLine.Plo ./$(DEPDIR)/Rlmi.Plo \
	./$(DEPDIR)/RportParameter.Plo \
	./$(DEPDIR)/SHA1Stream.Plo \
	./$(DEPDIR)/SdpContents.Plo \
	./$(DEPDIR)/Security.Plo \
	./$(DEPDIR)/SecurityAttributes.Plo \
	./$(DEPDIR)/SelectInterruptor.Plo \
	./$(DEPDIR)/SipFrag.Plo ./$(DEPDIR)/SipMessage.Plo \
	./$(DEPDIR)/SipStack.Plo ./$(DEPDIR)/Socket.Plo \
	./$(DEPDIR)/StackThread.Plo \
	./$(DEPDIR)/StatelessHandler.Plo \
	./$(DEPDIR)/StatisticsManager.Plo \
	./$(DEPDIR)/StatisticsMessage.Plo \
	./$(DEPDIR)/StatusLine.Plo \
	./$(DEPDIR)/StringCategory.Plo \
	./$(DEPDIR)/Subscription.Plo \
	./$(DEPDIR)/Subsystem.Plo ./$(DEPDIR)/Symbols.Plo \
	./$(DEPDIR)/SysLogBuf.Plo \
	./$(DEPDIR)/SysLogStream.Plo \
	./$(DEPDIR)/TcpBaseTransport.Plo \
	./$(DEPDIR)/TcpConnection.Plo \
	./$(DEPDIR)/TcpTransport.Plo \
	./$(DEPDIR)/ThreadIf.Plo \
	./$(DEPDIR)/TimeAccumulate.Plo \
	./$(DEPDIR)/Timer.Plo ./$(DEPDIR)/TimerMessage.Plo \
	./$(DEPDIR)/TimerQueue.Plo \
	./$(DEPDIR)/TlsConnection.Plo \
	./$(DEPDIR)/TlsTransport.Plo ./$(DEPDIR)/Token.Plo \
	./$(DEPDIR)/TransactionController.Plo \
	./$(DEPDIR)/TransactionMap.Plo \
	./$(DEPDIR)/TransactionState.Plo \
	./$(DEPDIR)/TransactionUser.Plo \
	./$(DEPDIR)/TransactionUserMessage.Plo \
	./$(DEPDIR)/Transport.Plo \
	./$(DEPDIR)/TransportMessage.Plo \
	./$(DEPDIR)/TransportSelector.Plo \
	./$(DEPDIR)/TuIM.Plo ./$(DEPDIR)/TuSelector.Plo \
	./$(DEPDIR)/Tuple.Plo ./$(DEPDIR)/UdpTransport.Plo \
	./$(DEPDIR)/UnknownParameter.Plo \
	./$(DEPDIR)/Uri.Plo ./$(DEPDIR)/Via.Plo \
	./$(DEPDIR)/WarningCategory.Plo \
	./$(DEPDIR)/WinCompat.Plo \
	./$(DEPDIR)/X509Contents.Plo \
	./$(DEPDIR)/XMLCursor.Plo ./$(DEPDIR)/vmd5.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libresiprocate_la_SOURCES) \
	$(EXTRA_libresiprocate_la_SOURCES)
DIST_SOURCES = $(libresiprocate_la_SOURCES) \
	$(EXTRA_libresiprocate_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
resiprocate_external_includeHEADERS_INSTALL = $(INSTALL_HEADER)
resiprocate_includeHEADERS_INSTALL = $(INSTALL_HEADER)
resiprocate_os_includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(resiprocate_external_include_HEADERS) \
	$(resiprocate_include_HEADERS) \
	$(resiprocate_os_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/rjsparks/resip090/b-release-0-9-0/sip/missing --run aclocal-1.8
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /Users/rjsparks/resip090/b-release-0-9-0/sip/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /Users/rjsparks/resip090/b-release-0-9-0/sip/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/rjsparks/resip090/b-release-0-9-0/sip/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/rjsparks/resip090/b-release-0-9-0/sip/missing --run automake-1.8
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -Wall -Wno-deprecated
CONTENTS_OBJS =  ApplicationSip.lo CpimContents.lo ExternalBodyContents.lo GenericContents.lo MessageWaitingContents.lo MultipartAlternativeContents.lo MultipartMixedContents.lo MultipartRelatedContents.lo MultipartSignedContents.lo OctetContents.lo Pkcs7Contents.lo Pkcs8Contents.lo PlainContents.lo SdpContents.lo SipFrag.lo TuIM.lo X509Contents.lo
CPP = gcc -E
CPPFLAGS =  -I/sw/include -I/Users/rjsparks/resip090/b-release-0-9-0/sip/contrib/ares -I/usr/kerberos/include
CXX = ${DISTCC} g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wall -Wno-deprecated
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTCC = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FFLAGS = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS =  -L/Users/rjsparks/resip090/b-release-0-9-0/sip/contrib/ares
LIBOBJS = 
LIBRESIP_SO_VERSION = 0:5:0
LIBS =  -L/sw/lib -lpopt -lssl -lcrypto -lares -lpthread
LIBTOOL = $(SHELL) $(top_builddir)/libtool --tag=CXX
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /Users/rjsparks/resip090/b-release-0-9-0/sip/missing --run makeinfo
OBJEXT = o
PACKAGE = resiprocate
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PTHREAD_CC = gcc
PTHREAD_CFLAGS = 
PTHREAD_LIBS = 
RANLIB = ranlib
RESIP_MAJOR_VERSION = 0
RESIP_MICRO_VERSION = 0
RESIP_MINOR_VERSION = 9
RESIP_VERSION = 0.9.0-4817
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.9.0-4817
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = powerpc-apple-darwin7.9.0
build_alias = 
build_cpu = powerpc
build_os = darwin7.9.0
build_vendor = apple
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = powerpc-apple-darwin7.9.0
host_alias = 
host_cpu = powerpc
host_os = darwin7.9.0
host_vendor = apple
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /Users/rjsparks/resip090/b-release-0-9-0/sip/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p -- .
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
SUBDIRS = .  dum test
# INCLUDES = -I$(top_srcdir) -I$(top_builddir) -I/usr/kerberos/include
INCLUDES = -I$(top_srcdir) -I$(top_builddir)
EXTRA_DIST = resiprocate_7_0.vcproj \
		resiprocate_7_1.vcproj \
		resiprocate_8_0.vcproj \
		doc Doxyfile FAQ Readme-Compliance.txt

lib_LTLIBRARIES = libresiprocate.la

# note that several source files have been
# delegated to #EXTRA_..._SOURCES, especially
# the *Contents* family
libresiprocate_la_SOURCES = \
	external/HttpGetMessage.cxx \
	external/HttpProvider.cxx \
	os/AbstractFifo.cxx \
	os/BaseException.cxx \
	os/Coders.cxx \
	os/Condition.cxx \
	os/CountStream.cxx \
	os/Data.cxx \
	os/DataStream.cxx \
	os/DnsUtil.cxx \
	os/FileSystem.cxx \
	os/HeapInstanceCounter.cxx \
	os/Id.cxx \
	os/Lock.cxx \
	os/Log.cxx \
	os/Logger.cxx \
	os/MD5Stream.cxx \
	os/Mutex.cxx \
	os/ParseBuffer.cxx \
	os/Poll.cxx \
	os/RWMutex.cxx \
	os/Random.cxx \
	os/RecursiveMutex.cxx \
	os/SelectInterruptor.cxx \
	os/SHA1Stream.cxx \
	os/Socket.cxx \
	os/Subsystem.cxx \
	os/SysLogBuf.cxx \
	os/SysLogStream.cxx \
	os/ThreadIf.cxx \
	os/Timer.cxx \
	os/Tuple.cxx \
	os/WinCompat.cxx \
	os/vmd5.cxx \
	Aor.cxx \
	ApiCheck.cxx \
	AresDns.cxx \
	Auth.cxx \
	BranchParameter.cxx \
	CSeqCategory.cxx \
	CallId.cxx \
	Connection.cxx \
	ConnectionBase.cxx \
	ConnectionManager.cxx \
	Contents.cxx \
	DataParameter.cxx \
	DateCategory.cxx \
	DeprecatedDialog.cxx \
	DnsInterface.cxx \
	DnsResult.cxx \
	DtlsMessage.cxx \
	DtlsTransport.cxx \
	Embedded.cxx \
	ExistsParameter.cxx \
	ExpiresCategory.cxx \
	ExtensionHeader.cxx \
	ExtensionParameter.cxx \
	ExternalDnsFactory.cxx \
	FloatParameter.cxx \
	GenericUri.cxx \
	HeaderFieldValue.cxx \
	HeaderFieldValueList.cxx \
	HeaderHash.cxx \
	HeaderTypes.cxx \
	Headers.cxx \
	Helper.cxx \
	IntegerParameter.cxx \
	IntegerCategory.cxx \
	InternalTransport.cxx \
	KeepAliveMessage.cxx \
	LazyParser.cxx \
	Message.cxx \
	MessageFilterRule.cxx \
	MethodHash.cxx \
	MethodTypes.cxx \
	Mime.cxx \
	MsgHeaderScanner.cxx \
	NameAddr.cxx \
	Parameter.cxx \
	ParameterHash.cxx \
	ParameterTypes.cxx \
	ParseUtil.cxx \
	ParserCategory.cxx \
	Pidf.cxx \
	QopParameter.cxx \
	QuotedDataParameter.cxx \
	RAckCategory.cxx \
	Registration.cxx \
        RequestLine.cxx \
	Rlmi.cxx \
	RportParameter.cxx \
	Security.cxx \
	SecurityAttributes.cxx \
	SipMessage.cxx \
	SipStack.cxx \
	StackThread.cxx \
	StatelessHandler.cxx \
	StatisticsManager.cxx \
	StatisticsMessage.cxx \
        StatusLine.cxx \
        StringCategory.cxx \
	Subscription.cxx \
	Symbols.cxx \
	TcpBaseTransport.cxx \
	TcpConnection.cxx \
	TcpTransport.cxx \
	TimeAccumulate.cxx \
	TimerMessage.cxx \
	TimerQueue.cxx \
	TlsConnection.cxx \
	TlsTransport.cxx \
        Token.cxx \
	TransactionController.cxx \
	TransactionMap.cxx \
	TransactionState.cxx \
	TransactionUser.cxx \
	TransactionUserMessage.cxx \
	Transport.cxx \
	TransportMessage.cxx \
	TransportSelector.cxx \
	TuSelector.cxx \
	UdpTransport.cxx \
	UnknownParameter.cxx \
	Uri.cxx \
        Via.cxx \
        WarningCategory.cxx \
	XMLCursor.cxx 


# RjS - work in progress - many of these are now duplicated above

# These are sources that we might conditionally include
EXTRA_libresiprocate_la_SOURCES = \
	ApplicationSip.cxx \
	CpimContents.cxx \
	ExternalBodyContents.cxx \
	GenericContents.cxx \
	MessageWaitingContents.cxx \
	MultipartAlternativeContents.cxx \
	MultipartMixedContents.cxx \
	MultipartRelatedContents.cxx \
	MultipartSignedContents.cxx \
	OctetContents.cxx \
	Pkcs7Contents.cxx \
	Pkcs8Contents.cxx \
	PlainContents.cxx \
	SdpContents.cxx \
	SipFrag.cxx \
	TuIM.cxx \
	X509Contents.cxx 

libresiprocate_la_LIBADD =  ApplicationSip.lo CpimContents.lo ExternalBodyContents.lo GenericContents.lo MessageWaitingContents.lo MultipartAlternativeContents.lo MultipartMixedContents.lo MultipartRelatedContents.lo MultipartSignedContents.lo OctetContents.lo Pkcs7Contents.lo Pkcs8Contents.lo PlainContents.lo SdpContents.lo SipFrag.lo TuIM.lo X509Contents.lo
libresiprocate_la_DEPENDENCIES =  ApplicationSip.lo CpimContents.lo ExternalBodyContents.lo GenericContents.lo MessageWaitingContents.lo MultipartAlternativeContents.lo MultipartMixedContents.lo MultipartRelatedContents.lo MultipartSignedContents.lo OctetContents.lo Pkcs7Contents.lo Pkcs8Contents.lo PlainContents.lo SdpContents.lo SipFrag.lo TuIM.lo X509Contents.lo
libresiprocate_la_LDFLAGS = -version-info $(LIBRESIP_SO_VERSION)
resiprocate_includedir = $(includedir)/resiprocate
resiprocate_include_HEADERS = \
	Aor.hxx \
	ApiCheck.hxx \
	ApiCheckList.hxx \
	ApplicationMessage.hxx \
	ApplicationSip.hxx \
	AresDns.hxx \
	Auth.hxx \
	BranchParameter.hxx \
	CSeqCategory.hxx \
	CallId.hxx \
	Connection.hxx \
	ConnectionBase.hxx \
	ConnectionManager.hxx \
	Contents.hxx \
	CpimContents.hxx \
	DataParameter.hxx \
	DateCategory.hxx \
	DeprecatedDialog.hxx \
	DnsInterface.hxx \
	DnsResult.hxx \
	DnsHandler.hxx \
	DtlsMessage.hxx \
	DtlsTransport.hxx \
	Embedded.hxx \
	ExistsParameter.hxx \
	ExpiresCategory.hxx \
	ExtensionHeader.hxx \
	ExtensionParameter.hxx \
	ExternalBodyContents.hxx \
	ExternalDnsFactory.hxx \
	FloatParameter.hxx \
	GenericContents.hxx \
	GenericIPAddress.hxx \
	GenericUri.hxx \
	HeaderFieldValue.hxx \
	HeaderFieldValueList.hxx \
	HeaderHash.hxx \
	HeaderTypes.hxx \
	Headers.hxx \
	Helper.hxx \
	IntegerCategory.hxx \
	IntegerParameter.hxx \
	InternalTransport.hxx \
	KeepAliveMessage.hxx \
	LazyParser.hxx \
	Message.hxx \
	MessageFilterRule.hxx \
	MessageWaitingContents.hxx \
	MethodHash.hxx \
	MethodTypes.hxx \
	Mime.hxx \
	MsgHeaderScanner.hxx \
	MultipartAlternativeContents.hxx \
	MultipartMixedContents.hxx \
	MultipartRelatedContents.hxx \
	MultipartSignedContents.hxx \
	NameAddr.hxx \
	OctetContents.hxx \
	Parameter.hxx \
	ParameterHash.hxx \
	ParameterTypeEnums.hxx \
	ParameterTypes.hxx \
	ParseException.hxx \
	ParseUtil.hxx \
	ParserCategories.hxx \
	ParserCategory.hxx \
	ParserContainer.hxx \
	ParserContainerBase.hxx \
	ParseUtil.hxx \
	Pidf.hxx \
	Pkcs7Contents.hxx \
	Pkcs8Contents.hxx \
	PlainContents.hxx \
	QopParameter.hxx \
	QuotedDataParameter.hxx \
	RAckCategory.hxx \
	Registration.hxx \
	RequestLine.hxx \
	Rlmi.hxx \
	RportParameter.hxx \
	SdpContents.hxx \
	Security.hxx \
	SecurityAttributes.hxx \
	SecurityTypes.hxx \
	SendData.hxx \
	ShutdownMessage.hxx \
	SipFrag.hxx \
	SipMessage.hxx \
	SipStack.hxx \
	StackThread.hxx \
	StatelessHandler.hxx \
	StatisticsManager.hxx \
	StatisticsMessage.hxx \
	StatusLine.hxx \
	StringCategory.hxx \
	Subscription.hxx \
	Symbols.hxx \
	TcpBaseTransport.hxx \
	TcpConnection.hxx \
	TcpTransport.hxx \
	TimeAccumulate.hxx \
	TimerMessage.hxx \
	TimerQueue.hxx \
	TlsConnection.hxx \
	TlsTransport.hxx \
	Token.hxx \
	TransactionController.hxx \
	TransactionMap.hxx \
	TransactionMessage.hxx \
	TransactionState.hxx \
	TransactionTerminated.hxx \
	TransactionUser.hxx \
	TransactionUserMessage.hxx \
	Transport.hxx \
	TransportMessage.hxx \
	TransportSelector.hxx \
	TuIM.hxx \
	TuSelector.hxx \
	UdpTransport.hxx \
	UnknownHeaderType.hxx \
	UnknownParameter.hxx \
	UnknownParameterType.hxx \
	Uri.hxx \
	Via.hxx \
	WarningCategory.hxx \
	X509Contents.hxx \
	XMLCursor.hxx \
	X_msMsgsInvite.hxx \
	config.hxx

resiprocate_external_includedir = $(includedir)/resiprocate/external
resiprocate_external_include_HEADERS = \
	external/AsyncID.hxx \
	external/ExternalDns.hxx \
	external/ExternalTimer.hxx \
	external/HttpGetMessage.hxx \
	external/HttpProvider.hxx 

resiprocate_os_includedir = $(includedir)/resiprocate/os
resiprocate_os_include_HEADERS = \
	os/AbstractFifo.hxx \
	os/AsyncProcessHandler.hxx \
	os/BaseException.hxx \
	os/CircularBuffer.hxx \
	os/Coders.hxx \
	os/Condition.hxx \
	os/CountStream.hxx \
	os/Data.hxx \
	os/DataStream.hxx \
	os/DnsUtil.hxx \
	os/Fifo.hxx \
	os/FileSystem.hxx \
	os/FiniteFifo.hxx \
	os/HashMap.hxx \
	os/HeapInstanceCounter.hxx \
	os/Id.hxx \
	os/Inserter.hxx \
	os/IntrusiveListElement.hxx \
	os/Lock.hxx \
	os/Lockable.hxx \
	os/Log.hxx \
	os/Logger.hxx \
	os/MD5Stream.hxx \
	os/Mutex.hxx \
	os/ParseBuffer.hxx \
	os/Poll.hxx \
	os/RWMutex.hxx \
	os/Random.hxx \
	os/RecursiveMutex.hxx \
	os/SHA1Stream.hxx \
	os/SelectInterruptor.hxx \
	os/Socket.hxx \
	os/Subsystem.hxx \
	os/SysLogBuf.hxx \
	os/SysLogStream.hxx \
	os/ThreadIf.hxx \
	os/TimeLimitFifo.hxx \
	os/Timer.hxx \
	os/TransportType.hxx \
	os/Tuple.hxx \
	os/WinCompat.hxx \
	os/WinLeakCheck.hxx \
	os/compat.hxx \
	os/vmd5.hxx \
	os/vthread.hxx 

all: config.hxx
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cxx .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  resiprocate/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  resiprocate/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

config.hxx: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.hxx.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status resiprocate/config.hxx
$(srcdir)/config.hxx.in: # $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.hxx stamp-h1
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libresiprocate.la: $(libresiprocate_la_OBJECTS) $(libresiprocate_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libresiprocate_la_LDFLAGS) $(libresiprocate_la_OBJECTS) $(libresiprocate_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AbstractFifo.Plo
include ./$(DEPDIR)/Aor.Plo
include ./$(DEPDIR)/ApiCheck.Plo
include ./$(DEPDIR)/ApplicationSip.Plo
include ./$(DEPDIR)/AresDns.Plo
include ./$(DEPDIR)/Auth.Plo
include ./$(DEPDIR)/BaseException.Plo
include ./$(DEPDIR)/BranchParameter.Plo
include ./$(DEPDIR)/CSeqCategory.Plo
include ./$(DEPDIR)/CallId.Plo
include ./$(DEPDIR)/Coders.Plo
include ./$(DEPDIR)/Condition.Plo
include ./$(DEPDIR)/Connection.Plo
include ./$(DEPDIR)/ConnectionBase.Plo
include ./$(DEPDIR)/ConnectionManager.Plo
include ./$(DEPDIR)/Contents.Plo
include ./$(DEPDIR)/CountStream.Plo
include ./$(DEPDIR)/CpimContents.Plo
include ./$(DEPDIR)/Data.Plo
include ./$(DEPDIR)/DataParameter.Plo
include ./$(DEPDIR)/DataStream.Plo
include ./$(DEPDIR)/DateCategory.Plo
include ./$(DEPDIR)/DeprecatedDialog.Plo
include ./$(DEPDIR)/DnsInterface.Plo
include ./$(DEPDIR)/DnsResult.Plo
include ./$(DEPDIR)/DnsUtil.Plo
include ./$(DEPDIR)/DtlsMessage.Plo
include ./$(DEPDIR)/DtlsTransport.Plo
include ./$(DEPDIR)/Embedded.Plo
include ./$(DEPDIR)/ExistsParameter.Plo
include ./$(DEPDIR)/ExpiresCategory.Plo
include ./$(DEPDIR)/ExtensionHeader.Plo
include ./$(DEPDIR)/ExtensionParameter.Plo
include ./$(DEPDIR)/ExternalBodyContents.Plo
include ./$(DEPDIR)/ExternalDnsFactory.Plo
include ./$(DEPDIR)/FileSystem.Plo
include ./$(DEPDIR)/FloatParameter.Plo
include ./$(DEPDIR)/GenericContents.Plo
include ./$(DEPDIR)/GenericUri.Plo
include ./$(DEPDIR)/HeaderFieldValue.Plo
include ./$(DEPDIR)/HeaderFieldValueList.Plo
include ./$(DEPDIR)/HeaderHash.Plo
include ./$(DEPDIR)/HeaderTypes.Plo
include ./$(DEPDIR)/Headers.Plo
include ./$(DEPDIR)/HeapInstanceCounter.Plo
include ./$(DEPDIR)/Helper.Plo
include ./$(DEPDIR)/HttpGetMessage.Plo
include ./$(DEPDIR)/HttpProvider.Plo
include ./$(DEPDIR)/Id.Plo
include ./$(DEPDIR)/IntegerCategory.Plo
include ./$(DEPDIR)/IntegerParameter.Plo
include ./$(DEPDIR)/InternalTransport.Plo
include ./$(DEPDIR)/KeepAliveMessage.Plo
include ./$(DEPDIR)/LazyParser.Plo
include ./$(DEPDIR)/Lock.Plo
include ./$(DEPDIR)/Log.Plo
include ./$(DEPDIR)/Logger.Plo
include ./$(DEPDIR)/MD5Stream.Plo
include ./$(DEPDIR)/Message.Plo
include ./$(DEPDIR)/MessageFilterRule.Plo
include ./$(DEPDIR)/MessageWaitingContents.Plo
include ./$(DEPDIR)/MethodHash.Plo
include ./$(DEPDIR)/MethodTypes.Plo
include ./$(DEPDIR)/Mime.Plo
include ./$(DEPDIR)/MsgHeaderScanner.Plo
include ./$(DEPDIR)/MultipartAlternativeContents.Plo
include ./$(DEPDIR)/MultipartMixedContents.Plo
include ./$(DEPDIR)/MultipartRelatedContents.Plo
include ./$(DEPDIR)/MultipartSignedContents.Plo
include ./$(DEPDIR)/Mutex.Plo
include ./$(DEPDIR)/NameAddr.Plo
include ./$(DEPDIR)/OctetContents.Plo
include ./$(DEPDIR)/Parameter.Plo
include ./$(DEPDIR)/ParameterHash.Plo
include ./$(DEPDIR)/ParameterTypes.Plo
include ./$(DEPDIR)/ParseBuffer.Plo
include ./$(DEPDIR)/ParseUtil.Plo
include ./$(DEPDIR)/ParserCategory.Plo
include ./$(DEPDIR)/Pidf.Plo
include ./$(DEPDIR)/Pkcs7Contents.Plo
include ./$(DEPDIR)/Pkcs8Contents.Plo
include ./$(DEPDIR)/PlainContents.Plo
include ./$(DEPDIR)/Poll.Plo
include ./$(DEPDIR)/QopParameter.Plo
include ./$(DEPDIR)/QuotedDataParameter.Plo
include ./$(DEPDIR)/RAckCategory.Plo
include ./$(DEPDIR)/RWMutex.Plo
include ./$(DEPDIR)/Random.Plo
include ./$(DEPDIR)/RecursiveMutex.Plo
include ./$(DEPDIR)/Registration.Plo
include ./$(DEPDIR)/RequestLine.Plo
include ./$(DEPDIR)/Rlmi.Plo
include ./$(DEPDIR)/RportParameter.Plo
include ./$(DEPDIR)/SHA1Stream.Plo
include ./$(DEPDIR)/SdpContents.Plo
include ./$(DEPDIR)/Security.Plo
include ./$(DEPDIR)/SecurityAttributes.Plo
include ./$(DEPDIR)/SelectInterruptor.Plo
include ./$(DEPDIR)/SipFrag.Plo
include ./$(DEPDIR)/SipMessage.Plo
include ./$(DEPDIR)/SipStack.Plo
include ./$(DEPDIR)/Socket.Plo
include ./$(DEPDIR)/StackThread.Plo
include ./$(DEPDIR)/StatelessHandler.Plo
include ./$(DEPDIR)/StatisticsManager.Plo
include ./$(DEPDIR)/StatisticsMessage.Plo
include ./$(DEPDIR)/StatusLine.Plo
include ./$(DEPDIR)/StringCategory.Plo
include ./$(DEPDIR)/Subscription.Plo
include ./$(DEPDIR)/Subsystem.Plo
include ./$(DEPDIR)/Symbols.Plo
include ./$(DEPDIR)/SysLogBuf.Plo
include ./$(DEPDIR)/SysLogStream.Plo
include ./$(DEPDIR)/TcpBaseTransport.Plo
include ./$(DEPDIR)/TcpConnection.Plo
include ./$(DEPDIR)/TcpTransport.Plo
include ./$(DEPDIR)/ThreadIf.Plo
include ./$(DEPDIR)/TimeAccumulate.Plo
include ./$(DEPDIR)/Timer.Plo
include ./$(DEPDIR)/TimerMessage.Plo
include ./$(DEPDIR)/TimerQueue.Plo
include ./$(DEPDIR)/TlsConnection.Plo
include ./$(DEPDIR)/TlsTransport.Plo
include ./$(DEPDIR)/Token.Plo
include ./$(DEPDIR)/TransactionController.Plo
include ./$(DEPDIR)/TransactionMap.Plo
include ./$(DEPDIR)/TransactionState.Plo
include ./$(DEPDIR)/TransactionUser.Plo
include ./$(DEPDIR)/TransactionUserMessage.Plo
include ./$(DEPDIR)/Transport.Plo
include ./$(DEPDIR)/TransportMessage.Plo
include ./$(DEPDIR)/TransportSelector.Plo
include ./$(DEPDIR)/TuIM.Plo
include ./$(DEPDIR)/TuSelector.Plo
include ./$(DEPDIR)/Tuple.Plo
include ./$(DEPDIR)/UdpTransport.Plo
include ./$(DEPDIR)/UnknownParameter.Plo
include ./$(DEPDIR)/Uri.Plo
include ./$(DEPDIR)/Via.Plo
include ./$(DEPDIR)/WarningCategory.Plo
include ./$(DEPDIR)/WinCompat.Plo
include ./$(DEPDIR)/X509Contents.Plo
include ./$(DEPDIR)/XMLCursor.Plo
include ./$(DEPDIR)/vmd5.Plo

.cxx.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

HttpGetMessage.o: external/HttpGetMessage.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HttpGetMessage.o -MD -MP -MF "$(DEPDIR)/HttpGetMessage.Tpo" -c -o HttpGetMessage.o `test -f 'external/HttpGetMessage.cxx' || echo '$(srcdir)/'`external/HttpGetMessage.cxx; \
	then mv -f "$(DEPDIR)/HttpGetMessage.Tpo" "$(DEPDIR)/HttpGetMessage.Po"; else rm -f "$(DEPDIR)/HttpGetMessage.Tpo"; exit 1; fi
#	source='external/HttpGetMessage.cxx' object='HttpGetMessage.o' libtool=no \
#	depfile='$(DEPDIR)/HttpGetMessage.Po' tmpdepfile='$(DEPDIR)/HttpGetMessage.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HttpGetMessage.o `test -f 'external/HttpGetMessage.cxx' || echo '$(srcdir)/'`external/HttpGetMessage.cxx

HttpGetMessage.obj: external/HttpGetMessage.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HttpGetMessage.obj -MD -MP -MF "$(DEPDIR)/HttpGetMessage.Tpo" -c -o HttpGetMessage.obj `if test -f 'external/HttpGetMessage.cxx'; then $(CYGPATH_W) 'external/HttpGetMessage.cxx'; else $(CYGPATH_W) '$(srcdir)/external/HttpGetMessage.cxx'; fi`; \
	then mv -f "$(DEPDIR)/HttpGetMessage.Tpo" "$(DEPDIR)/HttpGetMessage.Po"; else rm -f "$(DEPDIR)/HttpGetMessage.Tpo"; exit 1; fi
#	source='external/HttpGetMessage.cxx' object='HttpGetMessage.obj' libtool=no \
#	depfile='$(DEPDIR)/HttpGetMessage.Po' tmpdepfile='$(DEPDIR)/HttpGetMessage.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HttpGetMessage.obj `if test -f 'external/HttpGetMessage.cxx'; then $(CYGPATH_W) 'external/HttpGetMessage.cxx'; else $(CYGPATH_W) '$(srcdir)/external/HttpGetMessage.cxx'; fi`

HttpGetMessage.lo: external/HttpGetMessage.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HttpGetMessage.lo -MD -MP -MF "$(DEPDIR)/HttpGetMessage.Tpo" -c -o HttpGetMessage.lo `test -f 'external/HttpGetMessage.cxx' || echo '$(srcdir)/'`external/HttpGetMessage.cxx; \
	then mv -f "$(DEPDIR)/HttpGetMessage.Tpo" "$(DEPDIR)/HttpGetMessage.Plo"; else rm -f "$(DEPDIR)/HttpGetMessage.Tpo"; exit 1; fi
#	source='external/HttpGetMessage.cxx' object='HttpGetMessage.lo' libtool=yes \
#	depfile='$(DEPDIR)/HttpGetMessage.Plo' tmpdepfile='$(DEPDIR)/HttpGetMessage.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HttpGetMessage.lo `test -f 'external/HttpGetMessage.cxx' || echo '$(srcdir)/'`external/HttpGetMessage.cxx

HttpProvider.o: external/HttpProvider.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HttpProvider.o -MD -MP -MF "$(DEPDIR)/HttpProvider.Tpo" -c -o HttpProvider.o `test -f 'external/HttpProvider.cxx' || echo '$(srcdir)/'`external/HttpProvider.cxx; \
	then mv -f "$(DEPDIR)/HttpProvider.Tpo" "$(DEPDIR)/HttpProvider.Po"; else rm -f "$(DEPDIR)/HttpProvider.Tpo"; exit 1; fi
#	source='external/HttpProvider.cxx' object='HttpProvider.o' libtool=no \
#	depfile='$(DEPDIR)/HttpProvider.Po' tmpdepfile='$(DEPDIR)/HttpProvider.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HttpProvider.o `test -f 'external/HttpProvider.cxx' || echo '$(srcdir)/'`external/HttpProvider.cxx

HttpProvider.obj: external/HttpProvider.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HttpProvider.obj -MD -MP -MF "$(DEPDIR)/HttpProvider.Tpo" -c -o HttpProvider.obj `if test -f 'external/HttpProvider.cxx'; then $(CYGPATH_W) 'external/HttpProvider.cxx'; else $(CYGPATH_W) '$(srcdir)/external/HttpProvider.cxx'; fi`; \
	then mv -f "$(DEPDIR)/HttpProvider.Tpo" "$(DEPDIR)/HttpProvider.Po"; else rm -f "$(DEPDIR)/HttpProvider.Tpo"; exit 1; fi
#	source='external/HttpProvider.cxx' object='HttpProvider.obj' libtool=no \
#	depfile='$(DEPDIR)/HttpProvider.Po' tmpdepfile='$(DEPDIR)/HttpProvider.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HttpProvider.obj `if test -f 'external/HttpProvider.cxx'; then $(CYGPATH_W) 'external/HttpProvider.cxx'; else $(CYGPATH_W) '$(srcdir)/external/HttpProvider.cxx'; fi`

HttpProvider.lo: external/HttpProvider.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HttpProvider.lo -MD -MP -MF "$(DEPDIR)/HttpProvider.Tpo" -c -o HttpProvider.lo `test -f 'external/HttpProvider.cxx' || echo '$(srcdir)/'`external/HttpProvider.cxx; \
	then mv -f "$(DEPDIR)/HttpProvider.Tpo" "$(DEPDIR)/HttpProvider.Plo"; else rm -f "$(DEPDIR)/HttpProvider.Tpo"; exit 1; fi
#	source='external/HttpProvider.cxx' object='HttpProvider.lo' libtool=yes \
#	depfile='$(DEPDIR)/HttpProvider.Plo' tmpdepfile='$(DEPDIR)/HttpProvider.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HttpProvider.lo `test -f 'external/HttpProvider.cxx' || echo '$(srcdir)/'`external/HttpProvider.cxx

AbstractFifo.o: os/AbstractFifo.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AbstractFifo.o -MD -MP -MF "$(DEPDIR)/AbstractFifo.Tpo" -c -o AbstractFifo.o `test -f 'os/AbstractFifo.cxx' || echo '$(srcdir)/'`os/AbstractFifo.cxx; \
	then mv -f "$(DEPDIR)/AbstractFifo.Tpo" "$(DEPDIR)/AbstractFifo.Po"; else rm -f "$(DEPDIR)/AbstractFifo.Tpo"; exit 1; fi
#	source='os/AbstractFifo.cxx' object='AbstractFifo.o' libtool=no \
#	depfile='$(DEPDIR)/AbstractFifo.Po' tmpdepfile='$(DEPDIR)/AbstractFifo.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AbstractFifo.o `test -f 'os/AbstractFifo.cxx' || echo '$(srcdir)/'`os/AbstractFifo.cxx

AbstractFifo.obj: os/AbstractFifo.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AbstractFifo.obj -MD -MP -MF "$(DEPDIR)/AbstractFifo.Tpo" -c -o AbstractFifo.obj `if test -f 'os/AbstractFifo.cxx'; then $(CYGPATH_W) 'os/AbstractFifo.cxx'; else $(CYGPATH_W) '$(srcdir)/os/AbstractFifo.cxx'; fi`; \
	then mv -f "$(DEPDIR)/AbstractFifo.Tpo" "$(DEPDIR)/AbstractFifo.Po"; else rm -f "$(DEPDIR)/AbstractFifo.Tpo"; exit 1; fi
#	source='os/AbstractFifo.cxx' object='AbstractFifo.obj' libtool=no \
#	depfile='$(DEPDIR)/AbstractFifo.Po' tmpdepfile='$(DEPDIR)/AbstractFifo.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AbstractFifo.obj `if test -f 'os/AbstractFifo.cxx'; then $(CYGPATH_W) 'os/AbstractFifo.cxx'; else $(CYGPATH_W) '$(srcdir)/os/AbstractFifo.cxx'; fi`

AbstractFifo.lo: os/AbstractFifo.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AbstractFifo.lo -MD -MP -MF "$(DEPDIR)/AbstractFifo.Tpo" -c -o AbstractFifo.lo `test -f 'os/AbstractFifo.cxx' || echo '$(srcdir)/'`os/AbstractFifo.cxx; \
	then mv -f "$(DEPDIR)/AbstractFifo.Tpo" "$(DEPDIR)/AbstractFifo.Plo"; else rm -f "$(DEPDIR)/AbstractFifo.Tpo"; exit 1; fi
#	source='os/AbstractFifo.cxx' object='AbstractFifo.lo' libtool=yes \
#	depfile='$(DEPDIR)/AbstractFifo.Plo' tmpdepfile='$(DEPDIR)/AbstractFifo.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AbstractFifo.lo `test -f 'os/AbstractFifo.cxx' || echo '$(srcdir)/'`os/AbstractFifo.cxx

BaseException.o: os/BaseException.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BaseException.o -MD -MP -MF "$(DEPDIR)/BaseException.Tpo" -c -o BaseException.o `test -f 'os/BaseException.cxx' || echo '$(srcdir)/'`os/BaseException.cxx; \
	then mv -f "$(DEPDIR)/BaseException.Tpo" "$(DEPDIR)/BaseException.Po"; else rm -f "$(DEPDIR)/BaseException.Tpo"; exit 1; fi
#	source='os/BaseException.cxx' object='BaseException.o' libtool=no \
#	depfile='$(DEPDIR)/BaseException.Po' tmpdepfile='$(DEPDIR)/BaseException.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BaseException.o `test -f 'os/BaseException.cxx' || echo '$(srcdir)/'`os/BaseException.cxx

BaseException.obj: os/BaseException.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BaseException.obj -MD -MP -MF "$(DEPDIR)/BaseException.Tpo" -c -o BaseException.obj `if test -f 'os/BaseException.cxx'; then $(CYGPATH_W) 'os/BaseException.cxx'; else $(CYGPATH_W) '$(srcdir)/os/BaseException.cxx'; fi`; \
	then mv -f "$(DEPDIR)/BaseException.Tpo" "$(DEPDIR)/BaseException.Po"; else rm -f "$(DEPDIR)/BaseException.Tpo"; exit 1; fi
#	source='os/BaseException.cxx' object='BaseException.obj' libtool=no \
#	depfile='$(DEPDIR)/BaseException.Po' tmpdepfile='$(DEPDIR)/BaseException.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BaseException.obj `if test -f 'os/BaseException.cxx'; then $(CYGPATH_W) 'os/BaseException.cxx'; else $(CYGPATH_W) '$(srcdir)/os/BaseException.cxx'; fi`

BaseException.lo: os/BaseException.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BaseException.lo -MD -MP -MF "$(DEPDIR)/BaseException.Tpo" -c -o BaseException.lo `test -f 'os/BaseException.cxx' || echo '$(srcdir)/'`os/BaseException.cxx; \
	then mv -f "$(DEPDIR)/BaseException.Tpo" "$(DEPDIR)/BaseException.Plo"; else rm -f "$(DEPDIR)/BaseException.Tpo"; exit 1; fi
#	source='os/BaseException.cxx' object='BaseException.lo' libtool=yes \
#	depfile='$(DEPDIR)/BaseException.Plo' tmpdepfile='$(DEPDIR)/BaseException.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BaseException.lo `test -f 'os/BaseException.cxx' || echo '$(srcdir)/'`os/BaseException.cxx

Coders.o: os/Coders.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Coders.o -MD -MP -MF "$(DEPDIR)/Coders.Tpo" -c -o Coders.o `test -f 'os/Coders.cxx' || echo '$(srcdir)/'`os/Coders.cxx; \
	then mv -f "$(DEPDIR)/Coders.Tpo" "$(DEPDIR)/Coders.Po"; else rm -f "$(DEPDIR)/Coders.Tpo"; exit 1; fi
#	source='os/Coders.cxx' object='Coders.o' libtool=no \
#	depfile='$(DEPDIR)/Coders.Po' tmpdepfile='$(DEPDIR)/Coders.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Coders.o `test -f 'os/Coders.cxx' || echo '$(srcdir)/'`os/Coders.cxx

Coders.obj: os/Coders.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Coders.obj -MD -MP -MF "$(DEPDIR)/Coders.Tpo" -c -o Coders.obj `if test -f 'os/Coders.cxx'; then $(CYGPATH_W) 'os/Coders.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Coders.cxx'; fi`; \
	then mv -f "$(DEPDIR)/Coders.Tpo" "$(DEPDIR)/Coders.Po"; else rm -f "$(DEPDIR)/Coders.Tpo"; exit 1; fi
#	source='os/Coders.cxx' object='Coders.obj' libtool=no \
#	depfile='$(DEPDIR)/Coders.Po' tmpdepfile='$(DEPDIR)/Coders.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Coders.obj `if test -f 'os/Coders.cxx'; then $(CYGPATH_W) 'os/Coders.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Coders.cxx'; fi`

Coders.lo: os/Coders.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Coders.lo -MD -MP -MF "$(DEPDIR)/Coders.Tpo" -c -o Coders.lo `test -f 'os/Coders.cxx' || echo '$(srcdir)/'`os/Coders.cxx; \
	then mv -f "$(DEPDIR)/Coders.Tpo" "$(DEPDIR)/Coders.Plo"; else rm -f "$(DEPDIR)/Coders.Tpo"; exit 1; fi
#	source='os/Coders.cxx' object='Coders.lo' libtool=yes \
#	depfile='$(DEPDIR)/Coders.Plo' tmpdepfile='$(DEPDIR)/Coders.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Coders.lo `test -f 'os/Coders.cxx' || echo '$(srcdir)/'`os/Coders.cxx

Condition.o: os/Condition.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Condition.o -MD -MP -MF "$(DEPDIR)/Condition.Tpo" -c -o Condition.o `test -f 'os/Condition.cxx' || echo '$(srcdir)/'`os/Condition.cxx; \
	then mv -f "$(DEPDIR)/Condition.Tpo" "$(DEPDIR)/Condition.Po"; else rm -f "$(DEPDIR)/Condition.Tpo"; exit 1; fi
#	source='os/Condition.cxx' object='Condition.o' libtool=no \
#	depfile='$(DEPDIR)/Condition.Po' tmpdepfile='$(DEPDIR)/Condition.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Condition.o `test -f 'os/Condition.cxx' || echo '$(srcdir)/'`os/Condition.cxx

Condition.obj: os/Condition.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Condition.obj -MD -MP -MF "$(DEPDIR)/Condition.Tpo" -c -o Condition.obj `if test -f 'os/Condition.cxx'; then $(CYGPATH_W) 'os/Condition.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Condition.cxx'; fi`; \
	then mv -f "$(DEPDIR)/Condition.Tpo" "$(DEPDIR)/Condition.Po"; else rm -f "$(DEPDIR)/Condition.Tpo"; exit 1; fi
#	source='os/Condition.cxx' object='Condition.obj' libtool=no \
#	depfile='$(DEPDIR)/Condition.Po' tmpdepfile='$(DEPDIR)/Condition.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Condition.obj `if test -f 'os/Condition.cxx'; then $(CYGPATH_W) 'os/Condition.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Condition.cxx'; fi`

Condition.lo: os/Condition.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Condition.lo -MD -MP -MF "$(DEPDIR)/Condition.Tpo" -c -o Condition.lo `test -f 'os/Condition.cxx' || echo '$(srcdir)/'`os/Condition.cxx; \
	then mv -f "$(DEPDIR)/Condition.Tpo" "$(DEPDIR)/Condition.Plo"; else rm -f "$(DEPDIR)/Condition.Tpo"; exit 1; fi
#	source='os/Condition.cxx' object='Condition.lo' libtool=yes \
#	depfile='$(DEPDIR)/Condition.Plo' tmpdepfile='$(DEPDIR)/Condition.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Condition.lo `test -f 'os/Condition.cxx' || echo '$(srcdir)/'`os/Condition.cxx

CountStream.o: os/CountStream.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CountStream.o -MD -MP -MF "$(DEPDIR)/CountStream.Tpo" -c -o CountStream.o `test -f 'os/CountStream.cxx' || echo '$(srcdir)/'`os/CountStream.cxx; \
	then mv -f "$(DEPDIR)/CountStream.Tpo" "$(DEPDIR)/CountStream.Po"; else rm -f "$(DEPDIR)/CountStream.Tpo"; exit 1; fi
#	source='os/CountStream.cxx' object='CountStream.o' libtool=no \
#	depfile='$(DEPDIR)/CountStream.Po' tmpdepfile='$(DEPDIR)/CountStream.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CountStream.o `test -f 'os/CountStream.cxx' || echo '$(srcdir)/'`os/CountStream.cxx

CountStream.obj: os/CountStream.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CountStream.obj -MD -MP -MF "$(DEPDIR)/CountStream.Tpo" -c -o CountStream.obj `if test -f 'os/CountStream.cxx'; then $(CYGPATH_W) 'os/CountStream.cxx'; else $(CYGPATH_W) '$(srcdir)/os/CountStream.cxx'; fi`; \
	then mv -f "$(DEPDIR)/CountStream.Tpo" "$(DEPDIR)/CountStream.Po"; else rm -f "$(DEPDIR)/CountStream.Tpo"; exit 1; fi
#	source='os/CountStream.cxx' object='CountStream.obj' libtool=no \
#	depfile='$(DEPDIR)/CountStream.Po' tmpdepfile='$(DEPDIR)/CountStream.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CountStream.obj `if test -f 'os/CountStream.cxx'; then $(CYGPATH_W) 'os/CountStream.cxx'; else $(CYGPATH_W) '$(srcdir)/os/CountStream.cxx'; fi`

CountStream.lo: os/CountStream.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CountStream.lo -MD -MP -MF "$(DEPDIR)/CountStream.Tpo" -c -o CountStream.lo `test -f 'os/CountStream.cxx' || echo '$(srcdir)/'`os/CountStream.cxx; \
	then mv -f "$(DEPDIR)/CountStream.Tpo" "$(DEPDIR)/CountStream.Plo"; else rm -f "$(DEPDIR)/CountStream.Tpo"; exit 1; fi
#	source='os/CountStream.cxx' object='CountStream.lo' libtool=yes \
#	depfile='$(DEPDIR)/CountStream.Plo' tmpdepfile='$(DEPDIR)/CountStream.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CountStream.lo `test -f 'os/CountStream.cxx' || echo '$(srcdir)/'`os/CountStream.cxx

Data.o: os/Data.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Data.o -MD -MP -MF "$(DEPDIR)/Data.Tpo" -c -o Data.o `test -f 'os/Data.cxx' || echo '$(srcdir)/'`os/Data.cxx; \
	then mv -f "$(DEPDIR)/Data.Tpo" "$(DEPDIR)/Data.Po"; else rm -f "$(DEPDIR)/Data.Tpo"; exit 1; fi
#	source='os/Data.cxx' object='Data.o' libtool=no \
#	depfile='$(DEPDIR)/Data.Po' tmpdepfile='$(DEPDIR)/Data.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Data.o `test -f 'os/Data.cxx' || echo '$(srcdir)/'`os/Data.cxx

Data.obj: os/Data.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Data.obj -MD -MP -MF "$(DEPDIR)/Data.Tpo" -c -o Data.obj `if test -f 'os/Data.cxx'; then $(CYGPATH_W) 'os/Data.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Data.cxx'; fi`; \
	then mv -f "$(DEPDIR)/Data.Tpo" "$(DEPDIR)/Data.Po"; else rm -f "$(DEPDIR)/Data.Tpo"; exit 1; fi
#	source='os/Data.cxx' object='Data.obj' libtool=no \
#	depfile='$(DEPDIR)/Data.Po' tmpdepfile='$(DEPDIR)/Data.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Data.obj `if test -f 'os/Data.cxx'; then $(CYGPATH_W) 'os/Data.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Data.cxx'; fi`

Data.lo: os/Data.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Data.lo -MD -MP -MF "$(DEPDIR)/Data.Tpo" -c -o Data.lo `test -f 'os/Data.cxx' || echo '$(srcdir)/'`os/Data.cxx; \
	then mv -f "$(DEPDIR)/Data.Tpo" "$(DEPDIR)/Data.Plo"; else rm -f "$(DEPDIR)/Data.Tpo"; exit 1; fi
#	source='os/Data.cxx' object='Data.lo' libtool=yes \
#	depfile='$(DEPDIR)/Data.Plo' tmpdepfile='$(DEPDIR)/Data.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Data.lo `test -f 'os/Data.cxx' || echo '$(srcdir)/'`os/Data.cxx

DataStream.o: os/DataStream.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DataStream.o -MD -MP -MF "$(DEPDIR)/DataStream.Tpo" -c -o DataStream.o `test -f 'os/DataStream.cxx' || echo '$(srcdir)/'`os/DataStream.cxx; \
	then mv -f "$(DEPDIR)/DataStream.Tpo" "$(DEPDIR)/DataStream.Po"; else rm -f "$(DEPDIR)/DataStream.Tpo"; exit 1; fi
#	source='os/DataStream.cxx' object='DataStream.o' libtool=no \
#	depfile='$(DEPDIR)/DataStream.Po' tmpdepfile='$(DEPDIR)/DataStream.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DataStream.o `test -f 'os/DataStream.cxx' || echo '$(srcdir)/'`os/DataStream.cxx

DataStream.obj: os/DataStream.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DataStream.obj -MD -MP -MF "$(DEPDIR)/DataStream.Tpo" -c -o DataStream.obj `if test -f 'os/DataStream.cxx'; then $(CYGPATH_W) 'os/DataStream.cxx'; else $(CYGPATH_W) '$(srcdir)/os/DataStream.cxx'; fi`; \
	then mv -f "$(DEPDIR)/DataStream.Tpo" "$(DEPDIR)/DataStream.Po"; else rm -f "$(DEPDIR)/DataStream.Tpo"; exit 1; fi
#	source='os/DataStream.cxx' object='DataStream.obj' libtool=no \
#	depfile='$(DEPDIR)/DataStream.Po' tmpdepfile='$(DEPDIR)/DataStream.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DataStream.obj `if test -f 'os/DataStream.cxx'; then $(CYGPATH_W) 'os/DataStream.cxx'; else $(CYGPATH_W) '$(srcdir)/os/DataStream.cxx'; fi`

DataStream.lo: os/DataStream.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DataStream.lo -MD -MP -MF "$(DEPDIR)/DataStream.Tpo" -c -o DataStream.lo `test -f 'os/DataStream.cxx' || echo '$(srcdir)/'`os/DataStream.cxx; \
	then mv -f "$(DEPDIR)/DataStream.Tpo" "$(DEPDIR)/DataStream.Plo"; else rm -f "$(DEPDIR)/DataStream.Tpo"; exit 1; fi
#	source='os/DataStream.cxx' object='DataStream.lo' libtool=yes \
#	depfile='$(DEPDIR)/DataStream.Plo' tmpdepfile='$(DEPDIR)/DataStream.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DataStream.lo `test -f 'os/DataStream.cxx' || echo '$(srcdir)/'`os/DataStream.cxx

DnsUtil.o: os/DnsUtil.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DnsUtil.o -MD -MP -MF "$(DEPDIR)/DnsUtil.Tpo" -c -o DnsUtil.o `test -f 'os/DnsUtil.cxx' || echo '$(srcdir)/'`os/DnsUtil.cxx; \
	then mv -f "$(DEPDIR)/DnsUtil.Tpo" "$(DEPDIR)/DnsUtil.Po"; else rm -f "$(DEPDIR)/DnsUtil.Tpo"; exit 1; fi
#	source='os/DnsUtil.cxx' object='DnsUtil.o' libtool=no \
#	depfile='$(DEPDIR)/DnsUtil.Po' tmpdepfile='$(DEPDIR)/DnsUtil.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DnsUtil.o `test -f 'os/DnsUtil.cxx' || echo '$(srcdir)/'`os/DnsUtil.cxx

DnsUtil.obj: os/DnsUtil.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DnsUtil.obj -MD -MP -MF "$(DEPDIR)/DnsUtil.Tpo" -c -o DnsUtil.obj `if test -f 'os/DnsUtil.cxx'; then $(CYGPATH_W) 'os/DnsUtil.cxx'; else $(CYGPATH_W) '$(srcdir)/os/DnsUtil.cxx'; fi`; \
	then mv -f "$(DEPDIR)/DnsUtil.Tpo" "$(DEPDIR)/DnsUtil.Po"; else rm -f "$(DEPDIR)/DnsUtil.Tpo"; exit 1; fi
#	source='os/DnsUtil.cxx' object='DnsUtil.obj' libtool=no \
#	depfile='$(DEPDIR)/DnsUtil.Po' tmpdepfile='$(DEPDIR)/DnsUtil.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DnsUtil.obj `if test -f 'os/DnsUtil.cxx'; then $(CYGPATH_W) 'os/DnsUtil.cxx'; else $(CYGPATH_W) '$(srcdir)/os/DnsUtil.cxx'; fi`

DnsUtil.lo: os/DnsUtil.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DnsUtil.lo -MD -MP -MF "$(DEPDIR)/DnsUtil.Tpo" -c -o DnsUtil.lo `test -f 'os/DnsUtil.cxx' || echo '$(srcdir)/'`os/DnsUtil.cxx; \
	then mv -f "$(DEPDIR)/DnsUtil.Tpo" "$(DEPDIR)/DnsUtil.Plo"; else rm -f "$(DEPDIR)/DnsUtil.Tpo"; exit 1; fi
#	source='os/DnsUtil.cxx' object='DnsUtil.lo' libtool=yes \
#	depfile='$(DEPDIR)/DnsUtil.Plo' tmpdepfile='$(DEPDIR)/DnsUtil.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DnsUtil.lo `test -f 'os/DnsUtil.cxx' || echo '$(srcdir)/'`os/DnsUtil.cxx

FileSystem.o: os/FileSystem.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FileSystem.o -MD -MP -MF "$(DEPDIR)/FileSystem.Tpo" -c -o FileSystem.o `test -f 'os/FileSystem.cxx' || echo '$(srcdir)/'`os/FileSystem.cxx; \
	then mv -f "$(DEPDIR)/FileSystem.Tpo" "$(DEPDIR)/FileSystem.Po"; else rm -f "$(DEPDIR)/FileSystem.Tpo"; exit 1; fi
#	source='os/FileSystem.cxx' object='FileSystem.o' libtool=no \
#	depfile='$(DEPDIR)/FileSystem.Po' tmpdepfile='$(DEPDIR)/FileSystem.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FileSystem.o `test -f 'os/FileSystem.cxx' || echo '$(srcdir)/'`os/FileSystem.cxx

FileSystem.obj: os/FileSystem.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FileSystem.obj -MD -MP -MF "$(DEPDIR)/FileSystem.Tpo" -c -o FileSystem.obj `if test -f 'os/FileSystem.cxx'; then $(CYGPATH_W) 'os/FileSystem.cxx'; else $(CYGPATH_W) '$(srcdir)/os/FileSystem.cxx'; fi`; \
	then mv -f "$(DEPDIR)/FileSystem.Tpo" "$(DEPDIR)/FileSystem.Po"; else rm -f "$(DEPDIR)/FileSystem.Tpo"; exit 1; fi
#	source='os/FileSystem.cxx' object='FileSystem.obj' libtool=no \
#	depfile='$(DEPDIR)/FileSystem.Po' tmpdepfile='$(DEPDIR)/FileSystem.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FileSystem.obj `if test -f 'os/FileSystem.cxx'; then $(CYGPATH_W) 'os/FileSystem.cxx'; else $(CYGPATH_W) '$(srcdir)/os/FileSystem.cxx'; fi`

FileSystem.lo: os/FileSystem.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FileSystem.lo -MD -MP -MF "$(DEPDIR)/FileSystem.Tpo" -c -o FileSystem.lo `test -f 'os/FileSystem.cxx' || echo '$(srcdir)/'`os/FileSystem.cxx; \
	then mv -f "$(DEPDIR)/FileSystem.Tpo" "$(DEPDIR)/FileSystem.Plo"; else rm -f "$(DEPDIR)/FileSystem.Tpo"; exit 1; fi
#	source='os/FileSystem.cxx' object='FileSystem.lo' libtool=yes \
#	depfile='$(DEPDIR)/FileSystem.Plo' tmpdepfile='$(DEPDIR)/FileSystem.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FileSystem.lo `test -f 'os/FileSystem.cxx' || echo '$(srcdir)/'`os/FileSystem.cxx

HeapInstanceCounter.o: os/HeapInstanceCounter.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HeapInstanceCounter.o -MD -MP -MF "$(DEPDIR)/HeapInstanceCounter.Tpo" -c -o HeapInstanceCounter.o `test -f 'os/HeapInstanceCounter.cxx' || echo '$(srcdir)/'`os/HeapInstanceCounter.cxx; \
	then mv -f "$(DEPDIR)/HeapInstanceCounter.Tpo" "$(DEPDIR)/HeapInstanceCounter.Po"; else rm -f "$(DEPDIR)/HeapInstanceCounter.Tpo"; exit 1; fi
#	source='os/HeapInstanceCounter.cxx' object='HeapInstanceCounter.o' libtool=no \
#	depfile='$(DEPDIR)/HeapInstanceCounter.Po' tmpdepfile='$(DEPDIR)/HeapInstanceCounter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HeapInstanceCounter.o `test -f 'os/HeapInstanceCounter.cxx' || echo '$(srcdir)/'`os/HeapInstanceCounter.cxx

HeapInstanceCounter.obj: os/HeapInstanceCounter.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HeapInstanceCounter.obj -MD -MP -MF "$(DEPDIR)/HeapInstanceCounter.Tpo" -c -o HeapInstanceCounter.obj `if test -f 'os/HeapInstanceCounter.cxx'; then $(CYGPATH_W) 'os/HeapInstanceCounter.cxx'; else $(CYGPATH_W) '$(srcdir)/os/HeapInstanceCounter.cxx'; fi`; \
	then mv -f "$(DEPDIR)/HeapInstanceCounter.Tpo" "$(DEPDIR)/HeapInstanceCounter.Po"; else rm -f "$(DEPDIR)/HeapInstanceCounter.Tpo"; exit 1; fi
#	source='os/HeapInstanceCounter.cxx' object='HeapInstanceCounter.obj' libtool=no \
#	depfile='$(DEPDIR)/HeapInstanceCounter.Po' tmpdepfile='$(DEPDIR)/HeapInstanceCounter.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HeapInstanceCounter.obj `if test -f 'os/HeapInstanceCounter.cxx'; then $(CYGPATH_W) 'os/HeapInstanceCounter.cxx'; else $(CYGPATH_W) '$(srcdir)/os/HeapInstanceCounter.cxx'; fi`

HeapInstanceCounter.lo: os/HeapInstanceCounter.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HeapInstanceCounter.lo -MD -MP -MF "$(DEPDIR)/HeapInstanceCounter.Tpo" -c -o HeapInstanceCounter.lo `test -f 'os/HeapInstanceCounter.cxx' || echo '$(srcdir)/'`os/HeapInstanceCounter.cxx; \
	then mv -f "$(DEPDIR)/HeapInstanceCounter.Tpo" "$(DEPDIR)/HeapInstanceCounter.Plo"; else rm -f "$(DEPDIR)/HeapInstanceCounter.Tpo"; exit 1; fi
#	source='os/HeapInstanceCounter.cxx' object='HeapInstanceCounter.lo' libtool=yes \
#	depfile='$(DEPDIR)/HeapInstanceCounter.Plo' tmpdepfile='$(DEPDIR)/HeapInstanceCounter.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HeapInstanceCounter.lo `test -f 'os/HeapInstanceCounter.cxx' || echo '$(srcdir)/'`os/HeapInstanceCounter.cxx

Id.o: os/Id.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Id.o -MD -MP -MF "$(DEPDIR)/Id.Tpo" -c -o Id.o `test -f 'os/Id.cxx' || echo '$(srcdir)/'`os/Id.cxx; \
	then mv -f "$(DEPDIR)/Id.Tpo" "$(DEPDIR)/Id.Po"; else rm -f "$(DEPDIR)/Id.Tpo"; exit 1; fi
#	source='os/Id.cxx' object='Id.o' libtool=no \
#	depfile='$(DEPDIR)/Id.Po' tmpdepfile='$(DEPDIR)/Id.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Id.o `test -f 'os/Id.cxx' || echo '$(srcdir)/'`os/Id.cxx

Id.obj: os/Id.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Id.obj -MD -MP -MF "$(DEPDIR)/Id.Tpo" -c -o Id.obj `if test -f 'os/Id.cxx'; then $(CYGPATH_W) 'os/Id.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Id.cxx'; fi`; \
	then mv -f "$(DEPDIR)/Id.Tpo" "$(DEPDIR)/Id.Po"; else rm -f "$(DEPDIR)/Id.Tpo"; exit 1; fi
#	source='os/Id.cxx' object='Id.obj' libtool=no \
#	depfile='$(DEPDIR)/Id.Po' tmpdepfile='$(DEPDIR)/Id.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Id.obj `if test -f 'os/Id.cxx'; then $(CYGPATH_W) 'os/Id.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Id.cxx'; fi`

Id.lo: os/Id.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Id.lo -MD -MP -MF "$(DEPDIR)/Id.Tpo" -c -o Id.lo `test -f 'os/Id.cxx' || echo '$(srcdir)/'`os/Id.cxx; \
	then mv -f "$(DEPDIR)/Id.Tpo" "$(DEPDIR)/Id.Plo"; else rm -f "$(DEPDIR)/Id.Tpo"; exit 1; fi
#	source='os/Id.cxx' object='Id.lo' libtool=yes \
#	depfile='$(DEPDIR)/Id.Plo' tmpdepfile='$(DEPDIR)/Id.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Id.lo `test -f 'os/Id.cxx' || echo '$(srcdir)/'`os/Id.cxx

Lock.o: os/Lock.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Lock.o -MD -MP -MF "$(DEPDIR)/Lock.Tpo" -c -o Lock.o `test -f 'os/Lock.cxx' || echo '$(srcdir)/'`os/Lock.cxx; \
	then mv -f "$(DEPDIR)/Lock.Tpo" "$(DEPDIR)/Lock.Po"; else rm -f "$(DEPDIR)/Lock.Tpo"; exit 1; fi
#	source='os/Lock.cxx' object='Lock.o' libtool=no \
#	depfile='$(DEPDIR)/Lock.Po' tmpdepfile='$(DEPDIR)/Lock.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Lock.o `test -f 'os/Lock.cxx' || echo '$(srcdir)/'`os/Lock.cxx

Lock.obj: os/Lock.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Lock.obj -MD -MP -MF "$(DEPDIR)/Lock.Tpo" -c -o Lock.obj `if test -f 'os/Lock.cxx'; then $(CYGPATH_W) 'os/Lock.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Lock.cxx'; fi`; \
	then mv -f "$(DEPDIR)/Lock.Tpo" "$(DEPDIR)/Lock.Po"; else rm -f "$(DEPDIR)/Lock.Tpo"; exit 1; fi
#	source='os/Lock.cxx' object='Lock.obj' libtool=no \
#	depfile='$(DEPDIR)/Lock.Po' tmpdepfile='$(DEPDIR)/Lock.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Lock.obj `if test -f 'os/Lock.cxx'; then $(CYGPATH_W) 'os/Lock.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Lock.cxx'; fi`

Lock.lo: os/Lock.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Lock.lo -MD -MP -MF "$(DEPDIR)/Lock.Tpo" -c -o Lock.lo `test -f 'os/Lock.cxx' || echo '$(srcdir)/'`os/Lock.cxx; \
	then mv -f "$(DEPDIR)/Lock.Tpo" "$(DEPDIR)/Lock.Plo"; else rm -f "$(DEPDIR)/Lock.Tpo"; exit 1; fi
#	source='os/Lock.cxx' object='Lock.lo' libtool=yes \
#	depfile='$(DEPDIR)/Lock.Plo' tmpdepfile='$(DEPDIR)/Lock.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Lock.lo `test -f 'os/Lock.cxx' || echo '$(srcdir)/'`os/Lock.cxx

Log.o: os/Log.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Log.o -MD -MP -MF "$(DEPDIR)/Log.Tpo" -c -o Log.o `test -f 'os/Log.cxx' || echo '$(srcdir)/'`os/Log.cxx; \
	then mv -f "$(DEPDIR)/Log.Tpo" "$(DEPDIR)/Log.Po"; else rm -f "$(DEPDIR)/Log.Tpo"; exit 1; fi
#	source='os/Log.cxx' object='Log.o' libtool=no \
#	depfile='$(DEPDIR)/Log.Po' tmpdepfile='$(DEPDIR)/Log.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Log.o `test -f 'os/Log.cxx' || echo '$(srcdir)/'`os/Log.cxx

Log.obj: os/Log.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Log.obj -MD -MP -MF "$(DEPDIR)/Log.Tpo" -c -o Log.obj `if test -f 'os/Log.cxx'; then $(CYGPATH_W) 'os/Log.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Log.cxx'; fi`; \
	then mv -f "$(DEPDIR)/Log.Tpo" "$(DEPDIR)/Log.Po"; else rm -f "$(DEPDIR)/Log.Tpo"; exit 1; fi
#	source='os/Log.cxx' object='Log.obj' libtool=no \
#	depfile='$(DEPDIR)/Log.Po' tmpdepfile='$(DEPDIR)/Log.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Log.obj `if test -f 'os/Log.cxx'; then $(CYGPATH_W) 'os/Log.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Log.cxx'; fi`

Log.lo: os/Log.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Log.lo -MD -MP -MF "$(DEPDIR)/Log.Tpo" -c -o Log.lo `test -f 'os/Log.cxx' || echo '$(srcdir)/'`os/Log.cxx; \
	then mv -f "$(DEPDIR)/Log.Tpo" "$(DEPDIR)/Log.Plo"; else rm -f "$(DEPDIR)/Log.Tpo"; exit 1; fi
#	source='os/Log.cxx' object='Log.lo' libtool=yes \
#	depfile='$(DEPDIR)/Log.Plo' tmpdepfile='$(DEPDIR)/Log.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Log.lo `test -f 'os/Log.cxx' || echo '$(srcdir)/'`os/Log.cxx

Logger.o: os/Logger.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Logger.o -MD -MP -MF "$(DEPDIR)/Logger.Tpo" -c -o Logger.o `test -f 'os/Logger.cxx' || echo '$(srcdir)/'`os/Logger.cxx; \
	then mv -f "$(DEPDIR)/Logger.Tpo" "$(DEPDIR)/Logger.Po"; else rm -f "$(DEPDIR)/Logger.Tpo"; exit 1; fi
#	source='os/Logger.cxx' object='Logger.o' libtool=no \
#	depfile='$(DEPDIR)/Logger.Po' tmpdepfile='$(DEPDIR)/Logger.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Logger.o `test -f 'os/Logger.cxx' || echo '$(srcdir)/'`os/Logger.cxx

Logger.obj: os/Logger.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Logger.obj -MD -MP -MF "$(DEPDIR)/Logger.Tpo" -c -o Logger.obj `if test -f 'os/Logger.cxx'; then $(CYGPATH_W) 'os/Logger.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Logger.cxx'; fi`; \
	then mv -f "$(DEPDIR)/Logger.Tpo" "$(DEPDIR)/Logger.Po"; else rm -f "$(DEPDIR)/Logger.Tpo"; exit 1; fi
#	source='os/Logger.cxx' object='Logger.obj' libtool=no \
#	depfile='$(DEPDIR)/Logger.Po' tmpdepfile='$(DEPDIR)/Logger.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Logger.obj `if test -f 'os/Logger.cxx'; then $(CYGPATH_W) 'os/Logger.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Logger.cxx'; fi`

Logger.lo: os/Logger.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Logger.lo -MD -MP -MF "$(DEPDIR)/Logger.Tpo" -c -o Logger.lo `test -f 'os/Logger.cxx' || echo '$(srcdir)/'`os/Logger.cxx; \
	then mv -f "$(DEPDIR)/Logger.Tpo" "$(DEPDIR)/Logger.Plo"; else rm -f "$(DEPDIR)/Logger.Tpo"; exit 1; fi
#	source='os/Logger.cxx' object='Logger.lo' libtool=yes \
#	depfile='$(DEPDIR)/Logger.Plo' tmpdepfile='$(DEPDIR)/Logger.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Logger.lo `test -f 'os/Logger.cxx' || echo '$(srcdir)/'`os/Logger.cxx

MD5Stream.o: os/MD5Stream.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MD5Stream.o -MD -MP -MF "$(DEPDIR)/MD5Stream.Tpo" -c -o MD5Stream.o `test -f 'os/MD5Stream.cxx' || echo '$(srcdir)/'`os/MD5Stream.cxx; \
	then mv -f "$(DEPDIR)/MD5Stream.Tpo" "$(DEPDIR)/MD5Stream.Po"; else rm -f "$(DEPDIR)/MD5Stream.Tpo"; exit 1; fi
#	source='os/MD5Stream.cxx' object='MD5Stream.o' libtool=no \
#	depfile='$(DEPDIR)/MD5Stream.Po' tmpdepfile='$(DEPDIR)/MD5Stream.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MD5Stream.o `test -f 'os/MD5Stream.cxx' || echo '$(srcdir)/'`os/MD5Stream.cxx

MD5Stream.obj: os/MD5Stream.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MD5Stream.obj -MD -MP -MF "$(DEPDIR)/MD5Stream.Tpo" -c -o MD5Stream.obj `if test -f 'os/MD5Stream.cxx'; then $(CYGPATH_W) 'os/MD5Stream.cxx'; else $(CYGPATH_W) '$(srcdir)/os/MD5Stream.cxx'; fi`; \
	then mv -f "$(DEPDIR)/MD5Stream.Tpo" "$(DEPDIR)/MD5Stream.Po"; else rm -f "$(DEPDIR)/MD5Stream.Tpo"; exit 1; fi
#	source='os/MD5Stream.cxx' object='MD5Stream.obj' libtool=no \
#	depfile='$(DEPDIR)/MD5Stream.Po' tmpdepfile='$(DEPDIR)/MD5Stream.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MD5Stream.obj `if test -f 'os/MD5Stream.cxx'; then $(CYGPATH_W) 'os/MD5Stream.cxx'; else $(CYGPATH_W) '$(srcdir)/os/MD5Stream.cxx'; fi`

MD5Stream.lo: os/MD5Stream.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MD5Stream.lo -MD -MP -MF "$(DEPDIR)/MD5Stream.Tpo" -c -o MD5Stream.lo `test -f 'os/MD5Stream.cxx' || echo '$(srcdir)/'`os/MD5Stream.cxx; \
	then mv -f "$(DEPDIR)/MD5Stream.Tpo" "$(DEPDIR)/MD5Stream.Plo"; else rm -f "$(DEPDIR)/MD5Stream.Tpo"; exit 1; fi
#	source='os/MD5Stream.cxx' object='MD5Stream.lo' libtool=yes \
#	depfile='$(DEPDIR)/MD5Stream.Plo' tmpdepfile='$(DEPDIR)/MD5Stream.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MD5Stream.lo `test -f 'os/MD5Stream.cxx' || echo '$(srcdir)/'`os/MD5Stream.cxx

Mutex.o: os/Mutex.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Mutex.o -MD -MP -MF "$(DEPDIR)/Mutex.Tpo" -c -o Mutex.o `test -f 'os/Mutex.cxx' || echo '$(srcdir)/'`os/Mutex.cxx; \
	then mv -f "$(DEPDIR)/Mutex.Tpo" "$(DEPDIR)/Mutex.Po"; else rm -f "$(DEPDIR)/Mutex.Tpo"; exit 1; fi
#	source='os/Mutex.cxx' object='Mutex.o' libtool=no \
#	depfile='$(DEPDIR)/Mutex.Po' tmpdepfile='$(DEPDIR)/Mutex.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Mutex.o `test -f 'os/Mutex.cxx' || echo '$(srcdir)/'`os/Mutex.cxx

Mutex.obj: os/Mutex.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Mutex.obj -MD -MP -MF "$(DEPDIR)/Mutex.Tpo" -c -o Mutex.obj `if test -f 'os/Mutex.cxx'; then $(CYGPATH_W) 'os/Mutex.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Mutex.cxx'; fi`; \
	then mv -f "$(DEPDIR)/Mutex.Tpo" "$(DEPDIR)/Mutex.Po"; else rm -f "$(DEPDIR)/Mutex.Tpo"; exit 1; fi
#	source='os/Mutex.cxx' object='Mutex.obj' libtool=no \
#	depfile='$(DEPDIR)/Mutex.Po' tmpdepfile='$(DEPDIR)/Mutex.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Mutex.obj `if test -f 'os/Mutex.cxx'; then $(CYGPATH_W) 'os/Mutex.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Mutex.cxx'; fi`

Mutex.lo: os/Mutex.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Mutex.lo -MD -MP -MF "$(DEPDIR)/Mutex.Tpo" -c -o Mutex.lo `test -f 'os/Mutex.cxx' || echo '$(srcdir)/'`os/Mutex.cxx; \
	then mv -f "$(DEPDIR)/Mutex.Tpo" "$(DEPDIR)/Mutex.Plo"; else rm -f "$(DEPDIR)/Mutex.Tpo"; exit 1; fi
#	source='os/Mutex.cxx' object='Mutex.lo' libtool=yes \
#	depfile='$(DEPDIR)/Mutex.Plo' tmpdepfile='$(DEPDIR)/Mutex.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Mutex.lo `test -f 'os/Mutex.cxx' || echo '$(srcdir)/'`os/Mutex.cxx

ParseBuffer.o: os/ParseBuffer.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ParseBuffer.o -MD -MP -MF "$(DEPDIR)/ParseBuffer.Tpo" -c -o ParseBuffer.o `test -f 'os/ParseBuffer.cxx' || echo '$(srcdir)/'`os/ParseBuffer.cxx; \
	then mv -f "$(DEPDIR)/ParseBuffer.Tpo" "$(DEPDIR)/ParseBuffer.Po"; else rm -f "$(DEPDIR)/ParseBuffer.Tpo"; exit 1; fi
#	source='os/ParseBuffer.cxx' object='ParseBuffer.o' libtool=no \
#	depfile='$(DEPDIR)/ParseBuffer.Po' tmpdepfile='$(DEPDIR)/ParseBuffer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParseBuffer.o `test -f 'os/ParseBuffer.cxx' || echo '$(srcdir)/'`os/ParseBuffer.cxx

ParseBuffer.obj: os/ParseBuffer.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ParseBuffer.obj -MD -MP -MF "$(DEPDIR)/ParseBuffer.Tpo" -c -o ParseBuffer.obj `if test -f 'os/ParseBuffer.cxx'; then $(CYGPATH_W) 'os/ParseBuffer.cxx'; else $(CYGPATH_W) '$(srcdir)/os/ParseBuffer.cxx'; fi`; \
	then mv -f "$(DEPDIR)/ParseBuffer.Tpo" "$(DEPDIR)/ParseBuffer.Po"; else rm -f "$(DEPDIR)/ParseBuffer.Tpo"; exit 1; fi
#	source='os/ParseBuffer.cxx' object='ParseBuffer.obj' libtool=no \
#	depfile='$(DEPDIR)/ParseBuffer.Po' tmpdepfile='$(DEPDIR)/ParseBuffer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParseBuffer.obj `if test -f 'os/ParseBuffer.cxx'; then $(CYGPATH_W) 'os/ParseBuffer.cxx'; else $(CYGPATH_W) '$(srcdir)/os/ParseBuffer.cxx'; fi`

ParseBuffer.lo: os/ParseBuffer.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ParseBuffer.lo -MD -MP -MF "$(DEPDIR)/ParseBuffer.Tpo" -c -o ParseBuffer.lo `test -f 'os/ParseBuffer.cxx' || echo '$(srcdir)/'`os/ParseBuffer.cxx; \
	then mv -f "$(DEPDIR)/ParseBuffer.Tpo" "$(DEPDIR)/ParseBuffer.Plo"; else rm -f "$(DEPDIR)/ParseBuffer.Tpo"; exit 1; fi
#	source='os/ParseBuffer.cxx' object='ParseBuffer.lo' libtool=yes \
#	depfile='$(DEPDIR)/ParseBuffer.Plo' tmpdepfile='$(DEPDIR)/ParseBuffer.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParseBuffer.lo `test -f 'os/ParseBuffer.cxx' || echo '$(srcdir)/'`os/ParseBuffer.cxx

Poll.o: os/Poll.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Poll.o -MD -MP -MF "$(DEPDIR)/Poll.Tpo" -c -o Poll.o `test -f 'os/Poll.cxx' || echo '$(srcdir)/'`os/Poll.cxx; \
	then mv -f "$(DEPDIR)/Poll.Tpo" "$(DEPDIR)/Poll.Po"; else rm -f "$(DEPDIR)/Poll.Tpo"; exit 1; fi
#	source='os/Poll.cxx' object='Poll.o' libtool=no \
#	depfile='$(DEPDIR)/Poll.Po' tmpdepfile='$(DEPDIR)/Poll.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Poll.o `test -f 'os/Poll.cxx' || echo '$(srcdir)/'`os/Poll.cxx

Poll.obj: os/Poll.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Poll.obj -MD -MP -MF "$(DEPDIR)/Poll.Tpo" -c -o Poll.obj `if test -f 'os/Poll.cxx'; then $(CYGPATH_W) 'os/Poll.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Poll.cxx'; fi`; \
	then mv -f "$(DEPDIR)/Poll.Tpo" "$(DEPDIR)/Poll.Po"; else rm -f "$(DEPDIR)/Poll.Tpo"; exit 1; fi
#	source='os/Poll.cxx' object='Poll.obj' libtool=no \
#	depfile='$(DEPDIR)/Poll.Po' tmpdepfile='$(DEPDIR)/Poll.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Poll.obj `if test -f 'os/Poll.cxx'; then $(CYGPATH_W) 'os/Poll.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Poll.cxx'; fi`

Poll.lo: os/Poll.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Poll.lo -MD -MP -MF "$(DEPDIR)/Poll.Tpo" -c -o Poll.lo `test -f 'os/Poll.cxx' || echo '$(srcdir)/'`os/Poll.cxx; \
	then mv -f "$(DEPDIR)/Poll.Tpo" "$(DEPDIR)/Poll.Plo"; else rm -f "$(DEPDIR)/Poll.Tpo"; exit 1; fi
#	source='os/Poll.cxx' object='Poll.lo' libtool=yes \
#	depfile='$(DEPDIR)/Poll.Plo' tmpdepfile='$(DEPDIR)/Poll.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Poll.lo `test -f 'os/Poll.cxx' || echo '$(srcdir)/'`os/Poll.cxx

RWMutex.o: os/RWMutex.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RWMutex.o -MD -MP -MF "$(DEPDIR)/RWMutex.Tpo" -c -o RWMutex.o `test -f 'os/RWMutex.cxx' || echo '$(srcdir)/'`os/RWMutex.cxx; \
	then mv -f "$(DEPDIR)/RWMutex.Tpo" "$(DEPDIR)/RWMutex.Po"; else rm -f "$(DEPDIR)/RWMutex.Tpo"; exit 1; fi
#	source='os/RWMutex.cxx' object='RWMutex.o' libtool=no \
#	depfile='$(DEPDIR)/RWMutex.Po' tmpdepfile='$(DEPDIR)/RWMutex.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RWMutex.o `test -f 'os/RWMutex.cxx' || echo '$(srcdir)/'`os/RWMutex.cxx

RWMutex.obj: os/RWMutex.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RWMutex.obj -MD -MP -MF "$(DEPDIR)/RWMutex.Tpo" -c -o RWMutex.obj `if test -f 'os/RWMutex.cxx'; then $(CYGPATH_W) 'os/RWMutex.cxx'; else $(CYGPATH_W) '$(srcdir)/os/RWMutex.cxx'; fi`; \
	then mv -f "$(DEPDIR)/RWMutex.Tpo" "$(DEPDIR)/RWMutex.Po"; else rm -f "$(DEPDIR)/RWMutex.Tpo"; exit 1; fi
#	source='os/RWMutex.cxx' object='RWMutex.obj' libtool=no \
#	depfile='$(DEPDIR)/RWMutex.Po' tmpdepfile='$(DEPDIR)/RWMutex.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RWMutex.obj `if test -f 'os/RWMutex.cxx'; then $(CYGPATH_W) 'os/RWMutex.cxx'; else $(CYGPATH_W) '$(srcdir)/os/RWMutex.cxx'; fi`

RWMutex.lo: os/RWMutex.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RWMutex.lo -MD -MP -MF "$(DEPDIR)/RWMutex.Tpo" -c -o RWMutex.lo `test -f 'os/RWMutex.cxx' || echo '$(srcdir)/'`os/RWMutex.cxx; \
	then mv -f "$(DEPDIR)/RWMutex.Tpo" "$(DEPDIR)/RWMutex.Plo"; else rm -f "$(DEPDIR)/RWMutex.Tpo"; exit 1; fi
#	source='os/RWMutex.cxx' object='RWMutex.lo' libtool=yes \
#	depfile='$(DEPDIR)/RWMutex.Plo' tmpdepfile='$(DEPDIR)/RWMutex.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RWMutex.lo `test -f 'os/RWMutex.cxx' || echo '$(srcdir)/'`os/RWMutex.cxx

Random.o: os/Random.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Random.o -MD -MP -MF "$(DEPDIR)/Random.Tpo" -c -o Random.o `test -f 'os/Random.cxx' || echo '$(srcdir)/'`os/Random.cxx; \
	then mv -f "$(DEPDIR)/Random.Tpo" "$(DEPDIR)/Random.Po"; else rm -f "$(DEPDIR)/Random.Tpo"; exit 1; fi
#	source='os/Random.cxx' object='Random.o' libtool=no \
#	depfile='$(DEPDIR)/Random.Po' tmpdepfile='$(DEPDIR)/Random.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Random.o `test -f 'os/Random.cxx' || echo '$(srcdir)/'`os/Random.cxx

Random.obj: os/Random.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Random.obj -MD -MP -MF "$(DEPDIR)/Random.Tpo" -c -o Random.obj `if test -f 'os/Random.cxx'; then $(CYGPATH_W) 'os/Random.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Random.cxx'; fi`; \
	then mv -f "$(DEPDIR)/Random.Tpo" "$(DEPDIR)/Random.Po"; else rm -f "$(DEPDIR)/Random.Tpo"; exit 1; fi
#	source='os/Random.cxx' object='Random.obj' libtool=no \
#	depfile='$(DEPDIR)/Random.Po' tmpdepfile='$(DEPDIR)/Random.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Random.obj `if test -f 'os/Random.cxx'; then $(CYGPATH_W) 'os/Random.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Random.cxx'; fi`

Random.lo: os/Random.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Random.lo -MD -MP -MF "$(DEPDIR)/Random.Tpo" -c -o Random.lo `test -f 'os/Random.cxx' || echo '$(srcdir)/'`os/Random.cxx; \
	then mv -f "$(DEPDIR)/Random.Tpo" "$(DEPDIR)/Random.Plo"; else rm -f "$(DEPDIR)/Random.Tpo"; exit 1; fi
#	source='os/Random.cxx' object='Random.lo' libtool=yes \
#	depfile='$(DEPDIR)/Random.Plo' tmpdepfile='$(DEPDIR)/Random.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Random.lo `test -f 'os/Random.cxx' || echo '$(srcdir)/'`os/Random.cxx

RecursiveMutex.o: os/RecursiveMutex.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RecursiveMutex.o -MD -MP -MF "$(DEPDIR)/RecursiveMutex.Tpo" -c -o RecursiveMutex.o `test -f 'os/RecursiveMutex.cxx' || echo '$(srcdir)/'`os/RecursiveMutex.cxx; \
	then mv -f "$(DEPDIR)/RecursiveMutex.Tpo" "$(DEPDIR)/RecursiveMutex.Po"; else rm -f "$(DEPDIR)/RecursiveMutex.Tpo"; exit 1; fi
#	source='os/RecursiveMutex.cxx' object='RecursiveMutex.o' libtool=no \
#	depfile='$(DEPDIR)/RecursiveMutex.Po' tmpdepfile='$(DEPDIR)/RecursiveMutex.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RecursiveMutex.o `test -f 'os/RecursiveMutex.cxx' || echo '$(srcdir)/'`os/RecursiveMutex.cxx

RecursiveMutex.obj: os/RecursiveMutex.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RecursiveMutex.obj -MD -MP -MF "$(DEPDIR)/RecursiveMutex.Tpo" -c -o RecursiveMutex.obj `if test -f 'os/RecursiveMutex.cxx'; then $(CYGPATH_W) 'os/RecursiveMutex.cxx'; else $(CYGPATH_W) '$(srcdir)/os/RecursiveMutex.cxx'; fi`; \
	then mv -f "$(DEPDIR)/RecursiveMutex.Tpo" "$(DEPDIR)/RecursiveMutex.Po"; else rm -f "$(DEPDIR)/RecursiveMutex.Tpo"; exit 1; fi
#	source='os/RecursiveMutex.cxx' object='RecursiveMutex.obj' libtool=no \
#	depfile='$(DEPDIR)/RecursiveMutex.Po' tmpdepfile='$(DEPDIR)/RecursiveMutex.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RecursiveMutex.obj `if test -f 'os/RecursiveMutex.cxx'; then $(CYGPATH_W) 'os/RecursiveMutex.cxx'; else $(CYGPATH_W) '$(srcdir)/os/RecursiveMutex.cxx'; fi`

RecursiveMutex.lo: os/RecursiveMutex.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RecursiveMutex.lo -MD -MP -MF "$(DEPDIR)/RecursiveMutex.Tpo" -c -o RecursiveMutex.lo `test -f 'os/RecursiveMutex.cxx' || echo '$(srcdir)/'`os/RecursiveMutex.cxx; \
	then mv -f "$(DEPDIR)/RecursiveMutex.Tpo" "$(DEPDIR)/RecursiveMutex.Plo"; else rm -f "$(DEPDIR)/RecursiveMutex.Tpo"; exit 1; fi
#	source='os/RecursiveMutex.cxx' object='RecursiveMutex.lo' libtool=yes \
#	depfile='$(DEPDIR)/RecursiveMutex.Plo' tmpdepfile='$(DEPDIR)/RecursiveMutex.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RecursiveMutex.lo `test -f 'os/RecursiveMutex.cxx' || echo '$(srcdir)/'`os/RecursiveMutex.cxx

SelectInterruptor.o: os/SelectInterruptor.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SelectInterruptor.o -MD -MP -MF "$(DEPDIR)/SelectInterruptor.Tpo" -c -o SelectInterruptor.o `test -f 'os/SelectInterruptor.cxx' || echo '$(srcdir)/'`os/SelectInterruptor.cxx; \
	then mv -f "$(DEPDIR)/SelectInterruptor.Tpo" "$(DEPDIR)/SelectInterruptor.Po"; else rm -f "$(DEPDIR)/SelectInterruptor.Tpo"; exit 1; fi
#	source='os/SelectInterruptor.cxx' object='SelectInterruptor.o' libtool=no \
#	depfile='$(DEPDIR)/SelectInterruptor.Po' tmpdepfile='$(DEPDIR)/SelectInterruptor.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SelectInterruptor.o `test -f 'os/SelectInterruptor.cxx' || echo '$(srcdir)/'`os/SelectInterruptor.cxx

SelectInterruptor.obj: os/SelectInterruptor.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SelectInterruptor.obj -MD -MP -MF "$(DEPDIR)/SelectInterruptor.Tpo" -c -o SelectInterruptor.obj `if test -f 'os/SelectInterruptor.cxx'; then $(CYGPATH_W) 'os/SelectInterruptor.cxx'; else $(CYGPATH_W) '$(srcdir)/os/SelectInterruptor.cxx'; fi`; \
	then mv -f "$(DEPDIR)/SelectInterruptor.Tpo" "$(DEPDIR)/SelectInterruptor.Po"; else rm -f "$(DEPDIR)/SelectInterruptor.Tpo"; exit 1; fi
#	source='os/SelectInterruptor.cxx' object='SelectInterruptor.obj' libtool=no \
#	depfile='$(DEPDIR)/SelectInterruptor.Po' tmpdepfile='$(DEPDIR)/SelectInterruptor.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SelectInterruptor.obj `if test -f 'os/SelectInterruptor.cxx'; then $(CYGPATH_W) 'os/SelectInterruptor.cxx'; else $(CYGPATH_W) '$(srcdir)/os/SelectInterruptor.cxx'; fi`

SelectInterruptor.lo: os/SelectInterruptor.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SelectInterruptor.lo -MD -MP -MF "$(DEPDIR)/SelectInterruptor.Tpo" -c -o SelectInterruptor.lo `test -f 'os/SelectInterruptor.cxx' || echo '$(srcdir)/'`os/SelectInterruptor.cxx; \
	then mv -f "$(DEPDIR)/SelectInterruptor.Tpo" "$(DEPDIR)/SelectInterruptor.Plo"; else rm -f "$(DEPDIR)/SelectInterruptor.Tpo"; exit 1; fi
#	source='os/SelectInterruptor.cxx' object='SelectInterruptor.lo' libtool=yes \
#	depfile='$(DEPDIR)/SelectInterruptor.Plo' tmpdepfile='$(DEPDIR)/SelectInterruptor.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SelectInterruptor.lo `test -f 'os/SelectInterruptor.cxx' || echo '$(srcdir)/'`os/SelectInterruptor.cxx

SHA1Stream.o: os/SHA1Stream.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SHA1Stream.o -MD -MP -MF "$(DEPDIR)/SHA1Stream.Tpo" -c -o SHA1Stream.o `test -f 'os/SHA1Stream.cxx' || echo '$(srcdir)/'`os/SHA1Stream.cxx; \
	then mv -f "$(DEPDIR)/SHA1Stream.Tpo" "$(DEPDIR)/SHA1Stream.Po"; else rm -f "$(DEPDIR)/SHA1Stream.Tpo"; exit 1; fi
#	source='os/SHA1Stream.cxx' object='SHA1Stream.o' libtool=no \
#	depfile='$(DEPDIR)/SHA1Stream.Po' tmpdepfile='$(DEPDIR)/SHA1Stream.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SHA1Stream.o `test -f 'os/SHA1Stream.cxx' || echo '$(srcdir)/'`os/SHA1Stream.cxx

SHA1Stream.obj: os/SHA1Stream.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SHA1Stream.obj -MD -MP -MF "$(DEPDIR)/SHA1Stream.Tpo" -c -o SHA1Stream.obj `if test -f 'os/SHA1Stream.cxx'; then $(CYGPATH_W) 'os/SHA1Stream.cxx'; else $(CYGPATH_W) '$(srcdir)/os/SHA1Stream.cxx'; fi`; \
	then mv -f "$(DEPDIR)/SHA1Stream.Tpo" "$(DEPDIR)/SHA1Stream.Po"; else rm -f "$(DEPDIR)/SHA1Stream.Tpo"; exit 1; fi
#	source='os/SHA1Stream.cxx' object='SHA1Stream.obj' libtool=no \
#	depfile='$(DEPDIR)/SHA1Stream.Po' tmpdepfile='$(DEPDIR)/SHA1Stream.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SHA1Stream.obj `if test -f 'os/SHA1Stream.cxx'; then $(CYGPATH_W) 'os/SHA1Stream.cxx'; else $(CYGPATH_W) '$(srcdir)/os/SHA1Stream.cxx'; fi`

SHA1Stream.lo: os/SHA1Stream.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SHA1Stream.lo -MD -MP -MF "$(DEPDIR)/SHA1Stream.Tpo" -c -o SHA1Stream.lo `test -f 'os/SHA1Stream.cxx' || echo '$(srcdir)/'`os/SHA1Stream.cxx; \
	then mv -f "$(DEPDIR)/SHA1Stream.Tpo" "$(DEPDIR)/SHA1Stream.Plo"; else rm -f "$(DEPDIR)/SHA1Stream.Tpo"; exit 1; fi
#	source='os/SHA1Stream.cxx' object='SHA1Stream.lo' libtool=yes \
#	depfile='$(DEPDIR)/SHA1Stream.Plo' tmpdepfile='$(DEPDIR)/SHA1Stream.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SHA1Stream.lo `test -f 'os/SHA1Stream.cxx' || echo '$(srcdir)/'`os/SHA1Stream.cxx

Socket.o: os/Socket.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Socket.o -MD -MP -MF "$(DEPDIR)/Socket.Tpo" -c -o Socket.o `test -f 'os/Socket.cxx' || echo '$(srcdir)/'`os/Socket.cxx; \
	then mv -f "$(DEPDIR)/Socket.Tpo" "$(DEPDIR)/Socket.Po"; else rm -f "$(DEPDIR)/Socket.Tpo"; exit 1; fi
#	source='os/Socket.cxx' object='Socket.o' libtool=no \
#	depfile='$(DEPDIR)/Socket.Po' tmpdepfile='$(DEPDIR)/Socket.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Socket.o `test -f 'os/Socket.cxx' || echo '$(srcdir)/'`os/Socket.cxx

Socket.obj: os/Socket.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Socket.obj -MD -MP -MF "$(DEPDIR)/Socket.Tpo" -c -o Socket.obj `if test -f 'os/Socket.cxx'; then $(CYGPATH_W) 'os/Socket.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Socket.cxx'; fi`; \
	then mv -f "$(DEPDIR)/Socket.Tpo" "$(DEPDIR)/Socket.Po"; else rm -f "$(DEPDIR)/Socket.Tpo"; exit 1; fi
#	source='os/Socket.cxx' object='Socket.obj' libtool=no \
#	depfile='$(DEPDIR)/Socket.Po' tmpdepfile='$(DEPDIR)/Socket.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Socket.obj `if test -f 'os/Socket.cxx'; then $(CYGPATH_W) 'os/Socket.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Socket.cxx'; fi`

Socket.lo: os/Socket.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Socket.lo -MD -MP -MF "$(DEPDIR)/Socket.Tpo" -c -o Socket.lo `test -f 'os/Socket.cxx' || echo '$(srcdir)/'`os/Socket.cxx; \
	then mv -f "$(DEPDIR)/Socket.Tpo" "$(DEPDIR)/Socket.Plo"; else rm -f "$(DEPDIR)/Socket.Tpo"; exit 1; fi
#	source='os/Socket.cxx' object='Socket.lo' libtool=yes \
#	depfile='$(DEPDIR)/Socket.Plo' tmpdepfile='$(DEPDIR)/Socket.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Socket.lo `test -f 'os/Socket.cxx' || echo '$(srcdir)/'`os/Socket.cxx

Subsystem.o: os/Subsystem.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Subsystem.o -MD -MP -MF "$(DEPDIR)/Subsystem.Tpo" -c -o Subsystem.o `test -f 'os/Subsystem.cxx' || echo '$(srcdir)/'`os/Subsystem.cxx; \
	then mv -f "$(DEPDIR)/Subsystem.Tpo" "$(DEPDIR)/Subsystem.Po"; else rm -f "$(DEPDIR)/Subsystem.Tpo"; exit 1; fi
#	source='os/Subsystem.cxx' object='Subsystem.o' libtool=no \
#	depfile='$(DEPDIR)/Subsystem.Po' tmpdepfile='$(DEPDIR)/Subsystem.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Subsystem.o `test -f 'os/Subsystem.cxx' || echo '$(srcdir)/'`os/Subsystem.cxx

Subsystem.obj: os/Subsystem.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Subsystem.obj -MD -MP -MF "$(DEPDIR)/Subsystem.Tpo" -c -o Subsystem.obj `if test -f 'os/Subsystem.cxx'; then $(CYGPATH_W) 'os/Subsystem.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Subsystem.cxx'; fi`; \
	then mv -f "$(DEPDIR)/Subsystem.Tpo" "$(DEPDIR)/Subsystem.Po"; else rm -f "$(DEPDIR)/Subsystem.Tpo"; exit 1; fi
#	source='os/Subsystem.cxx' object='Subsystem.obj' libtool=no \
#	depfile='$(DEPDIR)/Subsystem.Po' tmpdepfile='$(DEPDIR)/Subsystem.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Subsystem.obj `if test -f 'os/Subsystem.cxx'; then $(CYGPATH_W) 'os/Subsystem.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Subsystem.cxx'; fi`

Subsystem.lo: os/Subsystem.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Subsystem.lo -MD -MP -MF "$(DEPDIR)/Subsystem.Tpo" -c -o Subsystem.lo `test -f 'os/Subsystem.cxx' || echo '$(srcdir)/'`os/Subsystem.cxx; \
	then mv -f "$(DEPDIR)/Subsystem.Tpo" "$(DEPDIR)/Subsystem.Plo"; else rm -f "$(DEPDIR)/Subsystem.Tpo"; exit 1; fi
#	source='os/Subsystem.cxx' object='Subsystem.lo' libtool=yes \
#	depfile='$(DEPDIR)/Subsystem.Plo' tmpdepfile='$(DEPDIR)/Subsystem.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Subsystem.lo `test -f 'os/Subsystem.cxx' || echo '$(srcdir)/'`os/Subsystem.cxx

SysLogBuf.o: os/SysLogBuf.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SysLogBuf.o -MD -MP -MF "$(DEPDIR)/SysLogBuf.Tpo" -c -o SysLogBuf.o `test -f 'os/SysLogBuf.cxx' || echo '$(srcdir)/'`os/SysLogBuf.cxx; \
	then mv -f "$(DEPDIR)/SysLogBuf.Tpo" "$(DEPDIR)/SysLogBuf.Po"; else rm -f "$(DEPDIR)/SysLogBuf.Tpo"; exit 1; fi
#	source='os/SysLogBuf.cxx' object='SysLogBuf.o' libtool=no \
#	depfile='$(DEPDIR)/SysLogBuf.Po' tmpdepfile='$(DEPDIR)/SysLogBuf.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SysLogBuf.o `test -f 'os/SysLogBuf.cxx' || echo '$(srcdir)/'`os/SysLogBuf.cxx

SysLogBuf.obj: os/SysLogBuf.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SysLogBuf.obj -MD -MP -MF "$(DEPDIR)/SysLogBuf.Tpo" -c -o SysLogBuf.obj `if test -f 'os/SysLogBuf.cxx'; then $(CYGPATH_W) 'os/SysLogBuf.cxx'; else $(CYGPATH_W) '$(srcdir)/os/SysLogBuf.cxx'; fi`; \
	then mv -f "$(DEPDIR)/SysLogBuf.Tpo" "$(DEPDIR)/SysLogBuf.Po"; else rm -f "$(DEPDIR)/SysLogBuf.Tpo"; exit 1; fi
#	source='os/SysLogBuf.cxx' object='SysLogBuf.obj' libtool=no \
#	depfile='$(DEPDIR)/SysLogBuf.Po' tmpdepfile='$(DEPDIR)/SysLogBuf.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SysLogBuf.obj `if test -f 'os/SysLogBuf.cxx'; then $(CYGPATH_W) 'os/SysLogBuf.cxx'; else $(CYGPATH_W) '$(srcdir)/os/SysLogBuf.cxx'; fi`

SysLogBuf.lo: os/SysLogBuf.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SysLogBuf.lo -MD -MP -MF "$(DEPDIR)/SysLogBuf.Tpo" -c -o SysLogBuf.lo `test -f 'os/SysLogBuf.cxx' || echo '$(srcdir)/'`os/SysLogBuf.cxx; \
	then mv -f "$(DEPDIR)/SysLogBuf.Tpo" "$(DEPDIR)/SysLogBuf.Plo"; else rm -f "$(DEPDIR)/SysLogBuf.Tpo"; exit 1; fi
#	source='os/SysLogBuf.cxx' object='SysLogBuf.lo' libtool=yes \
#	depfile='$(DEPDIR)/SysLogBuf.Plo' tmpdepfile='$(DEPDIR)/SysLogBuf.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SysLogBuf.lo `test -f 'os/SysLogBuf.cxx' || echo '$(srcdir)/'`os/SysLogBuf.cxx

SysLogStream.o: os/SysLogStream.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SysLogStream.o -MD -MP -MF "$(DEPDIR)/SysLogStream.Tpo" -c -o SysLogStream.o `test -f 'os/SysLogStream.cxx' || echo '$(srcdir)/'`os/SysLogStream.cxx; \
	then mv -f "$(DEPDIR)/SysLogStream.Tpo" "$(DEPDIR)/SysLogStream.Po"; else rm -f "$(DEPDIR)/SysLogStream.Tpo"; exit 1; fi
#	source='os/SysLogStream.cxx' object='SysLogStream.o' libtool=no \
#	depfile='$(DEPDIR)/SysLogStream.Po' tmpdepfile='$(DEPDIR)/SysLogStream.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SysLogStream.o `test -f 'os/SysLogStream.cxx' || echo '$(srcdir)/'`os/SysLogStream.cxx

SysLogStream.obj: os/SysLogStream.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SysLogStream.obj -MD -MP -MF "$(DEPDIR)/SysLogStream.Tpo" -c -o SysLogStream.obj `if test -f 'os/SysLogStream.cxx'; then $(CYGPATH_W) 'os/SysLogStream.cxx'; else $(CYGPATH_W) '$(srcdir)/os/SysLogStream.cxx'; fi`; \
	then mv -f "$(DEPDIR)/SysLogStream.Tpo" "$(DEPDIR)/SysLogStream.Po"; else rm -f "$(DEPDIR)/SysLogStream.Tpo"; exit 1; fi
#	source='os/SysLogStream.cxx' object='SysLogStream.obj' libtool=no \
#	depfile='$(DEPDIR)/SysLogStream.Po' tmpdepfile='$(DEPDIR)/SysLogStream.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SysLogStream.obj `if test -f 'os/SysLogStream.cxx'; then $(CYGPATH_W) 'os/SysLogStream.cxx'; else $(CYGPATH_W) '$(srcdir)/os/SysLogStream.cxx'; fi`

SysLogStream.lo: os/SysLogStream.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SysLogStream.lo -MD -MP -MF "$(DEPDIR)/SysLogStream.Tpo" -c -o SysLogStream.lo `test -f 'os/SysLogStream.cxx' || echo '$(srcdir)/'`os/SysLogStream.cxx; \
	then mv -f "$(DEPDIR)/SysLogStream.Tpo" "$(DEPDIR)/SysLogStream.Plo"; else rm -f "$(DEPDIR)/SysLogStream.Tpo"; exit 1; fi
#	source='os/SysLogStream.cxx' object='SysLogStream.lo' libtool=yes \
#	depfile='$(DEPDIR)/SysLogStream.Plo' tmpdepfile='$(DEPDIR)/SysLogStream.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SysLogStream.lo `test -f 'os/SysLogStream.cxx' || echo '$(srcdir)/'`os/SysLogStream.cxx

ThreadIf.o: os/ThreadIf.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ThreadIf.o -MD -MP -MF "$(DEPDIR)/ThreadIf.Tpo" -c -o ThreadIf.o `test -f 'os/ThreadIf.cxx' || echo '$(srcdir)/'`os/ThreadIf.cxx; \
	then mv -f "$(DEPDIR)/ThreadIf.Tpo" "$(DEPDIR)/ThreadIf.Po"; else rm -f "$(DEPDIR)/ThreadIf.Tpo"; exit 1; fi
#	source='os/ThreadIf.cxx' object='ThreadIf.o' libtool=no \
#	depfile='$(DEPDIR)/ThreadIf.Po' tmpdepfile='$(DEPDIR)/ThreadIf.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ThreadIf.o `test -f 'os/ThreadIf.cxx' || echo '$(srcdir)/'`os/ThreadIf.cxx

ThreadIf.obj: os/ThreadIf.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ThreadIf.obj -MD -MP -MF "$(DEPDIR)/ThreadIf.Tpo" -c -o ThreadIf.obj `if test -f 'os/ThreadIf.cxx'; then $(CYGPATH_W) 'os/ThreadIf.cxx'; else $(CYGPATH_W) '$(srcdir)/os/ThreadIf.cxx'; fi`; \
	then mv -f "$(DEPDIR)/ThreadIf.Tpo" "$(DEPDIR)/ThreadIf.Po"; else rm -f "$(DEPDIR)/ThreadIf.Tpo"; exit 1; fi
#	source='os/ThreadIf.cxx' object='ThreadIf.obj' libtool=no \
#	depfile='$(DEPDIR)/ThreadIf.Po' tmpdepfile='$(DEPDIR)/ThreadIf.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ThreadIf.obj `if test -f 'os/ThreadIf.cxx'; then $(CYGPATH_W) 'os/ThreadIf.cxx'; else $(CYGPATH_W) '$(srcdir)/os/ThreadIf.cxx'; fi`

ThreadIf.lo: os/ThreadIf.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ThreadIf.lo -MD -MP -MF "$(DEPDIR)/ThreadIf.Tpo" -c -o ThreadIf.lo `test -f 'os/ThreadIf.cxx' || echo '$(srcdir)/'`os/ThreadIf.cxx; \
	then mv -f "$(DEPDIR)/ThreadIf.Tpo" "$(DEPDIR)/ThreadIf.Plo"; else rm -f "$(DEPDIR)/ThreadIf.Tpo"; exit 1; fi
#	source='os/ThreadIf.cxx' object='ThreadIf.lo' libtool=yes \
#	depfile='$(DEPDIR)/ThreadIf.Plo' tmpdepfile='$(DEPDIR)/ThreadIf.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ThreadIf.lo `test -f 'os/ThreadIf.cxx' || echo '$(srcdir)/'`os/ThreadIf.cxx

Timer.o: os/Timer.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Timer.o -MD -MP -MF "$(DEPDIR)/Timer.Tpo" -c -o Timer.o `test -f 'os/Timer.cxx' || echo '$(srcdir)/'`os/Timer.cxx; \
	then mv -f "$(DEPDIR)/Timer.Tpo" "$(DEPDIR)/Timer.Po"; else rm -f "$(DEPDIR)/Timer.Tpo"; exit 1; fi
#	source='os/Timer.cxx' object='Timer.o' libtool=no \
#	depfile='$(DEPDIR)/Timer.Po' tmpdepfile='$(DEPDIR)/Timer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Timer.o `test -f 'os/Timer.cxx' || echo '$(srcdir)/'`os/Timer.cxx

Timer.obj: os/Timer.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Timer.obj -MD -MP -MF "$(DEPDIR)/Timer.Tpo" -c -o Timer.obj `if test -f 'os/Timer.cxx'; then $(CYGPATH_W) 'os/Timer.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Timer.cxx'; fi`; \
	then mv -f "$(DEPDIR)/Timer.Tpo" "$(DEPDIR)/Timer.Po"; else rm -f "$(DEPDIR)/Timer.Tpo"; exit 1; fi
#	source='os/Timer.cxx' object='Timer.obj' libtool=no \
#	depfile='$(DEPDIR)/Timer.Po' tmpdepfile='$(DEPDIR)/Timer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Timer.obj `if test -f 'os/Timer.cxx'; then $(CYGPATH_W) 'os/Timer.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Timer.cxx'; fi`

Timer.lo: os/Timer.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Timer.lo -MD -MP -MF "$(DEPDIR)/Timer.Tpo" -c -o Timer.lo `test -f 'os/Timer.cxx' || echo '$(srcdir)/'`os/Timer.cxx; \
	then mv -f "$(DEPDIR)/Timer.Tpo" "$(DEPDIR)/Timer.Plo"; else rm -f "$(DEPDIR)/Timer.Tpo"; exit 1; fi
#	source='os/Timer.cxx' object='Timer.lo' libtool=yes \
#	depfile='$(DEPDIR)/Timer.Plo' tmpdepfile='$(DEPDIR)/Timer.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Timer.lo `test -f 'os/Timer.cxx' || echo '$(srcdir)/'`os/Timer.cxx

Tuple.o: os/Tuple.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Tuple.o -MD -MP -MF "$(DEPDIR)/Tuple.Tpo" -c -o Tuple.o `test -f 'os/Tuple.cxx' || echo '$(srcdir)/'`os/Tuple.cxx; \
	then mv -f "$(DEPDIR)/Tuple.Tpo" "$(DEPDIR)/Tuple.Po"; else rm -f "$(DEPDIR)/Tuple.Tpo"; exit 1; fi
#	source='os/Tuple.cxx' object='Tuple.o' libtool=no \
#	depfile='$(DEPDIR)/Tuple.Po' tmpdepfile='$(DEPDIR)/Tuple.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Tuple.o `test -f 'os/Tuple.cxx' || echo '$(srcdir)/'`os/Tuple.cxx

Tuple.obj: os/Tuple.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Tuple.obj -MD -MP -MF "$(DEPDIR)/Tuple.Tpo" -c -o Tuple.obj `if test -f 'os/Tuple.cxx'; then $(CYGPATH_W) 'os/Tuple.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Tuple.cxx'; fi`; \
	then mv -f "$(DEPDIR)/Tuple.Tpo" "$(DEPDIR)/Tuple.Po"; else rm -f "$(DEPDIR)/Tuple.Tpo"; exit 1; fi
#	source='os/Tuple.cxx' object='Tuple.obj' libtool=no \
#	depfile='$(DEPDIR)/Tuple.Po' tmpdepfile='$(DEPDIR)/Tuple.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Tuple.obj `if test -f 'os/Tuple.cxx'; then $(CYGPATH_W) 'os/Tuple.cxx'; else $(CYGPATH_W) '$(srcdir)/os/Tuple.cxx'; fi`

Tuple.lo: os/Tuple.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Tuple.lo -MD -MP -MF "$(DEPDIR)/Tuple.Tpo" -c -o Tuple.lo `test -f 'os/Tuple.cxx' || echo '$(srcdir)/'`os/Tuple.cxx; \
	then mv -f "$(DEPDIR)/Tuple.Tpo" "$(DEPDIR)/Tuple.Plo"; else rm -f "$(DEPDIR)/Tuple.Tpo"; exit 1; fi
#	source='os/Tuple.cxx' object='Tuple.lo' libtool=yes \
#	depfile='$(DEPDIR)/Tuple.Plo' tmpdepfile='$(DEPDIR)/Tuple.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Tuple.lo `test -f 'os/Tuple.cxx' || echo '$(srcdir)/'`os/Tuple.cxx

WinCompat.o: os/WinCompat.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT WinCompat.o -MD -MP -MF "$(DEPDIR)/WinCompat.Tpo" -c -o WinCompat.o `test -f 'os/WinCompat.cxx' || echo '$(srcdir)/'`os/WinCompat.cxx; \
	then mv -f "$(DEPDIR)/WinCompat.Tpo" "$(DEPDIR)/WinCompat.Po"; else rm -f "$(DEPDIR)/WinCompat.Tpo"; exit 1; fi
#	source='os/WinCompat.cxx' object='WinCompat.o' libtool=no \
#	depfile='$(DEPDIR)/WinCompat.Po' tmpdepfile='$(DEPDIR)/WinCompat.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WinCompat.o `test -f 'os/WinCompat.cxx' || echo '$(srcdir)/'`os/WinCompat.cxx

WinCompat.obj: os/WinCompat.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT WinCompat.obj -MD -MP -MF "$(DEPDIR)/WinCompat.Tpo" -c -o WinCompat.obj `if test -f 'os/WinCompat.cxx'; then $(CYGPATH_W) 'os/WinCompat.cxx'; else $(CYGPATH_W) '$(srcdir)/os/WinCompat.cxx'; fi`; \
	then mv -f "$(DEPDIR)/WinCompat.Tpo" "$(DEPDIR)/WinCompat.Po"; else rm -f "$(DEPDIR)/WinCompat.Tpo"; exit 1; fi
#	source='os/WinCompat.cxx' object='WinCompat.obj' libtool=no \
#	depfile='$(DEPDIR)/WinCompat.Po' tmpdepfile='$(DEPDIR)/WinCompat.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WinCompat.obj `if test -f 'os/WinCompat.cxx'; then $(CYGPATH_W) 'os/WinCompat.cxx'; else $(CYGPATH_W) '$(srcdir)/os/WinCompat.cxx'; fi`

WinCompat.lo: os/WinCompat.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT WinCompat.lo -MD -MP -MF "$(DEPDIR)/WinCompat.Tpo" -c -o WinCompat.lo `test -f 'os/WinCompat.cxx' || echo '$(srcdir)/'`os/WinCompat.cxx; \
	then mv -f "$(DEPDIR)/WinCompat.Tpo" "$(DEPDIR)/WinCompat.Plo"; else rm -f "$(DEPDIR)/WinCompat.Tpo"; exit 1; fi
#	source='os/WinCompat.cxx' object='WinCompat.lo' libtool=yes \
#	depfile='$(DEPDIR)/WinCompat.Plo' tmpdepfile='$(DEPDIR)/WinCompat.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WinCompat.lo `test -f 'os/WinCompat.cxx' || echo '$(srcdir)/'`os/WinCompat.cxx

vmd5.o: os/vmd5.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vmd5.o -MD -MP -MF "$(DEPDIR)/vmd5.Tpo" -c -o vmd5.o `test -f 'os/vmd5.cxx' || echo '$(srcdir)/'`os/vmd5.cxx; \
	then mv -f "$(DEPDIR)/vmd5.Tpo" "$(DEPDIR)/vmd5.Po"; else rm -f "$(DEPDIR)/vmd5.Tpo"; exit 1; fi
#	source='os/vmd5.cxx' object='vmd5.o' libtool=no \
#	depfile='$(DEPDIR)/vmd5.Po' tmpdepfile='$(DEPDIR)/vmd5.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vmd5.o `test -f 'os/vmd5.cxx' || echo '$(srcdir)/'`os/vmd5.cxx

vmd5.obj: os/vmd5.cxx
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vmd5.obj -MD -MP -MF "$(DEPDIR)/vmd5.Tpo" -c -o vmd5.obj `if test -f 'os/vmd5.cxx'; then $(CYGPATH_W) 'os/vmd5.cxx'; else $(CYGPATH_W) '$(srcdir)/os/vmd5.cxx'; fi`; \
	then mv -f "$(DEPDIR)/vmd5.Tpo" "$(DEPDIR)/vmd5.Po"; else rm -f "$(DEPDIR)/vmd5.Tpo"; exit 1; fi
#	source='os/vmd5.cxx' object='vmd5.obj' libtool=no \
#	depfile='$(DEPDIR)/vmd5.Po' tmpdepfile='$(DEPDIR)/vmd5.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vmd5.obj `if test -f 'os/vmd5.cxx'; then $(CYGPATH_W) 'os/vmd5.cxx'; else $(CYGPATH_W) '$(srcdir)/os/vmd5.cxx'; fi`

vmd5.lo: os/vmd5.cxx
	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vmd5.lo -MD -MP -MF "$(DEPDIR)/vmd5.Tpo" -c -o vmd5.lo `test -f 'os/vmd5.cxx' || echo '$(srcdir)/'`os/vmd5.cxx; \
	then mv -f "$(DEPDIR)/vmd5.Tpo" "$(DEPDIR)/vmd5.Plo"; else rm -f "$(DEPDIR)/vmd5.Tpo"; exit 1; fi
#	source='os/vmd5.cxx' object='vmd5.lo' libtool=yes \
#	depfile='$(DEPDIR)/vmd5.Plo' tmpdepfile='$(DEPDIR)/vmd5.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vmd5.lo `test -f 'os/vmd5.cxx' || echo '$(srcdir)/'`os/vmd5.cxx

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-resiprocate_external_includeHEADERS: $(resiprocate_external_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(resiprocate_external_includedir)" || $(mkdir_p) "$(DESTDIR)$(resiprocate_external_includedir)"
	@list='$(resiprocate_external_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(resiprocate_external_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(resiprocate_external_includedir)/$$f'"; \
	  $(resiprocate_external_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(resiprocate_external_includedir)/$$f"; \
	done

uninstall-resiprocate_external_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(resiprocate_external_include_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(resiprocate_external_includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(resiprocate_external_includedir)/$$f"; \
	done
install-resiprocate_includeHEADERS: $(resiprocate_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(resiprocate_includedir)" || $(mkdir_p) "$(DESTDIR)$(resiprocate_includedir)"
	@list='$(resiprocate_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(resiprocate_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(resiprocate_includedir)/$$f'"; \
	  $(resiprocate_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(resiprocate_includedir)/$$f"; \
	done

uninstall-resiprocate_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(resiprocate_include_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(resiprocate_includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(resiprocate_includedir)/$$f"; \
	done
install-resiprocate_os_includeHEADERS: $(resiprocate_os_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(resiprocate_os_includedir)" || $(mkdir_p) "$(DESTDIR)$(resiprocate_os_includedir)"
	@list='$(resiprocate_os_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(resiprocate_os_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(resiprocate_os_includedir)/$$f'"; \
	  $(resiprocate_os_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(resiprocate_os_includedir)/$$f"; \
	done

uninstall-resiprocate_os_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(resiprocate_os_include_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(resiprocate_os_includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(resiprocate_os_includedir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.hxx.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.hxx.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.hxx.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.hxx.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/external $(distdir)/os
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || mkdir "$(distdir)/$$subdir" \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="../$(top_distdir)" \
	        distdir="../$(distdir)/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS) config.hxx
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(resiprocate_external_includedir)" "$(DESTDIR)$(resiprocate_includedir)" "$(DESTDIR)$(resiprocate_os_includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-resiprocate_external_includeHEADERS \
	install-resiprocate_includeHEADERS \
	install-resiprocate_os_includeHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-resiprocate_external_includeHEADERS \
	uninstall-resiprocate_includeHEADERS \
	uninstall-resiprocate_os_includeHEADERS

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-resiprocate_external_includeHEADERS \
	install-resiprocate_includeHEADERS \
	install-resiprocate_os_includeHEADERS install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-resiprocate_external_includeHEADERS \
	uninstall-resiprocate_includeHEADERS \
	uninstall-resiprocate_os_includeHEADERS


#SUFFIXES = .gperf .cxx
#GPERFFLAGS = -D --enum -E -L C++ -t -k '*' --compare-strncmp
#.gperf.cxx:
#	gperf $(GPERFFLAGS) -Z `echo $* | sed -e 's/.*\///'` $< | \
#	sed -e 's/str\[\([0-9][0-9]*\)\]/tolower(str[\1])/g' | \
#	sed -e 's/^\([	]*\)if *(\*\([a-z][a-z]*\) *== *\*\([a-z][a-z]*\) *\&\& *!strncmp *(\([^)]*\)).*/\1if (tolower(*\2) == *\3 \&\& !strncasecmp( \4 ))/g' > $@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
