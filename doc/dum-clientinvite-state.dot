//  names start with cap are states
//  names start with app:: are appliction handlers
//  names start with dum:: are dum interface to application
//  names start with lower case are actions
//  names start with on are events

digraph UAC {
    rankdir=LR;
    node [shape = box];

    // create a timer in the DialogSet when 1xx is received including 100
    Start -> Early                              [ label = "on1xx/app::onNewSession,app::onProvisional" ];
    Start -> Early                              [ label = "on1xx-early/app::onNewSession,app::onProvisional,app::onEarlyMedia" ];
    Start -> EarlyWithOffer                     [ label = "on1xx-offer/app::onProvisional,app::onOffer" ];
    Start -> EarlyWithAnswer                    [ label = "on1xx-answer/app::onNewSession,app::onProvisional,app::onAnswer,PRACK" ];
    Start -> Answered                           [ label = "on2xx-offer/app::onOffer" ];
    Start -> Connected                          [ label = "on2xx-answer/send::ACK" ];
    Start -> Terminated                         [ label = "on2xx/send::ACK,send::BYE,app::onFailure" ];
    Start -> Terminated                         [ label = "onInviteFailure|onGeneralFailure/app::onFailure" ];
    Start -> Terminated                         [ label = "onRedirect/app::onRedirected" ];
    Start -> Assert                             [ label = "dum::cancel/assert" ];

    Early -> Early                              [ label = "on1xx/app::onProvisional,send::PRACK" ];
    Early -> Early                              [ label = "on1xx-early/app::onProvisional,app::onEarlyMedia" ];
    Early -> EarlyWithOffer                     [ label = "on1xx-offer/app::onProvisional,app::onOffer" ];
    Early -> EarlyWithAnswer                    [ label = "on1xx-answer/app::onProvisional,app::onAnswer,send::PRACK" ];
    Early -> Answered                           [ label = "on2xx-offer/app::onOffer,app::onConnected" ];
    Early -> Connected                          [ label = "on2xx-answer/send::ACK" ];
    Early -> Terminated                         [ label = "on2xx/send::ACK,send::BYE" ];
    Early -> Finish                             [ label = "onGeneralFailure|onInviteFailure/app::onFailure" ];
    Early -> Terminated                         [ label = "onRedirect/app::onRedirected" ];
    Early -> Canceled                           [ label = "dum::cancel/timer::cancel" ];
    Early -> Terminated                         [ label = "dum::provideAnswer/assert(0)" ];
    Early -> Terminated                         [ label = "dum::provideOffer/assert(0)" ];
    Early -> Terminated                         [ label = "dum::end/send::BYE" ];


    EarlyWithOffer -> EarlyWithOffer            [ label = "on1xx/app::onProvisional" ];
    //  Ken's note:
    //  Rohan says, the first 180 an UAS is to respond to an INVITE w/offer, must contain an answer.
    EarlyWithOffer -> SentAnswer                [ label = "dum::provideAnswer/send::PRACK-answer" ];
    EarlyWithOffer -> Terminated                [ label = "on2xx|on2xx-answer/app::onFailure,send::ACK,send::BYE" ];
    EarlyWithOffer -> Terminated                [ label = "onRedirect/app::onRedirected" ];
    EarlyWithOffer -> Finish                    [ label = "onGeneralFailure|onInviteFailure/app::onFailure" ];
    EarlyWithOffer -> Canceled                  [ label = "dum::cancel/timer::cancel" ];
    EarlyWithOffer -> Assert                    [ label = "dum::provideOffer/assert(0)" ];
    EarlyWithOffer -> Terminated                [ label = "dum::end/send::BYE" ];

    EarlyWithAnswer -> EarlyWithAnswer          [ label = "on1xx/app::onProvisional,send::PRACK" ];
    EarlyWithAnswer -> EarlyWithAnswer          [ label = "on1xx-retran" ];
    EarlyWithAnswer -> Connected                [ label = "on2xx/send::ACK,app::onConnected" ];
    EarlyWithAnswer -> Terminated           [ label = "on2XX-sdp/send::ACK,send::BYE,app::onFailure" ];
    EarlyWithAnswer -> ReceivedUpdateEarly  [ label = "onUPDATE/app::onOffer" ];
    EarlyWithAnswer -> SentUpdateEarly      [ label = "dum::provideOffer/send::UPDATE" ];    // Can I send the UPDATE before I get 200/PRACK
    EarlyWithAnswer -> Terminated           [ label = "onRedirect/app::onRedirected" ];
    EarlyWithAnswer -> Finished             [ label = "onGeneralFailure" ];
    EarlyWithAnswer -> Canceled             [ label = "dum::cancel/timer::cancel" ];
    EarlyWithAnswer -> Terminated           [ label = "dum::end/send::BYE" ];
    EarlyWithAnswer -> Assert               [ label = "dum::provideAnswer/assert(0)" ];

    SentUpdateEarly -> EarlyWithAnswer      [ label = "on200U/app::onAnswer" ];
    SentUpdateEarly -> EarlyWithAnswer      [ label = "onUPDATE/489glare" ];
    SentUpdateEarly -> EarlyWithAnswer      [ label = "on489/glare" ];
    SentUpdateEarly -> SentUpdateConnected  [ label = "on2xxI/send::ACK" ];
    SentUpdateEarly -> Finish               [ label = "onGeneralFailure" ];
    SentUpdateEarly -> Canceled             [ label = "dum::cancel/timer::cancel" ];
    SentUpdateEarly -> Terminated           [ label = "dum::provideAnswer/assert(0)" ];
    SentUpdateEarly -> Terminated           [ label = "dum::provideOffer/assert(0)" ];
    SentUpdateEarly -> Terminated           [ label = "onRedirect/app::onRedirected" ];
    SentUpdateEarly -> Terminated           [ label = "dum::end/send::BYE" ];

    SentUpdateConnected -> Connected        [ label = "on200U/app::onAnswer" ];
    SentUpdateConnected -> Connected        [ label = "on488U/app::onRejected" ];
    SentUpdateConnected -> Connected        [ label = "on489U/glare" ];
    SentUpdateConnected -> Terminated       [ label = "dum::cancel/assert(0)" ];
    SentUpdateConnected -> Terminated       [ label = "dum::provideAnswer/assert(0)" ];
    SentUpdateConnected -> Terminated       [ label = "dum::provideOffer/assert(0)" ];
    SentUpdateConnected -> Terminated       [ label = "dum::end/send::BYE" ];

    ReceivedUpdateEarly -> Terminated       [ label = "onRedirect/app::onRedirected" ];
    ReceivedUpdateEarly -> EarlyWithAnswer  [ label = "dum::provideAnswer/send::200U-answer" ];
    ReceivedUpdateEarly -> EarlyWithAnswer  [ label = "dum::reject/send::488U" ];
    ReceivedUpdateEarly -> Canceled         [ label = "dum::cancel/timer::cancel" ];
    ReceivedUpdateEarly -> Terminated       [ label = "dum::end/send::BYE" ];
    ReceivedUpdateEarly -> Assert           [ label = "dum::provideAnswer/assert(0)" ];
    ReceivedUpdateEarly -> Assert           [ label = "dum::provideOffer/assert(0)" ];

    Answered -> Connected                       [ label = "dum::provideAnswer/send::ACK-answer" ];
    Answered -> Terminated                      [ label = "onRedirect/app::onRedirected" ];
    Answered -> Terminated                      [ label = "dum::provideAnswer/assert(0)" ];
    Answered -> Terminated                      [ label = "dum::provideOffer/assert(0)" ];
    Answered -> Terminated                      [ label = "dum::end/send::BYE" ];
    Answered -> Assert                          [ label = "dum::cancel/assert" ];

    SentAnswer -> EarlyWithAnswer               [ label = "dum::provideOffer/queue-offer" ]; 
    SentAnswer -> EarlyWithAnswer               [ label = "on200P" ];
    SentAnswer -> Connected                     [ label = "on2xx/send::ACK,onConnected" ];
    SentAnswer -> Terminated                    [ label = "on2xx-offer,on2xx-answer/app::onFailure,send::ACK,send::BYE" ];
    SentAnswer -> EarlyWithAnswer               [ label = "on1xx/app::onProvisional,send::PRACK" ];
    SentAnswer -> EarlyWithAnswer               [ label = "on1xx-retran" ];
    SentAnswer -> Terminated                    [ label = "onRedirect/app::onRedirected" ];
    SentAnswer -> Terminated                    [ label = "dum::end/send::BYE" ];
    SentAnswer -> EarlyWithAnswer               [ label = "dum::provideOffer/queueOffer" ];
    SentAnswer -> Canceled                      [ label = "dum::cancel/timer::cancel" ];
    SentAnswer -> Assert                        [ label = "dum::provideAnswer/assert(0)" ];

    QueuedUpdate -> SentUpdateEarly             [ label = "on200P/UPDATE-queued" ];
    QueuedUpdate -> SentUpdate                  [ label = "on200I/ACK,onConnected,send::UPDATE-queued" ];
    QueuedUpdate -> Terminated                  [ label = "onRedirect/app::onRedirected" ];
    QueuedUpdate -> Terminated                  [ label = "dum::end/send::BYE" ];
    QueuedUpdate -> Canceled                    [ label = "dum::cancel/timer::cancel" ];
    QueuedUpdate -> Assert                      [ label = "dum::provideAnswer/assert(0)" ];
    QueuedUpdate -> Assert                      [ label = "dum::provideOffer/assert(0)" ];

    Canceled -> Finished                        [ label = "onTimer" ];
    Canceled -> Finished                        [ label = "onGeneralFailure" ];
    Canceled -> Finished                        [ label = "on4xxC" ];
    Canceled -> Terminated                      [ label = "on200I/send::BYE" ];
    Canceled -> Terminated                      [ label = "onRedirect/app::onRedirected" ];
    Canceled -> Assert                          [ label = "dum::cancel/assert" ];
    Canceled -> Assert                          [ label = "dum::end/assert" ];
        
    Connected -> Terminated                     [ label = "dum::end/send::BYE" ];

    Terminated -> Finish                        [ label = "on2XXB" ];
}
