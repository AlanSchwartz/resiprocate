The reSIProcate SIP Stack
=========================

    Please see the file INSTALL for generic install instructions.
This file contains additional information about configuring the
reSIProcate build.  For information on compiling reSIProcate for the
Microsoft Windows platform, please see the file README.windows.

External Dependencies
=====================

    The reSIProcate stack can be configured to use the ares
asynchronous DNS resolver which provides advanced DNS query features
and scalability.  The ares resolver is packaged in the contrib/ares
directory and can be installed using a standard `./configure; make;
make install' process prior to building reSIProcate.

Note that there are two building scripts shipped in reSIProcate, one
is that the configure scripts is generated from configure.in, the
other is that the configure scripts is generated from configure.ac and
automake files.

Special ./configure Options
===========================

    Most of the standard GNU configuration options are provided by
the configure program.  `cd' to the directory containing the package's
source code and type `./configure --help' for a complete list.
In addition, you may wish to add:

  1. --with-ares[=DIR] to instruct the build to use the ares
     asynchronous resolver as described above.  This is recommended.

  2. --with-openssl[=DIR] to instruct the build to include support
     for SSL.  This activates TLS support in reSIProcate.

  3. --enable-distcc[=DIR] to instruct the build to compile files
     in parallel with the distcc program.
     

Using configure.ac and Automake
===============================

   First, we need to build and install the ares library (asynchronous
DNS resolver).
	cd contrib/ares
	./configure
	make
	make install

   Run the following commands to generate the configure scripts from
the configure.ac and automake files, build and install the resiprocate
library.
	aclocal && autoconf && automake
	./configure --with-openssl --with-ares --with-shared-libs
	make
	make install

   Then, all the library and header files are installed under the
/usr/local directory. If you want to install them to other directory,
you just need add the --prefix option in running the configure scripts.
