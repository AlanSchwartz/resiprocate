#include <string.h>
#include <cstdio>
#include <cassert>

#include <sipstack/MethodTypes.hxx>
#include <sipstack/Symbols.hxx>
#include <util/Data.hxx>

using namespace Vocal2;

Data Vocal2::MethodNames[MAX_METHODS] = 
{
   "ACK",
   "BYE",
   "CANCEL",
   "INVITE",
   "NOTIFY",
   "OPTIONS",
   "REFER",
   "REGISTER",
   "SUBSCRIBE",
   "RESPONSE",
   "UNKNOWN",
};

inline int hash(const char *in)
{
   
   char str[4];
   register const char * p = in;

   str[0] = *p++;
   str[1] = *p++;
   str[2] = *p++;
   str[3] = 0;

   return *(unsigned int*)str;
}

// !dlb! this will get generated by the make and included
static const unsigned int IntVal_ACK = 4932417;
static const unsigned int IntVal_BYE = 4544834;
static const unsigned int IntVal_CAN = 5128515;
static const unsigned int IntVal_INV = 5656137;
static const unsigned int IntVal_NOT = 5525326;
static const unsigned int IntVal_OPT = 5525583;
static const unsigned int IntVal_REF = 4605266;
static const unsigned int IntVal_REG = 4670802;
static const unsigned int IntVal_SUB = 4347219;

int strncasecmp(const char* a, const char* b, int len)
{
   for (int i = 0; i < len; i++)
   {
      int c = (a[i] | 0x20) - (b[i] | 0x20);
      if (c != 0)
      {
         return c;
      }
   }
   return 0;
}

MethodTypes
Vocal2::getMethodType(const Data& name)
{
   return getMethodType(name.c_str(), int(name.size()) );
}

MethodTypes
Vocal2::getMethodType(const char* name, int len)
{
   switch (hash(name))
   {
      case IntVal_ACK : 
      {
         if (strncasecmp(name, Symbols::Ack, len) == 0)
         {
            return ACK;
         }
         return UNKNOWN;
      }
      case IntVal_BYE : 
      {
         if (strncasecmp(name, Symbols::Bye, len) == 0)
         {
            return BYE;
         }
         return UNKNOWN;
      }
      case IntVal_CAN : 
      {
         if (strncasecmp(name, Symbols::Cancel, len) == 0)
         {
            return CANCEL;
         }
         return UNKNOWN;
      }
      case IntVal_INV : 
      {
         if (strncasecmp(name, Symbols::Invite, len) == 0)
         {
            return INVITE;
         }
         return UNKNOWN;
      }
      case IntVal_NOT : 
      {
         if (strncasecmp(name, Symbols::Notify, len) == 0)
         {
            return NOTIFY;
         }
         return UNKNOWN;
      }  
      case IntVal_OPT : 
      {
         if (strncasecmp(name, Symbols::Options, len) == 0)
         {
            return OPTIONS;
         }
         return UNKNOWN;
      }
      case IntVal_REF : 
      {
         if (strncasecmp(name, Symbols::Refer, len) == 0)
         {
            return REFER;
         }
         return UNKNOWN;
      }
      case IntVal_REG : 
      {
         if (strncasecmp(name, Symbols::Register, len) == 0)
         {
            return REGISTER;
         }
         return UNKNOWN;
      }
      case IntVal_SUB : 
      {
         if (strncasecmp(name, Symbols::Subscribe, len) == 0)
         {
            return SUBSCRIBE;
         }
         return UNKNOWN;
      }
      default :
         return UNKNOWN;
      } 
}



/* ====================================================================
 * The Vovida Software License, Version 1.0 
 * 
 * Copyright (c) 2000 Vovida Networks, Inc.  All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 
 * 3. The names "VOCAL", "Vovida Open Communication Application Library",
 *    and "Vovida Open Communication Application Library (VOCAL)" must
 *    not be used to endorse or promote products derived from this
 *    software without prior written permission. For written
 *    permission, please contact vocal@vovida.org.
 *
 * 4. Products derived from this software may not be called "VOCAL", nor
 *    may "VOCAL" appear in their name, without prior written
 *    permission of Vovida Networks, Inc.
 * 
 * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND
 * NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL VOVIDA
 * NETWORKS, INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT DAMAGES
 * IN EXCESS OF $1,000, NOR FOR ANY INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 * 
 * ====================================================================
 * 
 * This software consists of voluntary contributions made by Vovida
 * Networks, Inc. and many individuals on behalf of Vovida Networks,
 * Inc.  For more information on Vovida Networks, Inc., please see
 * <http://www.vovida.org/>.
 *
 */
