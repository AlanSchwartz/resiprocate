// !bwc! I apologize that this is so ugly. If you know of a standard GNU utility that will re-indent uglified c++ code (like this), let me know...
// Generated by updateHeaders.sh 







const H_Vias::Type& header(const H_Vias& headerType) const; H_Vias::Type& header(const H_Vias& headerType);
const H_MaxForwards::Type& header(const H_MaxForwards& headerType) const; H_MaxForwards::Type& header(const H_MaxForwards& headerType);
const H_Routes::Type& header(const H_Routes& headerType) const; H_Routes::Type& header(const H_Routes& headerType);
const H_RecordRoutes::Type& header(const H_RecordRoutes& headerType) const; H_RecordRoutes::Type& header(const H_RecordRoutes& headerType);
const H_Paths::Type& header(const H_Paths& headerType) const; H_Paths::Type& header(const H_Paths& headerType);
const H_ServiceRoutes::Type& header(const H_ServiceRoutes& headerType) const; H_ServiceRoutes::Type& header(const H_ServiceRoutes& headerType);
const H_ProxyRequires::Type& header(const H_ProxyRequires& headerType) const; H_ProxyRequires::Type& header(const H_ProxyRequires& headerType);
const H_ProxyAuthenticates::Type& header(const H_ProxyAuthenticates& headerType) const; H_ProxyAuthenticates::Type& header(const H_ProxyAuthenticates& headerType);
const H_Identity::Type& header(const H_Identity& headerType) const; H_Identity::Type& header(const H_Identity& headerType);
const H_IdentityInfo::Type& header(const H_IdentityInfo& headerType) const; H_IdentityInfo::Type& header(const H_IdentityInfo& headerType);
const H_Requires::Type& header(const H_Requires& headerType) const; H_Requires::Type& header(const H_Requires& headerType);
const H_Contacts::Type& header(const H_Contacts& headerType) const; H_Contacts::Type& header(const H_Contacts& headerType);
const H_To::Type& header(const H_To& headerType) const; H_To::Type& header(const H_To& headerType);
const H_From::Type& header(const H_From& headerType) const; H_From::Type& header(const H_From& headerType);
const H_CallID::Type& header(const H_CallID& headerType) const; H_CallID::Type& header(const H_CallID& headerType);
const H_CSeq::Type& header(const H_CSeq& headerType) const; H_CSeq::Type& header(const H_CSeq& headerType);
const H_Subject::Type& header(const H_Subject& headerType) const; H_Subject::Type& header(const H_Subject& headerType);
const H_Expires::Type& header(const H_Expires& headerType) const; H_Expires::Type& header(const H_Expires& headerType);
const H_SessionExpires::Type& header(const H_SessionExpires& headerType) const; H_SessionExpires::Type& header(const H_SessionExpires& headerType);
const H_MinSE::Type& header(const H_MinSE& headerType) const; H_MinSE::Type& header(const H_MinSE& headerType);
const H_Accepts::Type& header(const H_Accepts& headerType) const; H_Accepts::Type& header(const H_Accepts& headerType);
const H_AcceptEncodings::Type& header(const H_AcceptEncodings& headerType) const; H_AcceptEncodings::Type& header(const H_AcceptEncodings& headerType);
const H_AcceptLanguages::Type& header(const H_AcceptLanguages& headerType) const; H_AcceptLanguages::Type& header(const H_AcceptLanguages& headerType);
const H_AlertInfos::Type& header(const H_AlertInfos& headerType) const; H_AlertInfos::Type& header(const H_AlertInfos& headerType);
const H_Allows::Type& header(const H_Allows& headerType) const; H_Allows::Type& header(const H_Allows& headerType);
const H_AuthenticationInfo::Type& header(const H_AuthenticationInfo& headerType) const; H_AuthenticationInfo::Type& header(const H_AuthenticationInfo& headerType);
const H_CallInfos::Type& header(const H_CallInfos& headerType) const; H_CallInfos::Type& header(const H_CallInfos& headerType);
const H_ContentDisposition::Type& header(const H_ContentDisposition& headerType) const; H_ContentDisposition::Type& header(const H_ContentDisposition& headerType);
const H_ContentEncoding::Type& header(const H_ContentEncoding& headerType) const; H_ContentEncoding::Type& header(const H_ContentEncoding& headerType);
const H_ContentId::Type& header(const H_ContentId& headerType) const; H_ContentId::Type& header(const H_ContentId& headerType);
const H_ContentLanguages::Type& header(const H_ContentLanguages& headerType) const; H_ContentLanguages::Type& header(const H_ContentLanguages& headerType);
const H_ContentTransferEncoding::Type& header(const H_ContentTransferEncoding& headerType) const; H_ContentTransferEncoding::Type& header(const H_ContentTransferEncoding& headerType);
const H_ContentType::Type& header(const H_ContentType& headerType) const; H_ContentType::Type& header(const H_ContentType& headerType);
const H_Date::Type& header(const H_Date& headerType) const; H_Date::Type& header(const H_Date& headerType);
const H_ErrorInfos::Type& header(const H_ErrorInfos& headerType) const; H_ErrorInfos::Type& header(const H_ErrorInfos& headerType);
const H_InReplyTo::Type& header(const H_InReplyTo& headerType) const; H_InReplyTo::Type& header(const H_InReplyTo& headerType);
const H_MinExpires::Type& header(const H_MinExpires& headerType) const; H_MinExpires::Type& header(const H_MinExpires& headerType);
const H_MIMEVersion::Type& header(const H_MIMEVersion& headerType) const; H_MIMEVersion::Type& header(const H_MIMEVersion& headerType);
const H_Organization::Type& header(const H_Organization& headerType) const; H_Organization::Type& header(const H_Organization& headerType);
const H_Priority::Type& header(const H_Priority& headerType) const; H_Priority::Type& header(const H_Priority& headerType);
const H_ProxyAuthorizations::Type& header(const H_ProxyAuthorizations& headerType) const; H_ProxyAuthorizations::Type& header(const H_ProxyAuthorizations& headerType);
const H_ReplyTo::Type& header(const H_ReplyTo& headerType) const; H_ReplyTo::Type& header(const H_ReplyTo& headerType);
const H_RetryAfter::Type& header(const H_RetryAfter& headerType) const; H_RetryAfter::Type& header(const H_RetryAfter& headerType);
const H_Server::Type& header(const H_Server& headerType) const; H_Server::Type& header(const H_Server& headerType);
const H_SIPETag::Type& header(const H_SIPETag& headerType) const; H_SIPETag::Type& header(const H_SIPETag& headerType);
const H_SIPIfMatch::Type& header(const H_SIPIfMatch& headerType) const; H_SIPIfMatch::Type& header(const H_SIPIfMatch& headerType);
const H_Supporteds::Type& header(const H_Supporteds& headerType) const; H_Supporteds::Type& header(const H_Supporteds& headerType);
const H_Timestamp::Type& header(const H_Timestamp& headerType) const; H_Timestamp::Type& header(const H_Timestamp& headerType);
const H_Unsupporteds::Type& header(const H_Unsupporteds& headerType) const; H_Unsupporteds::Type& header(const H_Unsupporteds& headerType);
const H_UserAgent::Type& header(const H_UserAgent& headerType) const; H_UserAgent::Type& header(const H_UserAgent& headerType);
const H_Warnings::Type& header(const H_Warnings& headerType) const; H_Warnings::Type& header(const H_Warnings& headerType);
const H_WWWAuthenticates::Type& header(const H_WWWAuthenticates& headerType) const; H_WWWAuthenticates::Type& header(const H_WWWAuthenticates& headerType);
const H_SubscriptionState::Type& header(const H_SubscriptionState& headerType) const; H_SubscriptionState::Type& header(const H_SubscriptionState& headerType);
const H_ReferTo::Type& header(const H_ReferTo& headerType) const; H_ReferTo::Type& header(const H_ReferTo& headerType);
const H_ReferredBy::Type& header(const H_ReferredBy& headerType) const; H_ReferredBy::Type& header(const H_ReferredBy& headerType);
const H_Authorizations::Type& header(const H_Authorizations& headerType) const; H_Authorizations::Type& header(const H_Authorizations& headerType);
const H_Replaces::Type& header(const H_Replaces& headerType) const; H_Replaces::Type& header(const H_Replaces& headerType);
const H_Event::Type& header(const H_Event& headerType) const; H_Event::Type& header(const H_Event& headerType);
const H_AllowEventss::Type& header(const H_AllowEventss& headerType) const; H_AllowEventss::Type& header(const H_AllowEventss& headerType);
const H_SecurityClients::Type& header(const H_SecurityClients& headerType) const; H_SecurityClients::Type& header(const H_SecurityClients& headerType);
const H_SecurityServers::Type& header(const H_SecurityServers& headerType) const; H_SecurityServers::Type& header(const H_SecurityServers& headerType);
const H_SecurityVerifys::Type& header(const H_SecurityVerifys& headerType) const; H_SecurityVerifys::Type& header(const H_SecurityVerifys& headerType);
const H_RSeq::Type& header(const H_RSeq& headerType) const; H_RSeq::Type& header(const H_RSeq& headerType);
const H_RAck::Type& header(const H_RAck& headerType) const; H_RAck::Type& header(const H_RAck& headerType);
const H_Reasons::Type& header(const H_Reasons& headerType) const; H_Reasons::Type& header(const H_Reasons& headerType);
const H_Privacys::Type& header(const H_Privacys& headerType) const; H_Privacys::Type& header(const H_Privacys& headerType);
const H_RequestDispositions::Type& header(const H_RequestDispositions& headerType) const; H_RequestDispositions::Type& header(const H_RequestDispositions& headerType);
const H_PMediaAuthorizations::Type& header(const H_PMediaAuthorizations& headerType) const; H_PMediaAuthorizations::Type& header(const H_PMediaAuthorizations& headerType);
const H_Join::Type& header(const H_Join& headerType) const; H_Join::Type& header(const H_Join& headerType);
const H_TargetDialog::Type& header(const H_TargetDialog& headerType) const; H_TargetDialog::Type& header(const H_TargetDialog& headerType);
const H_PAssertedIdentitys::Type& header(const H_PAssertedIdentitys& headerType) const; H_PAssertedIdentitys::Type& header(const H_PAssertedIdentitys& headerType);
const H_PPreferredIdentitys::Type& header(const H_PPreferredIdentitys& headerType) const; H_PPreferredIdentitys::Type& header(const H_PPreferredIdentitys& headerType);
const H_AcceptContacts::Type& header(const H_AcceptContacts& headerType) const; H_AcceptContacts::Type& header(const H_AcceptContacts& headerType);
const H_RejectContacts::Type& header(const H_RejectContacts& headerType) const; H_RejectContacts::Type& header(const H_RejectContacts& headerType);
const H_PCalledPartyId::Type& header(const H_PCalledPartyId& headerType) const; H_PCalledPartyId::Type& header(const H_PCalledPartyId& headerType);
const H_PAssociatedUris::Type& header(const H_PAssociatedUris& headerType) const; H_PAssociatedUris::Type& header(const H_PAssociatedUris& headerType);
const H_ContentLength::Type& header(const H_ContentLength& headerType) const; H_ContentLength::Type& header(const H_ContentLength& headerType);
const H_ReferSub::Type& header(const H_ReferSub& headerType) const; H_ReferSub::Type& header(const H_ReferSub& headerType);
const H_AnswerMode::Type& header(const H_AnswerMode& headerType) const; H_AnswerMode::Type& header(const H_AnswerMode& headerType);
const H_PrivAnswerMode::Type& header(const H_PrivAnswerMode& headerType) const; H_PrivAnswerMode::Type& header(const H_PrivAnswerMode& headerType);
const H_RemotePartyId::Type& header(const H_RemotePartyId& headerType) const; H_RemotePartyId::Type& header(const H_RemotePartyId& headerType);
