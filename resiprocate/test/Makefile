# Makefile.in generated by automake 1.7.6 from Makefile.am.
# resiprocate/test/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/resiprocate
pkglibdir = $(libdir)/resiprocate
pkgincludedir = $(includedir)/resiprocate
top_builddir = ../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/wensong/devel/sip.server/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/wensong/devel/sip.server/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/wensong/devel/sip.server/missing --run autoconf
AUTOHEADER = ${SHELL} /home/wensong/devel/sip.server/missing --run autoheader
AUTOMAKE = ${SHELL} /home/wensong/devel/sip.server/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -Wall -Wno-deprecated
CONTENTS_OBJS =  ApplicationSip.lo Contents.lo CpimContents.lo ExternalBodyContents.lo GenericContents.lo MessageWaitingContents.lo MultipartAlternativeContents.lo MultipartMixedContents.lo MultipartRelatedContents.lo MultipartSignedContents.lo OctetContents.lo Pkcs7Contents.lo Pkcs8Contents.lo PlainContents.lo SdpContents.lo SipFrag.lo TuIM.lo X509Contents.lo
CPP = gcc -E
CPPFLAGS =  -I/home/wensong/devel/sip.server/contrib/ares -I/usr/kerberos/include
CXX = ${DISTCC} g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wall -Wno-deprecated
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTCC = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = g77
FFLAGS = -g -O2
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS =  -L/home/wensong/devel/sip.server/contrib/ares
LIBOBJS = 
LIBRESIP_SO_VERSION = 0:5:0
LIBS =  -lpopt -lssl -lcrypto -lares -lpthread
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/wensong/devel/sip.server/missing --run makeinfo
OBJEXT = o
PACKAGE = resiprocate
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
RESIP_MAJOR_VERSION = 0
RESIP_MICRO_VERSION = 0
RESIP_MINOR_VERSION = 5
RESIP_VERSION = 0.5.0-6363
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.5.0-6363
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = g77
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/wensong/devel/sip.server/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
AM_LDFLAGS = -lpopt
INCLUDES = -I$(top_srcdir) -I$(top_builddir)
noinst_LIBRARIES = libtestsupport.a
libtestsupport_a_SOURCES = \
	InviteClient.cxx \
	InviteServer.cxx \
	Register.cxx \
	Registrar.cxx \
	TestSupport.cxx 


noinst_HEADERS = \
	digcalc.hxx \
	md5.hxx \
	Resolver.hxx \
	InviteClient.hxx \
	Register.hxx \
	testIM.hxx \
	InviteServer.hxx \
	Registrar.hxx \
	TestSupport.hxx


LDADD = libtestsupport.a ../libresiprocate.la
check_PROGRAMS = \
	testThreads \
	testSrv \
	SipTortureTests \
	testGperfHash \
	test1 \
	test2 \
	testApplicationSip \
	testClient \
	testCoders \
	testCountStream \
	testData \
	testDataPerformance \
	testDataStream \
	testDigestAuthentication \
	testDns \
	testEmbedded \
	testEmptyHeader \
	testForce \
	testIM \
	testLogger \
	testMessageWaiting \
	testMultipartMixedContents \
	testMultipartRelated \
	testHack \
	testHash \
	testMsgHeaderDiagram \
	testParseBuffer \
	testParserCategories \
	testParseNameAddr \
	testPlainContents \
	testRandomHex \
	testResponses \
	testSdp \
	testServer \
	testSipFrag \
	testSipMessage \
	testSipMessageMemory \
	testSource \
	testSpeed \
	testStack \
	testTcp \
	testThreadIf \
	testTime \
	testTimer \
	testTransactionFSM \
	testUdp \
	testUri \
	testXMLCursor 


bin_PROGRAMS = limpc testTcp

TESTS = $(check_PROGRAMS)
SipTortureTests_SOURCES = SipTortureTests.cxx
#lg_SOURCES = lg.cxx
#testDnsResolver_SOURCES = testDnsResolver.cxx
#testLockStep_SOURCES = testLockStep.cxx
#testSipStack1_SOURCES = testSipStack1.cxx
testSrv_SOURCES = testSrv.cxx
limpc_SOURCES = limpc.cxx
test1_SOURCES = test1.cxx
test2_SOURCES = test2.cxx
testGperfHash_SOURCES = testGperfHash.cxx
testApplicationSip_SOURCES = testApplicationSip.cxx
testClient_SOURCES = testClient.cxx
testCoders_SOURCES = testCoders.cxx
testCountStream_SOURCES = testCountStream.cxx
testDataPerformance_SOURCES = testDataPerformance.cxx
testDataStream_SOURCES = testDataStream.cxx
testData_SOURCES = testData.cxx
testDigestAuthentication_SOURCES = testDigestAuthentication.cxx
testDns_SOURCES = testDns.cxx
testEmbedded_SOURCES = testEmbedded.cxx
testEmptyHeader_SOURCES = testEmptyHeader.cxx
testForce_SOURCES = testForce.cxx
testIM_SOURCES = testIM.cxx
testLogger_SOURCES = testLogger.cxx
testMessageWaiting_SOURCES = testMessageWaiting.cxx
testMultipartMixedContents_SOURCES = testMultipartMixedContents.cxx
testMultipartRelated_SOURCES = testMultipartRelated.cxx
testHack_SOURCES = testHack.cxx
testHash_SOURCES = testHash.cxx
testParseBuffer_SOURCES = testParseBuffer.cxx
testParseNameAddr_SOURCES = testParseNameAddr.cxx
testParserCategories_SOURCES = testParserCategories.cxx
testPlainContents_SOURCES = testPlainContents.cxx
testRandomHex_SOURCES = testRandomHex.cxx
testResponses_SOURCES = testResponses.cxx
testSdp_SOURCES = testSdp.cxx
testServer_SOURCES = testServer.cxx
testSipFrag_SOURCES = testSipFrag.cxx
testSipMessageMemory_SOURCES = testSipMessageMemory.cxx
testSipMessage_SOURCES = testSipMessage.cxx
testSource_SOURCES = testSource.cxx
testSpeed_SOURCES = testSpeed.cxx
testStack_SOURCES = testStack.cxx
testTcp_SOURCES = testTcp.cxx
testThreadIf_SOURCES = testThreadIf.cxx
testTime_SOURCES = testTime.cxx
testTimer_SOURCES = testTimer.cxx
testTransactionFSM_SOURCES = testTransactionFSM.cxx
testUdp_SOURCES = testUdp.cxx
testUri_SOURCES = testUri.cxx
testXMLCursor_SOURCES = testXMLCursor.cxx
testMsgHeaderDiagram_SOURCES = testMsgHeaderDiagram.cxx
subdir = resiprocate/test
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/resiprocate/config.hxx
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libtestsupport_a_AR = $(AR) cru
libtestsupport_a_LIBADD =
am_libtestsupport_a_OBJECTS = InviteClient.$(OBJEXT) \
	InviteServer.$(OBJEXT) Register.$(OBJEXT) Registrar.$(OBJEXT) \
	TestSupport.$(OBJEXT)
libtestsupport_a_OBJECTS = $(am_libtestsupport_a_OBJECTS)
bin_PROGRAMS = limpc$(EXEEXT) testTcp$(EXEEXT)
check_PROGRAMS = testThreads$(EXEEXT) testSrv$(EXEEXT) \
	SipTortureTests$(EXEEXT) testGperfHash$(EXEEXT) test1$(EXEEXT) \
	test2$(EXEEXT) testApplicationSip$(EXEEXT) testClient$(EXEEXT) \
	testCoders$(EXEEXT) testCountStream$(EXEEXT) testData$(EXEEXT) \
	testDataPerformance$(EXEEXT) testDataStream$(EXEEXT) \
	testDigestAuthentication$(EXEEXT) testDns$(EXEEXT) \
	testEmbedded$(EXEEXT) testEmptyHeader$(EXEEXT) \
	testForce$(EXEEXT) testIM$(EXEEXT) testLogger$(EXEEXT) \
	testMessageWaiting$(EXEEXT) testMultipartMixedContents$(EXEEXT) \
	testMultipartRelated$(EXEEXT) testHack$(EXEEXT) \
	testHash$(EXEEXT) testMsgHeaderDiagram$(EXEEXT) \
	testParseBuffer$(EXEEXT) testParserCategories$(EXEEXT) \
	testParseNameAddr$(EXEEXT) testPlainContents$(EXEEXT) \
	testRandomHex$(EXEEXT) testResponses$(EXEEXT) testSdp$(EXEEXT) \
	testServer$(EXEEXT) testSipFrag$(EXEEXT) \
	testSipMessage$(EXEEXT) testSipMessageMemory$(EXEEXT) \
	testSource$(EXEEXT) testSpeed$(EXEEXT) testStack$(EXEEXT) \
	testTcp$(EXEEXT) testThreadIf$(EXEEXT) testTime$(EXEEXT) \
	testTimer$(EXEEXT) testTransactionFSM$(EXEEXT) testUdp$(EXEEXT) \
	testUri$(EXEEXT) testXMLCursor$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_SipTortureTests_OBJECTS = SipTortureTests.$(OBJEXT)
SipTortureTests_OBJECTS = $(am_SipTortureTests_OBJECTS)
SipTortureTests_LDADD = $(LDADD)
SipTortureTests_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
SipTortureTests_LDFLAGS =
am_limpc_OBJECTS = limpc.$(OBJEXT)
limpc_OBJECTS = $(am_limpc_OBJECTS)
limpc_LDADD = $(LDADD)
limpc_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
limpc_LDFLAGS =
am_test1_OBJECTS = test1.$(OBJEXT)
test1_OBJECTS = $(am_test1_OBJECTS)
test1_LDADD = $(LDADD)
test1_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
test1_LDFLAGS =
am_test2_OBJECTS = test2.$(OBJEXT)
test2_OBJECTS = $(am_test2_OBJECTS)
test2_LDADD = $(LDADD)
test2_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
test2_LDFLAGS =
am_testApplicationSip_OBJECTS = testApplicationSip.$(OBJEXT)
testApplicationSip_OBJECTS = $(am_testApplicationSip_OBJECTS)
testApplicationSip_LDADD = $(LDADD)
testApplicationSip_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testApplicationSip_LDFLAGS =
am_testClient_OBJECTS = testClient.$(OBJEXT)
testClient_OBJECTS = $(am_testClient_OBJECTS)
testClient_LDADD = $(LDADD)
testClient_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testClient_LDFLAGS =
am_testCoders_OBJECTS = testCoders.$(OBJEXT)
testCoders_OBJECTS = $(am_testCoders_OBJECTS)
testCoders_LDADD = $(LDADD)
testCoders_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testCoders_LDFLAGS =
am_testCountStream_OBJECTS = testCountStream.$(OBJEXT)
testCountStream_OBJECTS = $(am_testCountStream_OBJECTS)
testCountStream_LDADD = $(LDADD)
testCountStream_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testCountStream_LDFLAGS =
am_testData_OBJECTS = testData.$(OBJEXT)
testData_OBJECTS = $(am_testData_OBJECTS)
testData_LDADD = $(LDADD)
testData_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testData_LDFLAGS =
am_testDataPerformance_OBJECTS = testDataPerformance.$(OBJEXT)
testDataPerformance_OBJECTS = $(am_testDataPerformance_OBJECTS)
testDataPerformance_LDADD = $(LDADD)
testDataPerformance_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testDataPerformance_LDFLAGS =
am_testDataStream_OBJECTS = testDataStream.$(OBJEXT)
testDataStream_OBJECTS = $(am_testDataStream_OBJECTS)
testDataStream_LDADD = $(LDADD)
testDataStream_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testDataStream_LDFLAGS =
am_testDigestAuthentication_OBJECTS = testDigestAuthentication.$(OBJEXT)
testDigestAuthentication_OBJECTS = \
	$(am_testDigestAuthentication_OBJECTS)
testDigestAuthentication_LDADD = $(LDADD)
testDigestAuthentication_DEPENDENCIES = libtestsupport.a \
	../libresiprocate.la
testDigestAuthentication_LDFLAGS =
am_testDns_OBJECTS = testDns.$(OBJEXT)
testDns_OBJECTS = $(am_testDns_OBJECTS)
testDns_LDADD = $(LDADD)
testDns_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testDns_LDFLAGS =
am_testEmbedded_OBJECTS = testEmbedded.$(OBJEXT)
testEmbedded_OBJECTS = $(am_testEmbedded_OBJECTS)
testEmbedded_LDADD = $(LDADD)
testEmbedded_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testEmbedded_LDFLAGS =
am_testEmptyHeader_OBJECTS = testEmptyHeader.$(OBJEXT)
testEmptyHeader_OBJECTS = $(am_testEmptyHeader_OBJECTS)
testEmptyHeader_LDADD = $(LDADD)
testEmptyHeader_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testEmptyHeader_LDFLAGS =
am_testForce_OBJECTS = testForce.$(OBJEXT)
testForce_OBJECTS = $(am_testForce_OBJECTS)
testForce_LDADD = $(LDADD)
testForce_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testForce_LDFLAGS =
am_testGperfHash_OBJECTS = testGperfHash.$(OBJEXT)
testGperfHash_OBJECTS = $(am_testGperfHash_OBJECTS)
testGperfHash_LDADD = $(LDADD)
testGperfHash_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testGperfHash_LDFLAGS =
am_testHack_OBJECTS = testHack.$(OBJEXT)
testHack_OBJECTS = $(am_testHack_OBJECTS)
testHack_LDADD = $(LDADD)
testHack_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testHack_LDFLAGS =
am_testHash_OBJECTS = testHash.$(OBJEXT)
testHash_OBJECTS = $(am_testHash_OBJECTS)
testHash_LDADD = $(LDADD)
testHash_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testHash_LDFLAGS =
am_testIM_OBJECTS = testIM.$(OBJEXT)
testIM_OBJECTS = $(am_testIM_OBJECTS)
testIM_LDADD = $(LDADD)
testIM_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testIM_LDFLAGS =
am_testLogger_OBJECTS = testLogger.$(OBJEXT)
testLogger_OBJECTS = $(am_testLogger_OBJECTS)
testLogger_LDADD = $(LDADD)
testLogger_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testLogger_LDFLAGS =
am_testMessageWaiting_OBJECTS = testMessageWaiting.$(OBJEXT)
testMessageWaiting_OBJECTS = $(am_testMessageWaiting_OBJECTS)
testMessageWaiting_LDADD = $(LDADD)
testMessageWaiting_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testMessageWaiting_LDFLAGS =
am_testMsgHeaderDiagram_OBJECTS = testMsgHeaderDiagram.$(OBJEXT)
testMsgHeaderDiagram_OBJECTS = $(am_testMsgHeaderDiagram_OBJECTS)
testMsgHeaderDiagram_LDADD = $(LDADD)
testMsgHeaderDiagram_DEPENDENCIES = libtestsupport.a \
	../libresiprocate.la
testMsgHeaderDiagram_LDFLAGS =
am_testMultipartMixedContents_OBJECTS = \
	testMultipartMixedContents.$(OBJEXT)
testMultipartMixedContents_OBJECTS = \
	$(am_testMultipartMixedContents_OBJECTS)
testMultipartMixedContents_LDADD = $(LDADD)
testMultipartMixedContents_DEPENDENCIES = libtestsupport.a \
	../libresiprocate.la
testMultipartMixedContents_LDFLAGS =
am_testMultipartRelated_OBJECTS = testMultipartRelated.$(OBJEXT)
testMultipartRelated_OBJECTS = $(am_testMultipartRelated_OBJECTS)
testMultipartRelated_LDADD = $(LDADD)
testMultipartRelated_DEPENDENCIES = libtestsupport.a \
	../libresiprocate.la
testMultipartRelated_LDFLAGS =
am_testParseBuffer_OBJECTS = testParseBuffer.$(OBJEXT)
testParseBuffer_OBJECTS = $(am_testParseBuffer_OBJECTS)
testParseBuffer_LDADD = $(LDADD)
testParseBuffer_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testParseBuffer_LDFLAGS =
am_testParseNameAddr_OBJECTS = testParseNameAddr.$(OBJEXT)
testParseNameAddr_OBJECTS = $(am_testParseNameAddr_OBJECTS)
testParseNameAddr_LDADD = $(LDADD)
testParseNameAddr_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testParseNameAddr_LDFLAGS =
am_testParserCategories_OBJECTS = testParserCategories.$(OBJEXT)
testParserCategories_OBJECTS = $(am_testParserCategories_OBJECTS)
testParserCategories_LDADD = $(LDADD)
testParserCategories_DEPENDENCIES = libtestsupport.a \
	../libresiprocate.la
testParserCategories_LDFLAGS =
am_testPlainContents_OBJECTS = testPlainContents.$(OBJEXT)
testPlainContents_OBJECTS = $(am_testPlainContents_OBJECTS)
testPlainContents_LDADD = $(LDADD)
testPlainContents_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testPlainContents_LDFLAGS =
am_testRandomHex_OBJECTS = testRandomHex.$(OBJEXT)
testRandomHex_OBJECTS = $(am_testRandomHex_OBJECTS)
testRandomHex_LDADD = $(LDADD)
testRandomHex_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testRandomHex_LDFLAGS =
am_testResponses_OBJECTS = testResponses.$(OBJEXT)
testResponses_OBJECTS = $(am_testResponses_OBJECTS)
testResponses_LDADD = $(LDADD)
testResponses_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testResponses_LDFLAGS =
am_testSdp_OBJECTS = testSdp.$(OBJEXT)
testSdp_OBJECTS = $(am_testSdp_OBJECTS)
testSdp_LDADD = $(LDADD)
testSdp_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testSdp_LDFLAGS =
am_testServer_OBJECTS = testServer.$(OBJEXT)
testServer_OBJECTS = $(am_testServer_OBJECTS)
testServer_LDADD = $(LDADD)
testServer_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testServer_LDFLAGS =
am_testSipFrag_OBJECTS = testSipFrag.$(OBJEXT)
testSipFrag_OBJECTS = $(am_testSipFrag_OBJECTS)
testSipFrag_LDADD = $(LDADD)
testSipFrag_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testSipFrag_LDFLAGS =
am_testSipMessage_OBJECTS = testSipMessage.$(OBJEXT)
testSipMessage_OBJECTS = $(am_testSipMessage_OBJECTS)
testSipMessage_LDADD = $(LDADD)
testSipMessage_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testSipMessage_LDFLAGS =
am_testSipMessageMemory_OBJECTS = testSipMessageMemory.$(OBJEXT)
testSipMessageMemory_OBJECTS = $(am_testSipMessageMemory_OBJECTS)
testSipMessageMemory_LDADD = $(LDADD)
testSipMessageMemory_DEPENDENCIES = libtestsupport.a \
	../libresiprocate.la
testSipMessageMemory_LDFLAGS =
am_testSource_OBJECTS = testSource.$(OBJEXT)
testSource_OBJECTS = $(am_testSource_OBJECTS)
testSource_LDADD = $(LDADD)
testSource_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testSource_LDFLAGS =
am_testSpeed_OBJECTS = testSpeed.$(OBJEXT)
testSpeed_OBJECTS = $(am_testSpeed_OBJECTS)
testSpeed_LDADD = $(LDADD)
testSpeed_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testSpeed_LDFLAGS =
am_testSrv_OBJECTS = testSrv.$(OBJEXT)
testSrv_OBJECTS = $(am_testSrv_OBJECTS)
testSrv_LDADD = $(LDADD)
testSrv_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testSrv_LDFLAGS =
am_testStack_OBJECTS = testStack.$(OBJEXT)
testStack_OBJECTS = $(am_testStack_OBJECTS)
testStack_LDADD = $(LDADD)
testStack_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testStack_LDFLAGS =
am_testTcp_OBJECTS = testTcp.$(OBJEXT)
testTcp_OBJECTS = $(am_testTcp_OBJECTS)
testTcp_LDADD = $(LDADD)
testTcp_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testTcp_LDFLAGS =
am_testThreadIf_OBJECTS = testThreadIf.$(OBJEXT)
testThreadIf_OBJECTS = $(am_testThreadIf_OBJECTS)
testThreadIf_LDADD = $(LDADD)
testThreadIf_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testThreadIf_LDFLAGS =
testThreads_SOURCES = testThreads.c
testThreads_OBJECTS = testThreads.$(OBJEXT)
testThreads_LDADD = $(LDADD)
testThreads_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testThreads_LDFLAGS =
am_testTime_OBJECTS = testTime.$(OBJEXT)
testTime_OBJECTS = $(am_testTime_OBJECTS)
testTime_LDADD = $(LDADD)
testTime_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testTime_LDFLAGS =
am_testTimer_OBJECTS = testTimer.$(OBJEXT)
testTimer_OBJECTS = $(am_testTimer_OBJECTS)
testTimer_LDADD = $(LDADD)
testTimer_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testTimer_LDFLAGS =
am_testTransactionFSM_OBJECTS = testTransactionFSM.$(OBJEXT)
testTransactionFSM_OBJECTS = $(am_testTransactionFSM_OBJECTS)
testTransactionFSM_LDADD = $(LDADD)
testTransactionFSM_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testTransactionFSM_LDFLAGS =
am_testUdp_OBJECTS = testUdp.$(OBJEXT)
testUdp_OBJECTS = $(am_testUdp_OBJECTS)
testUdp_LDADD = $(LDADD)
testUdp_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testUdp_LDFLAGS =
am_testUri_OBJECTS = testUri.$(OBJEXT)
testUri_OBJECTS = $(am_testUri_OBJECTS)
testUri_LDADD = $(LDADD)
testUri_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testUri_LDFLAGS =
am_testXMLCursor_OBJECTS = testXMLCursor.$(OBJEXT)
testXMLCursor_OBJECTS = $(am_testXMLCursor_OBJECTS)
testXMLCursor_LDADD = $(LDADD)
testXMLCursor_DEPENDENCIES = libtestsupport.a ../libresiprocate.la
testXMLCursor_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/resiprocate
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/InviteClient.Po \
	./$(DEPDIR)/InviteServer.Po ./$(DEPDIR)/Register.Po \
	./$(DEPDIR)/Registrar.Po \
	./$(DEPDIR)/SipTortureTests.Po \
	./$(DEPDIR)/TestSupport.Po ./$(DEPDIR)/limpc.Po \
	./$(DEPDIR)/test1.Po ./$(DEPDIR)/test2.Po \
	./$(DEPDIR)/testApplicationSip.Po \
	./$(DEPDIR)/testClient.Po ./$(DEPDIR)/testCoders.Po \
	./$(DEPDIR)/testCountStream.Po \
	./$(DEPDIR)/testData.Po \
	./$(DEPDIR)/testDataPerformance.Po \
	./$(DEPDIR)/testDataStream.Po \
	./$(DEPDIR)/testDigestAuthentication.Po \
	./$(DEPDIR)/testDns.Po ./$(DEPDIR)/testEmbedded.Po \
	./$(DEPDIR)/testEmptyHeader.Po \
	./$(DEPDIR)/testForce.Po \
	./$(DEPDIR)/testGperfHash.Po \
	./$(DEPDIR)/testHack.Po ./$(DEPDIR)/testHash.Po \
	./$(DEPDIR)/testIM.Po ./$(DEPDIR)/testLogger.Po \
	./$(DEPDIR)/testMessageWaiting.Po \
	./$(DEPDIR)/testMsgHeaderDiagram.Po \
	./$(DEPDIR)/testMultipartMixedContents.Po \
	./$(DEPDIR)/testMultipartRelated.Po \
	./$(DEPDIR)/testParseBuffer.Po \
	./$(DEPDIR)/testParseNameAddr.Po \
	./$(DEPDIR)/testParserCategories.Po \
	./$(DEPDIR)/testPlainContents.Po \
	./$(DEPDIR)/testRandomHex.Po \
	./$(DEPDIR)/testResponses.Po ./$(DEPDIR)/testSdp.Po \
	./$(DEPDIR)/testServer.Po \
	./$(DEPDIR)/testSipFrag.Po \
	./$(DEPDIR)/testSipMessage.Po \
	./$(DEPDIR)/testSipMessageMemory.Po \
	./$(DEPDIR)/testSource.Po ./$(DEPDIR)/testSpeed.Po \
	./$(DEPDIR)/testSrv.Po ./$(DEPDIR)/testStack.Po \
	./$(DEPDIR)/testTcp.Po ./$(DEPDIR)/testThreadIf.Po \
	./$(DEPDIR)/testThreads.Po ./$(DEPDIR)/testTime.Po \
	./$(DEPDIR)/testTimer.Po \
	./$(DEPDIR)/testTransactionFSM.Po \
	./$(DEPDIR)/testUdp.Po ./$(DEPDIR)/testUri.Po \
	./$(DEPDIR)/testXMLCursor.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libtestsupport_a_SOURCES) $(SipTortureTests_SOURCES) \
	$(limpc_SOURCES) $(test1_SOURCES) $(test2_SOURCES) \
	$(testApplicationSip_SOURCES) $(testClient_SOURCES) \
	$(testCoders_SOURCES) $(testCountStream_SOURCES) \
	$(testData_SOURCES) $(testDataPerformance_SOURCES) \
	$(testDataStream_SOURCES) $(testDigestAuthentication_SOURCES) \
	$(testDns_SOURCES) $(testEmbedded_SOURCES) \
	$(testEmptyHeader_SOURCES) $(testForce_SOURCES) \
	$(testGperfHash_SOURCES) $(testHack_SOURCES) \
	$(testHash_SOURCES) $(testIM_SOURCES) $(testLogger_SOURCES) \
	$(testMessageWaiting_SOURCES) $(testMsgHeaderDiagram_SOURCES) \
	$(testMultipartMixedContents_SOURCES) \
	$(testMultipartRelated_SOURCES) $(testParseBuffer_SOURCES) \
	$(testParseNameAddr_SOURCES) $(testParserCategories_SOURCES) \
	$(testPlainContents_SOURCES) $(testRandomHex_SOURCES) \
	$(testResponses_SOURCES) $(testSdp_SOURCES) \
	$(testServer_SOURCES) $(testSipFrag_SOURCES) \
	$(testSipMessage_SOURCES) $(testSipMessageMemory_SOURCES) \
	$(testSource_SOURCES) $(testSpeed_SOURCES) $(testSrv_SOURCES) \
	$(testStack_SOURCES) $(testTcp_SOURCES) $(testThreadIf_SOURCES) \
	testThreads.c $(testTime_SOURCES) $(testTimer_SOURCES) \
	$(testTransactionFSM_SOURCES) $(testUdp_SOURCES) \
	$(testUri_SOURCES) $(testXMLCursor_SOURCES)
HEADERS = $(noinst_HEADERS)

DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in
SOURCES = $(libtestsupport_a_SOURCES) $(SipTortureTests_SOURCES) $(limpc_SOURCES) $(test1_SOURCES) $(test2_SOURCES) $(testApplicationSip_SOURCES) $(testClient_SOURCES) $(testCoders_SOURCES) $(testCountStream_SOURCES) $(testData_SOURCES) $(testDataPerformance_SOURCES) $(testDataStream_SOURCES) $(testDigestAuthentication_SOURCES) $(testDns_SOURCES) $(testEmbedded_SOURCES) $(testEmptyHeader_SOURCES) $(testForce_SOURCES) $(testGperfHash_SOURCES) $(testHack_SOURCES) $(testHash_SOURCES) $(testIM_SOURCES) $(testLogger_SOURCES) $(testMessageWaiting_SOURCES) $(testMsgHeaderDiagram_SOURCES) $(testMultipartMixedContents_SOURCES) $(testMultipartRelated_SOURCES) $(testParseBuffer_SOURCES) $(testParseNameAddr_SOURCES) $(testParserCategories_SOURCES) $(testPlainContents_SOURCES) $(testRandomHex_SOURCES) $(testResponses_SOURCES) $(testSdp_SOURCES) $(testServer_SOURCES) $(testSipFrag_SOURCES) $(testSipMessage_SOURCES) $(testSipMessageMemory_SOURCES) $(testSource_SOURCES) $(testSpeed_SOURCES) $(testSrv_SOURCES) $(testStack_SOURCES) $(testTcp_SOURCES) $(testThreadIf_SOURCES) testThreads.c $(testTime_SOURCES) $(testTimer_SOURCES) $(testTransactionFSM_SOURCES) $(testUdp_SOURCES) $(testUri_SOURCES) $(testXMLCursor_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cxx .lo .o .obj
$(srcdir)/Makefile.in: # Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  resiprocate/test/Makefile
Makefile: # $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libtestsupport.a: $(libtestsupport_a_OBJECTS) $(libtestsupport_a_DEPENDENCIES) 
	-rm -f libtestsupport.a
	$(libtestsupport_a_AR) libtestsupport.a $(libtestsupport_a_OBJECTS) $(libtestsupport_a_LIBADD)
	$(RANLIB) libtestsupport.a
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
SipTortureTests$(EXEEXT): $(SipTortureTests_OBJECTS) $(SipTortureTests_DEPENDENCIES) 
	@rm -f SipTortureTests$(EXEEXT)
	$(CXXLINK) $(SipTortureTests_LDFLAGS) $(SipTortureTests_OBJECTS) $(SipTortureTests_LDADD) $(LIBS)
limpc$(EXEEXT): $(limpc_OBJECTS) $(limpc_DEPENDENCIES) 
	@rm -f limpc$(EXEEXT)
	$(CXXLINK) $(limpc_LDFLAGS) $(limpc_OBJECTS) $(limpc_LDADD) $(LIBS)
test1$(EXEEXT): $(test1_OBJECTS) $(test1_DEPENDENCIES) 
	@rm -f test1$(EXEEXT)
	$(CXXLINK) $(test1_LDFLAGS) $(test1_OBJECTS) $(test1_LDADD) $(LIBS)
test2$(EXEEXT): $(test2_OBJECTS) $(test2_DEPENDENCIES) 
	@rm -f test2$(EXEEXT)
	$(CXXLINK) $(test2_LDFLAGS) $(test2_OBJECTS) $(test2_LDADD) $(LIBS)
testApplicationSip$(EXEEXT): $(testApplicationSip_OBJECTS) $(testApplicationSip_DEPENDENCIES) 
	@rm -f testApplicationSip$(EXEEXT)
	$(CXXLINK) $(testApplicationSip_LDFLAGS) $(testApplicationSip_OBJECTS) $(testApplicationSip_LDADD) $(LIBS)
testClient$(EXEEXT): $(testClient_OBJECTS) $(testClient_DEPENDENCIES) 
	@rm -f testClient$(EXEEXT)
	$(CXXLINK) $(testClient_LDFLAGS) $(testClient_OBJECTS) $(testClient_LDADD) $(LIBS)
testCoders$(EXEEXT): $(testCoders_OBJECTS) $(testCoders_DEPENDENCIES) 
	@rm -f testCoders$(EXEEXT)
	$(CXXLINK) $(testCoders_LDFLAGS) $(testCoders_OBJECTS) $(testCoders_LDADD) $(LIBS)
testCountStream$(EXEEXT): $(testCountStream_OBJECTS) $(testCountStream_DEPENDENCIES) 
	@rm -f testCountStream$(EXEEXT)
	$(CXXLINK) $(testCountStream_LDFLAGS) $(testCountStream_OBJECTS) $(testCountStream_LDADD) $(LIBS)
testData$(EXEEXT): $(testData_OBJECTS) $(testData_DEPENDENCIES) 
	@rm -f testData$(EXEEXT)
	$(CXXLINK) $(testData_LDFLAGS) $(testData_OBJECTS) $(testData_LDADD) $(LIBS)
testDataPerformance$(EXEEXT): $(testDataPerformance_OBJECTS) $(testDataPerformance_DEPENDENCIES) 
	@rm -f testDataPerformance$(EXEEXT)
	$(CXXLINK) $(testDataPerformance_LDFLAGS) $(testDataPerformance_OBJECTS) $(testDataPerformance_LDADD) $(LIBS)
testDataStream$(EXEEXT): $(testDataStream_OBJECTS) $(testDataStream_DEPENDENCIES) 
	@rm -f testDataStream$(EXEEXT)
	$(CXXLINK) $(testDataStream_LDFLAGS) $(testDataStream_OBJECTS) $(testDataStream_LDADD) $(LIBS)
testDigestAuthentication$(EXEEXT): $(testDigestAuthentication_OBJECTS) $(testDigestAuthentication_DEPENDENCIES) 
	@rm -f testDigestAuthentication$(EXEEXT)
	$(CXXLINK) $(testDigestAuthentication_LDFLAGS) $(testDigestAuthentication_OBJECTS) $(testDigestAuthentication_LDADD) $(LIBS)
testDns$(EXEEXT): $(testDns_OBJECTS) $(testDns_DEPENDENCIES) 
	@rm -f testDns$(EXEEXT)
	$(CXXLINK) $(testDns_LDFLAGS) $(testDns_OBJECTS) $(testDns_LDADD) $(LIBS)
testEmbedded$(EXEEXT): $(testEmbedded_OBJECTS) $(testEmbedded_DEPENDENCIES) 
	@rm -f testEmbedded$(EXEEXT)
	$(CXXLINK) $(testEmbedded_LDFLAGS) $(testEmbedded_OBJECTS) $(testEmbedded_LDADD) $(LIBS)
testEmptyHeader$(EXEEXT): $(testEmptyHeader_OBJECTS) $(testEmptyHeader_DEPENDENCIES) 
	@rm -f testEmptyHeader$(EXEEXT)
	$(CXXLINK) $(testEmptyHeader_LDFLAGS) $(testEmptyHeader_OBJECTS) $(testEmptyHeader_LDADD) $(LIBS)
testForce$(EXEEXT): $(testForce_OBJECTS) $(testForce_DEPENDENCIES) 
	@rm -f testForce$(EXEEXT)
	$(CXXLINK) $(testForce_LDFLAGS) $(testForce_OBJECTS) $(testForce_LDADD) $(LIBS)
testGperfHash$(EXEEXT): $(testGperfHash_OBJECTS) $(testGperfHash_DEPENDENCIES) 
	@rm -f testGperfHash$(EXEEXT)
	$(CXXLINK) $(testGperfHash_LDFLAGS) $(testGperfHash_OBJECTS) $(testGperfHash_LDADD) $(LIBS)
testHack$(EXEEXT): $(testHack_OBJECTS) $(testHack_DEPENDENCIES) 
	@rm -f testHack$(EXEEXT)
	$(CXXLINK) $(testHack_LDFLAGS) $(testHack_OBJECTS) $(testHack_LDADD) $(LIBS)
testHash$(EXEEXT): $(testHash_OBJECTS) $(testHash_DEPENDENCIES) 
	@rm -f testHash$(EXEEXT)
	$(CXXLINK) $(testHash_LDFLAGS) $(testHash_OBJECTS) $(testHash_LDADD) $(LIBS)
testIM$(EXEEXT): $(testIM_OBJECTS) $(testIM_DEPENDENCIES) 
	@rm -f testIM$(EXEEXT)
	$(CXXLINK) $(testIM_LDFLAGS) $(testIM_OBJECTS) $(testIM_LDADD) $(LIBS)
testLogger$(EXEEXT): $(testLogger_OBJECTS) $(testLogger_DEPENDENCIES) 
	@rm -f testLogger$(EXEEXT)
	$(CXXLINK) $(testLogger_LDFLAGS) $(testLogger_OBJECTS) $(testLogger_LDADD) $(LIBS)
testMessageWaiting$(EXEEXT): $(testMessageWaiting_OBJECTS) $(testMessageWaiting_DEPENDENCIES) 
	@rm -f testMessageWaiting$(EXEEXT)
	$(CXXLINK) $(testMessageWaiting_LDFLAGS) $(testMessageWaiting_OBJECTS) $(testMessageWaiting_LDADD) $(LIBS)
testMsgHeaderDiagram$(EXEEXT): $(testMsgHeaderDiagram_OBJECTS) $(testMsgHeaderDiagram_DEPENDENCIES) 
	@rm -f testMsgHeaderDiagram$(EXEEXT)
	$(CXXLINK) $(testMsgHeaderDiagram_LDFLAGS) $(testMsgHeaderDiagram_OBJECTS) $(testMsgHeaderDiagram_LDADD) $(LIBS)
testMultipartMixedContents$(EXEEXT): $(testMultipartMixedContents_OBJECTS) $(testMultipartMixedContents_DEPENDENCIES) 
	@rm -f testMultipartMixedContents$(EXEEXT)
	$(CXXLINK) $(testMultipartMixedContents_LDFLAGS) $(testMultipartMixedContents_OBJECTS) $(testMultipartMixedContents_LDADD) $(LIBS)
testMultipartRelated$(EXEEXT): $(testMultipartRelated_OBJECTS) $(testMultipartRelated_DEPENDENCIES) 
	@rm -f testMultipartRelated$(EXEEXT)
	$(CXXLINK) $(testMultipartRelated_LDFLAGS) $(testMultipartRelated_OBJECTS) $(testMultipartRelated_LDADD) $(LIBS)
testParseBuffer$(EXEEXT): $(testParseBuffer_OBJECTS) $(testParseBuffer_DEPENDENCIES) 
	@rm -f testParseBuffer$(EXEEXT)
	$(CXXLINK) $(testParseBuffer_LDFLAGS) $(testParseBuffer_OBJECTS) $(testParseBuffer_LDADD) $(LIBS)
testParseNameAddr$(EXEEXT): $(testParseNameAddr_OBJECTS) $(testParseNameAddr_DEPENDENCIES) 
	@rm -f testParseNameAddr$(EXEEXT)
	$(CXXLINK) $(testParseNameAddr_LDFLAGS) $(testParseNameAddr_OBJECTS) $(testParseNameAddr_LDADD) $(LIBS)
testParserCategories$(EXEEXT): $(testParserCategories_OBJECTS) $(testParserCategories_DEPENDENCIES) 
	@rm -f testParserCategories$(EXEEXT)
	$(CXXLINK) $(testParserCategories_LDFLAGS) $(testParserCategories_OBJECTS) $(testParserCategories_LDADD) $(LIBS)
testPlainContents$(EXEEXT): $(testPlainContents_OBJECTS) $(testPlainContents_DEPENDENCIES) 
	@rm -f testPlainContents$(EXEEXT)
	$(CXXLINK) $(testPlainContents_LDFLAGS) $(testPlainContents_OBJECTS) $(testPlainContents_LDADD) $(LIBS)
testRandomHex$(EXEEXT): $(testRandomHex_OBJECTS) $(testRandomHex_DEPENDENCIES) 
	@rm -f testRandomHex$(EXEEXT)
	$(CXXLINK) $(testRandomHex_LDFLAGS) $(testRandomHex_OBJECTS) $(testRandomHex_LDADD) $(LIBS)
testResponses$(EXEEXT): $(testResponses_OBJECTS) $(testResponses_DEPENDENCIES) 
	@rm -f testResponses$(EXEEXT)
	$(CXXLINK) $(testResponses_LDFLAGS) $(testResponses_OBJECTS) $(testResponses_LDADD) $(LIBS)
testSdp$(EXEEXT): $(testSdp_OBJECTS) $(testSdp_DEPENDENCIES) 
	@rm -f testSdp$(EXEEXT)
	$(CXXLINK) $(testSdp_LDFLAGS) $(testSdp_OBJECTS) $(testSdp_LDADD) $(LIBS)
testServer$(EXEEXT): $(testServer_OBJECTS) $(testServer_DEPENDENCIES) 
	@rm -f testServer$(EXEEXT)
	$(CXXLINK) $(testServer_LDFLAGS) $(testServer_OBJECTS) $(testServer_LDADD) $(LIBS)
testSipFrag$(EXEEXT): $(testSipFrag_OBJECTS) $(testSipFrag_DEPENDENCIES) 
	@rm -f testSipFrag$(EXEEXT)
	$(CXXLINK) $(testSipFrag_LDFLAGS) $(testSipFrag_OBJECTS) $(testSipFrag_LDADD) $(LIBS)
testSipMessage$(EXEEXT): $(testSipMessage_OBJECTS) $(testSipMessage_DEPENDENCIES) 
	@rm -f testSipMessage$(EXEEXT)
	$(CXXLINK) $(testSipMessage_LDFLAGS) $(testSipMessage_OBJECTS) $(testSipMessage_LDADD) $(LIBS)
testSipMessageMemory$(EXEEXT): $(testSipMessageMemory_OBJECTS) $(testSipMessageMemory_DEPENDENCIES) 
	@rm -f testSipMessageMemory$(EXEEXT)
	$(CXXLINK) $(testSipMessageMemory_LDFLAGS) $(testSipMessageMemory_OBJECTS) $(testSipMessageMemory_LDADD) $(LIBS)
testSource$(EXEEXT): $(testSource_OBJECTS) $(testSource_DEPENDENCIES) 
	@rm -f testSource$(EXEEXT)
	$(CXXLINK) $(testSource_LDFLAGS) $(testSource_OBJECTS) $(testSource_LDADD) $(LIBS)
testSpeed$(EXEEXT): $(testSpeed_OBJECTS) $(testSpeed_DEPENDENCIES) 
	@rm -f testSpeed$(EXEEXT)
	$(CXXLINK) $(testSpeed_LDFLAGS) $(testSpeed_OBJECTS) $(testSpeed_LDADD) $(LIBS)
testSrv$(EXEEXT): $(testSrv_OBJECTS) $(testSrv_DEPENDENCIES) 
	@rm -f testSrv$(EXEEXT)
	$(CXXLINK) $(testSrv_LDFLAGS) $(testSrv_OBJECTS) $(testSrv_LDADD) $(LIBS)
testStack$(EXEEXT): $(testStack_OBJECTS) $(testStack_DEPENDENCIES) 
	@rm -f testStack$(EXEEXT)
	$(CXXLINK) $(testStack_LDFLAGS) $(testStack_OBJECTS) $(testStack_LDADD) $(LIBS)
testTcp$(EXEEXT): $(testTcp_OBJECTS) $(testTcp_DEPENDENCIES) 
	@rm -f testTcp$(EXEEXT)
	$(CXXLINK) $(testTcp_LDFLAGS) $(testTcp_OBJECTS) $(testTcp_LDADD) $(LIBS)
testThreadIf$(EXEEXT): $(testThreadIf_OBJECTS) $(testThreadIf_DEPENDENCIES) 
	@rm -f testThreadIf$(EXEEXT)
	$(CXXLINK) $(testThreadIf_LDFLAGS) $(testThreadIf_OBJECTS) $(testThreadIf_LDADD) $(LIBS)
testThreads$(EXEEXT): $(testThreads_OBJECTS) $(testThreads_DEPENDENCIES) 
	@rm -f testThreads$(EXEEXT)
	$(LINK) $(testThreads_LDFLAGS) $(testThreads_OBJECTS) $(testThreads_LDADD) $(LIBS)
testTime$(EXEEXT): $(testTime_OBJECTS) $(testTime_DEPENDENCIES) 
	@rm -f testTime$(EXEEXT)
	$(CXXLINK) $(testTime_LDFLAGS) $(testTime_OBJECTS) $(testTime_LDADD) $(LIBS)
testTimer$(EXEEXT): $(testTimer_OBJECTS) $(testTimer_DEPENDENCIES) 
	@rm -f testTimer$(EXEEXT)
	$(CXXLINK) $(testTimer_LDFLAGS) $(testTimer_OBJECTS) $(testTimer_LDADD) $(LIBS)
testTransactionFSM$(EXEEXT): $(testTransactionFSM_OBJECTS) $(testTransactionFSM_DEPENDENCIES) 
	@rm -f testTransactionFSM$(EXEEXT)
	$(CXXLINK) $(testTransactionFSM_LDFLAGS) $(testTransactionFSM_OBJECTS) $(testTransactionFSM_LDADD) $(LIBS)
testUdp$(EXEEXT): $(testUdp_OBJECTS) $(testUdp_DEPENDENCIES) 
	@rm -f testUdp$(EXEEXT)
	$(CXXLINK) $(testUdp_LDFLAGS) $(testUdp_OBJECTS) $(testUdp_LDADD) $(LIBS)
testUri$(EXEEXT): $(testUri_OBJECTS) $(testUri_DEPENDENCIES) 
	@rm -f testUri$(EXEEXT)
	$(CXXLINK) $(testUri_LDFLAGS) $(testUri_OBJECTS) $(testUri_LDADD) $(LIBS)
testXMLCursor$(EXEEXT): $(testXMLCursor_OBJECTS) $(testXMLCursor_DEPENDENCIES) 
	@rm -f testXMLCursor$(EXEEXT)
	$(CXXLINK) $(testXMLCursor_LDFLAGS) $(testXMLCursor_OBJECTS) $(testXMLCursor_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/InviteClient.Po
include ./$(DEPDIR)/InviteServer.Po
include ./$(DEPDIR)/Register.Po
include ./$(DEPDIR)/Registrar.Po
include ./$(DEPDIR)/SipTortureTests.Po
include ./$(DEPDIR)/TestSupport.Po
include ./$(DEPDIR)/limpc.Po
include ./$(DEPDIR)/test1.Po
include ./$(DEPDIR)/test2.Po
include ./$(DEPDIR)/testApplicationSip.Po
include ./$(DEPDIR)/testClient.Po
include ./$(DEPDIR)/testCoders.Po
include ./$(DEPDIR)/testCountStream.Po
include ./$(DEPDIR)/testData.Po
include ./$(DEPDIR)/testDataPerformance.Po
include ./$(DEPDIR)/testDataStream.Po
include ./$(DEPDIR)/testDigestAuthentication.Po
include ./$(DEPDIR)/testDns.Po
include ./$(DEPDIR)/testEmbedded.Po
include ./$(DEPDIR)/testEmptyHeader.Po
include ./$(DEPDIR)/testForce.Po
include ./$(DEPDIR)/testGperfHash.Po
include ./$(DEPDIR)/testHack.Po
include ./$(DEPDIR)/testHash.Po
include ./$(DEPDIR)/testIM.Po
include ./$(DEPDIR)/testLogger.Po
include ./$(DEPDIR)/testMessageWaiting.Po
include ./$(DEPDIR)/testMsgHeaderDiagram.Po
include ./$(DEPDIR)/testMultipartMixedContents.Po
include ./$(DEPDIR)/testMultipartRelated.Po
include ./$(DEPDIR)/testParseBuffer.Po
include ./$(DEPDIR)/testParseNameAddr.Po
include ./$(DEPDIR)/testParserCategories.Po
include ./$(DEPDIR)/testPlainContents.Po
include ./$(DEPDIR)/testRandomHex.Po
include ./$(DEPDIR)/testResponses.Po
include ./$(DEPDIR)/testSdp.Po
include ./$(DEPDIR)/testServer.Po
include ./$(DEPDIR)/testSipFrag.Po
include ./$(DEPDIR)/testSipMessage.Po
include ./$(DEPDIR)/testSipMessageMemory.Po
include ./$(DEPDIR)/testSource.Po
include ./$(DEPDIR)/testSpeed.Po
include ./$(DEPDIR)/testSrv.Po
include ./$(DEPDIR)/testStack.Po
include ./$(DEPDIR)/testTcp.Po
include ./$(DEPDIR)/testThreadIf.Po
include ./$(DEPDIR)/testThreads.Po
include ./$(DEPDIR)/testTime.Po
include ./$(DEPDIR)/testTimer.Po
include ./$(DEPDIR)/testTransactionFSM.Po
include ./$(DEPDIR)/testUdp.Po
include ./$(DEPDIR)/testUri.Po
include ./$(DEPDIR)/testXMLCursor.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cxx.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cxx.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cxx.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -gt `echo "$$banner" | wc -c` && \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -gt `echo "$$banner" | wc -c` && \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -n "$$skipped" && echo "$$skipped"; \
	  test -n "$$report" && echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-noinstLIBRARIES ctags distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
